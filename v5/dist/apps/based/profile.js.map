{"version":3,"file":"profile.js","sources":["../../../apps/based/profile/lib/wallpapers.js","../../../apps/based/profile/lib/theme-editor.js","../../../apps/based/profile/lib/api-keys.js","../../../apps/based/profile/lib/updateProfilePicture.js","../../../apps/based/profile/profile.js","../../../apps/based/profile/lib/bindUIEvents.js","../../../apps/based/profile/lib/user-settings.js"],"sourcesContent":["const wallpapers = {};\n\nwallpapers.legacyWallpapers = function (bp) {\n\n\n  if (bp.apps.wallpaper) {\n    renderWallpaperTypes($('.wallpaperTypes'));\n    bp.on('settings::wallpaper_color', 'update-wallpaper-color-picker', function(color){\n      $('.wallpaperOptionColor').setColor(color)\n      $('.simpleColorDisplay').html(color)\n\n      // update the color of the active wallpaper\n      let activeName = bp.apps.wallpaper.wallpaperManager.active;\n      let active = bp.apps.wallpaper.wallpaperManager.wallpapers[activeName];\n      if (active) {\n        active.changeColor(color);\n      } else {\n        console.log('cannot change color, active wallpaper not found', activeName)\n      }\n    });\n\n    function onSelect (context, hex) {\n      bp.set('wallpaper_color', '#' + hex);\n    }\n\n    function onCellEnter (context, hex) {\n      bp.set('wallpaper_color', '#' + hex);\n    }\n\n    $('.wallpaperOptionColor').simpleColor({\n      boxHeight: 20,\n      cellWidth: 16,\n      cellHeight: 16,\n      defaultColor: desktop.settings.wallpaper_color || '#008F11',\n      inputCSS: { 'border-radius': '4px', 'font-size': '4px', 'width': '10px' },\n      chooserCSS: { 'border': '1px solid #660033', 'top': '20px' },\n      displayCSS: {  },\n      displayColorCode: true,\n      livePreview: true,\n      insert: 'before',\n      onSelect: function (hex, element) {\n        onSelect(bp.apps.wallpaper.active, hex);\n      },\n      onCellEnter: function (hex, element) {\n        onCellEnter(bp.apps.wallpaper.active, hex);\n      },\n      onClose: function (element) {\n      }\n    });\n\n\n    $('input[name=wallpaper_opt]').on('input', function () {\n      let radioValue = $('input[name=wallpaper_opt]:checked').val();\n      // alert(`Setting wallpaper to ${radioValue}`);\n      // update desktop.settings.wallpaper_name\n      if (radioValue === 'url') {\n        $('.wallpaperColors').hide();\n        $('.wallpaperUrl').show();\n        let wallpaperUrl = bp.settings.wallpaper_url || '';\n        $('.wallpaperUrlInput').val(wallpaperUrl);\n        // alert('Please enter a valid URL for the wallpaper.');\n      } else {\n        $('.wallpaperColors').show();\n        $('.wallpaperUrl').hide();\n\n        bp.set('wallpaper_name', radioValue);\n      }\n    });\n\n    $('.wallpaperUrlButton').on('click', function () {\n      let _url = $('.wallpaperUrlInput').val().trim();\n      if (_url) {\n        // set the wallpaper to the URL\n        bp.set('wallpaper_url', _url);\n        bp.set('wallpaper_name', 'url');\n      } else {\n        alert('Please enter a valid URL for the wallpaper.');\n      }\n    });\n\n  }\n\n}\n\nfunction renderWallpaperTypes (el) {\n    for (let w in bp.apps.wallpaper.wallpaperManager._wallpapers) {\n      let _wallpaper = bp.apps.wallpaper.wallpaperManager._wallpapers[w];\n      let checked = '';\n      if (w === desktop.settings.wallpaper_name) {\n        checked = 'checked';\n      }\n      let str = `\n      <input type=\"radio\" id=\"wallPaperRadio${w}\" name=\"wallpaper_opt\" class=\"wallpaper_opt\" value=\"${w}\" ${checked}>\n      <label for=\"wallPaperRadio${w}\">${_wallpaper.label}</label>\n      <br>\n      `;\n      el.append(str);\n    }\n  }\n\n  export default wallpapers;","export default function themeEditor(themeName) {\n    let themeData = this.bp.apps.themes.themes[themeName];\n    let themeStyles = themeData.styles || {};\n\n    // Create a deep copy so edits don't mutate original\n    let editableTheme = JSON.parse(JSON.stringify(themeData));\n\n    // Target container and clear it\n    let themeStylesContainer = $('.theme-styles', this.profileWindow.content);\n    themeStylesContainer.html(''); // clear previous content\n\n    for (let styleName in themeStyles) {\n        let styleValue = themeStyles[styleName];\n\n        // Top-level style wrapper\n        let styleDiv = $('<div class=\"theme-style\"></div>');\n        let contentDiv = $('<div class=\"theme-style-content\"></div>');\n\n        contentDiv.append(`<div class=\"style-title\">${styleName}</div>`);\n\n        for (let prop in styleValue) {\n            let val = styleValue[prop];\n            let inputId = `input_${styleName}_${prop}`.replace(/\\W+/g, '_');\n\n            let colorInput = '';\n            if (isColorProperty(prop, val)) {\n                let safeColor = val.startsWith('#') ? val : '#ffffff';\n                colorInput = `<input type=\"color\" value=\"${safeColor}\" data-style=\"${styleName}\" data-prop=\"${prop}\" class=\"color-picker\" />`;\n            }\n\n            contentDiv.append(`\n                <div class=\"prop-row\">\n                    <label class=\"prop-name\">${prop}:</label>\n                    <input type=\"text\" id=\"${inputId}\" value=\"${val}\" data-style=\"${styleName}\" data-prop=\"${prop}\" />\n                    ${colorInput}\n                </div>\n            `);\n        }\n\n        // TODO: keep this commented for future use\n        /*\n        contentDiv.append(`\n            <div class=\"prop-row\">\n                <label class=\"prop-name\">+</label>\n                <input type=\"text\" class=\"new-prop-name\" placeholder=\"property\" data-style=\"${styleName}\" />\n                <input type=\"text\" class=\"new-prop-value\" placeholder=\"value\" data-style=\"${styleName}\" />\n                <button class=\"add-prop-btn\" data-style=\"${styleName}\">Add</button>\n            </div>\n        `);\n        */\n\n        styleDiv.append(contentDiv);\n        themeStylesContainer.append(styleDiv);\n    }\n\n    // 🔁 Listen to changes and update theme live\n    themeStylesContainer.on('input', 'input[type=\"text\"], input.color-picker', function (e) {\n        $('.themeSelect', this.profileWindow.content).val('Custom');\n\n        let style = $(e.target).data('style');\n        let prop = $(e.target).data('prop');\n        if (!style || !prop) return;\n\n        let newValue = $(e.target).val();\n\n        // Sync color picker and text input\n        if ($(e.target).hasClass('color-picker')) {\n            let closestTextInput = $(e.target).closest('.prop-row').find('input[type=\"text\"]');\n            closestTextInput.val(newValue);\n        }\n\n        editableTheme.styles[style][prop] = newValue;\n        editableTheme.name = 'Custom';\n        this.bp.apps.themes.applyTheme(editableTheme);\n    }.bind(this));\n\n    // ➕ Add new property\n    themeStylesContainer.on('click', '.add-prop-btn', function (e) {\n        let style = $(e.target).data('style');\n        let row = $(e.target).closest('div');\n        let propInput = row.find('.new-prop-name');\n        let valInput = row.find('.new-prop-value');\n\n        let newProp = propInput.val().trim();\n        let newVal = valInput.val().trim();\n\n        if (newProp && newVal) {\n            editableTheme.styles[style][newProp] = newVal;\n            $('.themeSelect', this.profileWindow.content).trigger('change');\n        }\n    }.bind(this));\n\n    // ❌ Remove property\n    themeStylesContainer.on('click', '.remove-prop-btn', function (e) {\n        let style = $(e.target).data('style');\n        let prop = $(e.target).data('prop');\n        delete editableTheme.styles[style][prop];\n        $('.themeSelect', this.profileWindow.content).trigger('change');\n    }.bind(this));\n\n    console.log('themeData', themeData);\n}\n\nfunction isColorProperty(prop, value) {\n    const colorProps = [\n        'color', 'background', 'background-color', 'border-color',\n        'outline-color', 'text-decoration-color', 'column-rule-color',\n        'fill', 'stroke'\n    ];\n\n    const isColorKey = colorProps.includes(prop.toLowerCase());\n\n    const colorRegex = /^#([0-9a-f]{3}|[0-9a-f]{6})$/i\n        || /^rgba?\\(.+\\)$/i\n        || /^hsla?\\(.+\\)$/i\n        || /^[a-z]+$/i; // named colors\n\n    const isColorValue = colorRegex.test(value);\n\n    return isColorKey || isColorValue;\n}\n","export default async function apiKeys() {\n    let roles = ['deploy', 'read', 'write', 'admin'];\n\n    // Populate role checkboxes\n    const roleBox = $('#bp-api-keys-roles');\n    roles.forEach(role => {\n        const id = `bp-api-role-${role}`;\n        let checked = '';\n\n        if (role === 'deploy') {\n            checked = 'checked'; // Default to deploy role being checked\n        }\n\n        roleBox.append(`\n      <label for=\"${id}\" class=\"bp-api-keys-role-label\">\n        <input type=\"checkbox\" name=\"roles\" value=\"${role}\" id=\"${id}\" ${checked} />\n        ${role}\n      </label>\n    `);\n    });\n\n    // Handle form submission\n    $('.bp-api-keys-form').on('submit', async function (e) {\n        e.preventDefault();\n        const form = $(this);\n        const name = form.find('input[name=\"name\"]').val();\n        const expiry = form.find('input[name=\"expiry\"]').val();\n        const roles = form.find('input[name=\"roles\"]:checked')\n            .map(function () { return this.value; })\n            .get();\n\n        if (!name || roles.length === 0) {\n            alert('Please provide a name and at least one role.');\n            return false;\n        }\n\n        try {\n            const newKey = await client.addApiKey(name, roles, expiry || null);\n\n            console.log('New API key created:', newKey);\n            renderApiKeys(); // Refresh key list\n        } catch (err) {\n            alert('Failed to create API key');\n            console.error(err);\n        }\n        return false;\n    });\n\n    async function renderApiKeys() {\n        const list = $('#bp-api-keys-list');\n        list.empty();\n        const apiKeys = await client.getApiKeys();\n\n        apiKeys.forEach((key) => {\n            const keyPrefix = 'Hidden, click \"Reveal\" to show API Key';\n            const roles = Array.isArray(key.roles) ? key.roles : (key.role ? [key.role] : []);\n            const created = new Date(key.ctime || key.created_at).toLocaleString();\n            const expiry = key.expiry ? new Date(key.expiry).toLocaleDateString() : 'Never';\n            const usage = key.usage ? `${key.usage} times` : 'Not used yet';\n\n            const li = $(`\n  <li class=\"bp-api-keys-list-item\">\n    <div class=\"bp-api-keys-card\">\n      <div class=\"bp-api-keys-header\">\n        <strong class=\"bp-api-keys-name\">${key.name}</strong>\n        <button class=\"bp-api-keys-revoke\" data-id=\"${key.id}\">Revoke</button>\n      </div>\n\n      <div class=\"bp-api-keys-keybox\" data-full=\"${key.key || key.id}\">\n        <code class=\"bp-api-keys-code\">${keyPrefix}</code>\n        <div class=\"bp-api-keys-buttons\">\n          <button class=\"bp-api-keys-reveal\">Reveal</button>\n          <button class=\"bp-api-keys-copy\">Copy</button>\n          <button class=\"bp-api-keys-verify\">Verify</button>\n        </div>\n        <div class=\"bp-api-keys-status\"></div>\n      </div>\n\n      <div class=\"bp-api-keys-meta\">\n        <div><strong>Roles:</strong> ${roles.join(', ')}</div>\n        <div><strong>Created:</strong> ${created}</div>\n        <div><strong>Expiry:</strong> ${expiry}</div>\n        <div><strong>Used:</strong> <span class=\"usage-count\">${usage}</span></div>\n\n      </div>\n    </div>\n  </li>\n`);\n\n\n            list.append(li);\n        });\n\n        // Handle key reveal\n        $('.bp-api-keys-reveal').on('click', function () {\n            const box = $(this).closest('.bp-api-keys-keybox');\n            const fullKey = box.data('full');\n            box.find('code').text(fullKey);\n            $(this).remove(); // Remove the button after revealing\n        });\n\n        // Handle copy to clipboard\n        $('.bp-api-keys-copy').on('click', function () {\n            const box = $(this).closest('.bp-api-keys-keybox');\n            const fullKey = box.data('full');\n            if (navigator.clipboard) {\n                navigator.clipboard.writeText(fullKey).then(() => {\n                    $(this).text('Copied!');\n                    setTimeout(() => $(this).text('Copy'), 1500);\n                });\n            } else {\n                alert('Clipboard API not supported in this browser.');\n            }\n        });\n\n        // Handle API key verification\n        $('.bp-api-keys-verify').on('click', async function () {\n            const box = $(this).closest('.bp-api-keys-keybox');\n            const fullKey = box.data('full');\n            const statusBox = box.find('.bp-api-keys-status');\n\n            // Get roles from meta block\n            const rolesText = box.closest('.bp-api-keys-card').find('.bp-api-keys-meta')\n                .find('div:contains(\"Roles:\")').text().replace('Roles:', '').trim();\n            const roles = rolesText.split(',').map(r => r.trim()).filter(Boolean);\n\n            statusBox.text('Verifying…');\n\n            try {\n                const result = await client.validateApiKey(fullKey, roles);\n                if (result.valid) {\n                    statusBox.text('✅ Valid').css('color', 'green');\n                    // update usage count\n                    const usageCount = box.closest('.bp-api-keys-card').find('.usage-count');\n                    usageCount.text(result.usage + ' times' || '0 times');\n                } else {\n                    statusBox.text(`❌ Invalid (${result.reason || 'unknown'})`).css('color', 'red');\n                }\n            } catch (err) {\n                console.error('Validation failed', err);\n                statusBox.text('❌ Error validating key').css('color', 'red');\n            }\n        });\n\n\n        // Handle revoke\n        $('.bp-api-keys-revoke').on('click', async function () {\n            const keyId = $(this).data('id');\n            if (!confirm('Are you sure you want to revoke this API key?')) return;\n            await client.revokeApiKey(keyId);\n            renderApiKeys(); // Refresh list\n        });\n    }\n\n\n    renderApiKeys(); // Initial load\n}\n\n\nconst client = {};\n\nclient.endpoint = buddypond.apiKeysEndpoint;\n\nclient.addApiKey = async function (name, roles, expiry) {\n    return await client.apiRequest('/api-keys', 'POST', {\n        name,\n        roles,\n        expiry\n    });\n};\n\nclient.revokeApiKey = async function (keyId) {\n    return await client.apiRequest(`/api-keys/${keyId}`, 'DELETE');\n};\n\nclient.getApiKeys = async function () {\n    const keys = await client.apiRequest('/api-keys', 'GET');\n    if (Array.isArray(keys)) return keys;\n    throw new Error('Invalid API key list');\n};\n\nclient.validateApiKey = async function (key, requireRole) {\n    if (!key || !requireRole || !Array.isArray(requireRole) || requireRole.length === 0) {\n        throw new Error('Invalid key or requireRole parameter');\n    }\n    return await client.apiRequest('/api-keys/validate', 'POST', {\n        key,\n        requireRole\n    });\n};\n\n\nclient.apiRequest = async (uri, method = 'GET', data = null) => {\n\n    const options = {\n        method: method\n    };\n\n    let headers = {\n        \"Accept\": \"application/json\",\n        \"Content-Type\": \"application/json; charset=utf-8\",\n        \"X-Me\": buddypond.me\n    };\n    if (buddypond.qtokenid) {\n        headers[\"Authorization\"] = `Bearer ${buddypond.qtokenid}`; // ✅ Use Authorization header\n    }\n\n\n    if (data) {\n        options.body = JSON.stringify(data);\n    }\n\n    options.headers = headers;\n\n    let url = `${client.endpoint}${uri}`;\n    console.log('admin client making api request', url, options);\n\n\n    try {\n        const response = await fetch(url, options);\n        if (!response.ok) {\n            throw new Error(`HTTP error! status: ${response.status}`);\n        }\n        return await response.json();\n    } catch (error) {\n        console.error('Error in API request:', error);\n        throw error;\n    }\n\n};","export default function updateProfilePicture(event, profilePictureImg) {\n  const file = event.target.files[0];\n  const profilePictureInput = event.target;\n  const statusElement = document.querySelector('.aim-profile-picture-upload-status');\n  const statusText = statusElement.querySelector('.status-text');\n\n  // Helper function to update status\n  const updateStatus = (text, state) => {\n    statusElement.classList.remove('uploading', 'success', 'error', 'hidden');\n    statusText.textContent = text;\n    statusElement.classList.add(state);\n    statusElement.style.display = 'block';\n  };\n\n  // Helper function to hide status after delay\n  const hideStatusAfterDelay = (delay = 3000) => {\n    setTimeout(() => {\n      statusElement.classList.add('hidden');\n      statusElement.style.display = 'none';\n    }, delay);\n  };\n\n  if (file) {\n    // Validate file type\n    const validImageTypes = ['image/jpeg', 'image/png', 'image/gif', 'image/jpg', 'image/webp'];\n    if (!validImageTypes.includes(file.type)) {\n      updateStatus('Please select a valid image file (JPEG, PNG, or GIF).', 'error');\n      profilePictureInput.value = ''; // Clear the input\n      hideStatusAfterDelay();\n      return;\n    }\n\n    // Load and resize image\n    const img = new Image();\n    const reader = new FileReader();\n    reader.onload = (e) => {\n      img.src = e.target.result;\n      img.onload = async () => {\n        // Resize image to 128x128 using Canvas\n        const canvas = document.createElement('canvas');\n        const ctx = canvas.getContext('2d');\n        canvas.width = 128;\n        canvas.height = 128;\n\n        // Calculate scaling to maintain aspect ratio\n        const scale = Math.min(128 / img.width, 128 / img.height);\n        const scaledWidth = img.width * scale;\n        const scaledHeight = img.height * scale;\n        const offsetX = (128 - scaledWidth) / 2;\n        const offsetY = (128 - scaledHeight) / 2;\n\n        // Draw scaled image on canvas\n        ctx.fillStyle = 'white'; // Optional: white background for transparency\n        ctx.fillRect(0, 0, 128, 128);\n        ctx.drawImage(img, offsetX, offsetY, scaledWidth, scaledHeight);\n\n        // Convert canvas to blob (JPEG for compression)\n        try {\n          const blob = await new Promise((resolve) => {\n            canvas.toBlob(\n              (blob) => resolve(blob),\n              'image/jpeg',\n              0.8 // JPEG quality (0.8 balances size and quality)\n            );\n          });\n\n          // Validate resized file size (300KB = 300 * 1024 bytes)\n          const maxSize = 300 * 1024;\n          if (blob.size > maxSize) {\n            updateStatus('Resized image exceeds 300KB. Please choose a smaller image.', 'error');\n            profilePictureInput.value = ''; // Clear the input\n            hideStatusAfterDelay();\n            return;\n          }\n\n          // Show preview\n          const previewUrl = URL.createObjectURL(blob);\n          profilePictureImg.src = previewUrl;\n\n          // Create a new img element inside .aim-profile-picture-preview\n          const previewImg = document.createElement('img');\n          previewImg.src = previewUrl;\n          previewImg.classList.add('aim-profile-picture-img');\n          const profilePicturePreview = document.querySelector('.aim-profile-picture-preview');\n          profilePicturePreview.innerHTML = ''; // Clear previous preview\n          profilePicturePreview.appendChild(previewImg);\n\n          // Proceed with upload\n          updateStatus('Uploading...', 'uploading');\n          const resizedFile = new File([blob], file.name, {\n            type: 'image/jpeg',\n            lastModified: Date.now(),\n          });\n\n          try {\n            let onProgress = (progress) => {\n              // Assuming progress is a value between 0 and 1\n              const percentage = Math.round(progress * 100);\n              updateStatus(`Uploading: ${percentage}%`, 'uploading');\n            };\n\n\n            // prefix '/profile-pics/' to the file path\n            resizedFile.filePath = '/profile-pics/' + resizedFile.name;\n\n            console.log('Uploading file:', resizedFile);\n\n            let url;\n            try {\n              url = await buddypond.uploadFile(resizedFile, onProgress);\n              console.log('File uploaded to:', url);\n              updateStatus('Upload complete!', 'success');\n              hideStatusAfterDelay();\n\n            } catch (err) {\n              console.error('Error uploading file:', err);\n              updateStatus('Upload failed: ' + err.message, 'error');\n              return;\n            }\n\n            //let url = 'https://files.buddypond.com/Jane/profile-pics/terry-called.jpg';\n            console.log('File uploaded to:', url);\n\n            // update the profile picture for buddylist API\n            await this.bp.apps.buddylist.client.setStatus(this.bp.me, {\n              profilePicture : url\n            });\n\n            // in addition we will update the wsClient metadata for each messages websocket connection\n            // this is to ensure that connected buddies feature immediately reflects the new profile picture\n            this.bp.apps.client.messagesWsClients.forEach((client) => {\n              // console.log('Updating wsClient metadata for', client);\n              // send the updateProfile action\n              client.wsClient.send(JSON.stringify({\n                action: 'updateProfile',\n                profile: {\n                  profilePicture: url\n                }\n              }));\n            });\n\n            // set the local profile state ( for use in sending messages)\n            this.bp.apps.buddylist.data.profileState.profilePicture = url;\n\n            /*\n            // Simulate upload for testing (remove when real upload is implemented)\n            await new Promise((resolve) => setTimeout(resolve, 2000));\n            onProgress(0.5); // Simulate 50% progress\n            await new Promise((resolve) => setTimeout(resolve, 1000));\n            onProgress(1); // Simulate 100% progress\n            */\n\n\n            // Stub for uploading profile picture API call\n            // await this.bp.apps.client.api.uploadProfilePicture(resizedFile);\n          } catch (error) {\n            console.error('Upload error:', error);\n            updateStatus('Upload failed. Please try again.', 'error');\n            hideStatusAfterDelay();\n          }\n\n          // Clean up (only revoke if not needed for persistent preview)\n          // URL.revokeObjectURL(previewUrl);\n        } catch (error) {\n          console.error('Error processing image:', error);\n          updateStatus('Error processing image. Please try again.', 'error');\n          profilePictureInput.value = ''; // Clear the input\n          hideStatusAfterDelay();\n        }\n      };\n      img.onerror = () => {\n        updateStatus('Failed to load image. Please select a valid image file.', 'error');\n        profilePictureInput.value = ''; // Clear the input\n        hideStatusAfterDelay();\n      };\n    };\n    reader.readAsDataURL(file);\n  }\n}","import wallpapers from './lib/wallpapers.js';\nimport themeEditor from './lib/theme-editor.js';\nimport apiKeys from './lib/api-keys.js';\nimport bindUIEvents from './lib/bindUIEvents.js';\n// import LoadingContainer from '../ui/LoadingContainer/LoadingContainer.js';\nlet defaultFileContent = {};\n\n\nexport default class Profile {\n    constructor(bp, options = {}) {\n        this.bp = bp;\n        return this;\n    }\n\n    async init() {\n\n        // injects CSS link tag into the head of document\n        await this.bp.load('/v5/apps/based/profile/profile.css');\n        // await this.bp.load('/v5/apps/based/ui/LoadingContainer/LoadingContainer.css');\n        await this.bp.load('browser');\n        await this.bp.appendScript('/desktop/assets/js/jquery.simple-color.js');\n\n        // fetches html from the fragment and returns it as a string\n        this.html = await this.bp.load('/v5/apps/based/profile/profile.html');\n\n        return 'loaded Profile';\n    }\n\n    async open(options = {}) {\n\n        let buddyname = this.bp.me || options.context;\n        buddyname = buddyname.replace(\":\", \"\"); // remove any colons for now\n        buddyname = buddyname.replace(\" \", \"\"); // remove any spaces for now\n\n        // Create main content div and setup for tabs\n        let contentDiv = document.createElement('div');\n        contentDiv.classList.add('customProfile');\n\n        // create a new element from the html string\n        let profileContent = document.createElement('div');\n        profileContent.innerHTML = this.html;\n        //contentDiv.append($(buddyProfilePad.content).html());\n        //$(contentDiv).html(buddyProfilePad.content);\n        // $('.myProfile', profileContent).html(contentDiv);\n        //profileContent.append(contentDiv);\n\n        // Initialize tabs\n        if (!this.profileWindow) {\n            this.profileWindow = this.bp.apps.ui.windowManager.createWindow({\n                id: 'profile',\n                title: 'Profile - ' + buddyname,\n                x: 50,\n                y: 100,\n                width: 800,\n                height: 500,\n                minWidth: 200,\n                minHeight: 200,\n                parent: $('#desktop')[0],\n                icon: '/desktop/assets/images/icons/icon_myprofile_64.png',\n                context: buddyname || 'default',\n                content: profileContent,\n                resizable: true,\n                minimizable: true,\n                maximizable: true,\n                closable: true,\n                focusable: true,\n                maximized: false,\n                minimized: false,\n                onClose: () => {\n                    this.profileWindow = null;\n                }\n            });\n            this.profileWindow.loggedIn = true;\n            this.tabs = new this.bp.apps.ui.Tabs('.tabs-container', '#' + this.profileWindow.id); // Initialize the tab functionality\n\n            this.tabs.onTab(async (tabId) => {\n                if (this.bp.me !== 'Guest') {\n                    $('.loggedIn', this.profileWindow.content).flexShow();\n                    $('.loggedOut', this.profileWindow.content).flexHide();\n\n                } else {\n                    $('.loggedIn', this.profileWindow.content).flexHide();\n                    $('.loggedOut', this.profileWindow.content).flexShow();\n\n                }\n            });\n\n            wallpapers.legacyWallpapers(bp);\n\n            this.bindUIEvents(options);\n\n\n            if (this.bp.me !== 'Guest') {\n                $('.loggedIn', this.profileWindow.content).flexShow();\n                $('.loggedOut', this.profileWindow.content).flexHide();\n\n            } else {\n                $('.loggedIn', this.profileWindow.content).flexHide();\n                $('.loggedOut', this.profileWindow.content).flexShow();\n                // navigate to themes tag by default if not logged in\n                this.tabs.showTab('#tab-themes');\n            }\n\n\n        } else {\n            // this.profileWindow.content.innerHTML = '';\n            // If the window exists and the context has changed, re-render the content\n            this.profileWindow.content = contentDiv;\n            if (this.profileWindow.context !== buddyname) {\n                this.profileWindow.context = buddyname;\n                $(this.profileWindow.content).html(contentDiv.innerHTML);\n                this.profileWindow.setTitle('Profile - ' + buddyname);\n                new this.bp.apps.ui.Tabs('#' + this.profileWindow.id); // Re-initialize the tab functionality\n                // this.profileWindow.render(); Uncomment if there's a render method to refresh the window\n            }\n        }\n\n        $('.yourApps tbody', this.profileWindow.content).html('');\n        for (let appName in bp.settings.apps_installed) {\n            // renderProfileApp(appName, $('.yourApps')[0]);\n        }\n\n        //$('.profileContent .ctime', this.profileWindow.content).html(buddyProfile.ctime);\n        //console.log('buddyProfile', buddyProfile);\n        //$('.buddyname', this.profileWindow.content).html(buddyProfile.buddyProfile.me);\n\n        // set the liveProfileLink\n        let liveLink = this.bp.config.host + '/' + this.bp.me\n        $('.liveProfileLink', this.profileWindow.content).attr('href', liveLink);\n        $('.liveProfileLink', this.profileWindow.content).html(liveLink);\n\n        $('.loggedIn', this.profileWindow).hide();\n        // $('.loggedIn').hide();\n\n\n        return this.profileWindow;\n\n    }\n}\n\nfunction renderProfileApp(appName, container) {\n    //app = desktop.app.appstore.apps[appName]\n    let app = bp.apps.desktop.appsList[appName];\n    //console.log('renderProfileApp', appName, app);\n\n    //console.log('renderProfileApp', appName, app);\n    // don't show Profile App itself in Profile App List\n    if (appName === 'profile') {\n        return;\n    }\n    let str = `\n      <tr class=\"open-app\" data-app=\"${appName}\">\n        <td>\n          <img class=\"appStoreIcon float-left\" src=\"desktop/assets/images/icons/icon_${app.icon || appName}_64.png\" />\n        </td>\n        <td>\n         ${app.description || app.label || appName}\n        </td>\n    </tr>`;\n    let el = document.createElement('tr');\n    el.classList.add('open-app');\n    el.setAttribute('data-app', appName);\n    el.innerHTML = str;\n    container.append(el);\n    return str;\n}\n\nProfile.prototype.bindUIEvents = bindUIEvents;\nProfile.prototype.themeEditor = themeEditor;\nProfile.prototype.apiKeys = apiKeys;","import userSettings from './user-settings.js';\nimport updateProfilePicture from './updateProfilePicture.js';\n//import audioSettings from './audio-settings.js';\n//import PadEditor from '../../pad/PadEditor.js';\n\nexport default function bindUIEvents(options = {}) {\n\n    const profilePictureInput = document.getElementById('profile-picture-input');\n    const profilePictureImg = document.querySelector('.aim-profile-picture-img');\n    // const removeButton = document.querySelector('.aim-profile-picture-remove');\n\n    $('.aim-set-password-email').on('click', (e) => {\n        this.tabs.navigateToTab('#tabs-3');\n    });\n\n    // Handle file selection\n    profilePictureInput.addEventListener('change', async (event) => {\n        updateProfilePicture.call(this, event, profilePictureImg);\n    });\n    /*\n    // Handle remove button click\n    removeButton.addEventListener('click', () => {\n        // Reset to default avatar\n\n        // This is done by calling setStatus profile.profilePicture = '';\n        // await this.bp.apps.client.api.uploadProfilePicture(resizedFile);\n\n        // profilePictureImg.src = '/default-avatar.png';\n\n        // Stub for removing profile picture API call\n        // TODO: Replace with actual API call\n        console.log('Removing profile picture');\n        // Example: removeProfilePicture().then(() => {\n        //     profilePictureImg.src = '/default-avatar.png';\n        // }).catch(error => {\n        //     console.error('Remove failed:', error);\n        // });\n    });\n    */\n\n    // check if user profile has a profilePicture\n    let profilePicture;\n    if (this.bp.apps.buddylist && this.bp.apps.buddylist.data && this.bp.apps.buddylist.data.profileState) {\n        profilePicture = this.bp.apps.buddylist.data.profileState.profilePicture;\n    }\n\n    let profilePicturePreview = $('.aim-profile-picture-preview');\n\n    if (profilePicture) {\n\n        // profilePicture is a url, set the profilePicturePreview to the url\n        // create a new img element inside .aim-profile-picture-preview\n        let img = document.createElement('img');\n        img.src = profilePicture;\n        img.classList.add('aim-profile-picture-img');\n        profilePicturePreview.html(img);\n\n\n    } else {\n        try {\n            const avatar = this.bp.vendor.dicebear.createAvatar(this.bp.vendor.dicebearAvatars, {\n                seed: this.bp.me, // Username as seed for consistent avatar\n                size: 128, // Avatar size in pixels\n                backgroundColor: [\"#f0f0f0\"], // Optional: Customize background\n            });\n\n            // Convert avatar to SVG string\n            const svg = avatar.toString();\n            console.log('Avatar SVG:', svg);\n\n            profilePicturePreview.html(svg);\n        } catch (err) {\n            console.error('Error generating avatar:', err);\n        }\n\n\n    }\n\n    $('.editProfileButton', this.profileWindow.content).on('click', () => {\n        // show the profile editor\n        $('.profileEditor', this.profileWindow.content).flexShow();\n        // hide the profile content\n        $('.customProfile', this.profileWindow.content).flexHide();\n        $('.updateProfileHtml', this.profileWindow.content).flexShow();\n        $('.cancelProfileEdit', this.profileWindow.content).flexShow();\n    });\n\n    //        $('.profileEditor', this.profileWindow.content).appendTo(this.profileWindow.content);\n\n    // $('.profileHtml', this.profileWindow.content).val(buddyProfilePad.content);\n\n    $('.cancelProfileEdit', this.profileWindow.content).on('click', () => {\n        // hide the profile editor\n        $('.profileEditor', this.profileWindow.content).flexHide();\n        // show the profile content\n        $('.customProfile', this.profileWindow.content).flexShow();\n        $('.updateProfileHtml', this.profileWindow.content).flexHide();\n        $('.cancelProfileEdit', this.profileWindow.content).flexHide();\n    });\n\n    $('.updateProfileHtml').flexHide();\n    $('.cancelProfileEdit').flexHide();\n\n    // TODO: add these back\n    //audioSettings(bp);\n    userSettings(bp);\n\n\n    let padEditorHolder = $('.profile-pad-editor-holder', this.profileWindow.content)[0];\n    // padEditorHolder.className = 'pad-editor-holder';\n\n    /*\n    let fileExplorer = await this.bp.apps['file-explorer'].create();\n    console.log('fffff', fileExplorer.fileExplorer.container)\n    padEditorHolder.append(fileExplorer.fileExplorer.container);\n    profileContent.append(padEditorHolder);\n    */\n\n    let profileUrl = this.bp.config.host + '/' + this.bp.me;\n    // check if this.bp.config.host contains buddypond.com, if not append /index.html\n    if (this.bp.config.host.indexOf('buddypond.com') === -1) {\n        profileUrl = profileUrl + '/index.html';\n    }\n\n    if (!this.browser) {\n        this.browser = new this.bp.apps.browser.BrowserWindow(this.bp, padEditorHolder, profileUrl);\n\n    }\n\n    let yourProfile = $('#your-profile', this.profileWindow.content);\n    this.bp.on('file-explorer::update', 'update-profile-preview-if-profile-index', (data) => {\n        // check if data.path is /index.html\n        // if so, we wish to reload the browser window\n        this.browser.navigate(profileUrl);\n    });\n\n    yourProfile.append(padEditorHolder);\n\n    // TODO: navigate to tabs? this.tabs.showTab(options.context);\n    if (options.context && options.context === 'themes') {\n        $('.themesLink').click();\n    }\n\n    $('.me').html(this.bp.me);\n\n    if (options && options.type === 'settings') {\n        // if type is user-settings, show the user settings tab\n        this.tabs.showTab('#tabs-3');\n    }\n\n    if (options && options.type === 'themes') {\n        // if type is user-settings, show the user settings tab\n        this.tabs.showTab('#tabs-2');\n    }\n\n    $('.themeSelect', this.profileWindow.content).on('change', (e) => {\n        let val = $(e.target).val();\n        if (val === 'Custom') {\n            // get the custom theme styles\n            //let customTheme = this.bp.settings.custom_theme;\n            //this.bp.apps.themes.applyTheme(customTheme); // Apply selected theme\n            // do nothing\n            return;\n        }\n        this.bp.apps.themes.applyTheme(val); // Apply selected theme\n        this.themeEditor(val);\n    });\n\n    // set value of themeSelect to current theme\n    let currentTheme = this.bp.get('active_theme') || 'Light';\n    $('.themeSelect', this.profileWindow.content).val(currentTheme);\n    // trigger change to apply the theme\n    $('.themeSelect', this.profileWindow.content).trigger('change');\n\n    this.bp.on('settings::active_theme', 'update-dropdown', (data) => {\n        // Update the dropdown to reflect the new active theme\n        let activeTheme = this.bp.get('active_theme') || 'Light';\n        //$('.themeSelect', this.profileWindow.content).val(activeTheme);\n        //$('.themeSelect', this.profileWindow.content).trigger('change');\n    });\n\n    if (this.bp.me !== 'Guest') {\n        this.apiKeys();\n    }\n\n    $('.loggedIn', this.profileWindow).hide();\n    // $('.loggedIn').hide();\n\n\n\n\n}","export default async function legacyUserSettings(bp) {\n    $('.updateProfileButton').on('click', async function () {\n        let updates = {};\n        updates.email = $('.buddy_email').val();\n        updates.password = $('.buddy_password').val();\n        updates.confirmPassword = $('.confirm_buddy_password').val();\n        $('.updateProfileResponse').html('');\n        if (updates.password) {\n            if (!updates.confirmPassword || (updates.password !== updates.confirmPassword)) {\n                $('.updateProfileResponse').addClass('error');\n                $('.updateProfileResponse').html('Passwords do not match');\n                return;\n            }\n        }\n        console.log('Updating profile with', updates);\n        $('.updateProfileResponse').removeClass('error');\n        try {\n            let passwordChanged = await buddypond.updateAccount({ buddyname: bp.me, password: updates.password, email: updates.email });\n            console.log('password changed', passwordChanged);\n            // update successful\n            if (passwordChanged) {\n                $('.updateProfileResponse').html('Account updated successfully');\n            }\n        } catch (e) {\n            $('.updateProfileResponse').addClass('error');\n            $('.updateProfileResponse').html('Error: ' + e.message);\n            return;\n        }\n\n        /*\n        buddypond.updateBuddyProfile({ updates: updates }, function (err, res) {\n            if (res.error) {\n                alert(res.message);\n                return;\n            }\n            $('.updateProfileResponse').html('Updated!');\n        });\n        */\n    });\n\n    if (bp.apps.buddylist && bp.apps.buddylist.data.profileState && bp.apps.buddylist.data.profileState.email) {\n        $('.buddy_email').val(bp.apps.buddylist.data.profileState.email);\n    }\n    if (bp.apps.buddylist && bp.apps.buddylist.data.profileState && typeof bp.apps.buddylist.data.profileState.emailVerified === 'boolean') {\n        if (bp.apps.buddylist.data.profileState.emailVerified) {\n            $('.buddy_email_verified_text').html('Email Verified');\n            // $('.buddy_email_verify_button').hide();\n        } else {\n            $('.buddy_email_verified_text').html('Email Not Verified');\n            // $('.buddy_email_verify_button').show();\n        }\n    }\n\n    $('.updateProfileForm').on('submit', function (e) {\n        e.preventDefault();\n        // clear out local profile cache, this will trigger a re-render from next server update\n        // desktop.app.profileCache = {};\n        return false;\n    });\n\n    if (bp.apps.say) {\n        let voices = bp.apps.say.voices;\n        voices.forEach(function (v) {\n            $('.ttsVoice').append(`<option value=\"${v.voiceURI}\">${v.name} ${v.lang}</option>`);\n        });\n    \n    }\n\n    if (desktop.settings.tts_voice_index) {\n        $('.ttsVoice').prop('selectedIndex', desktop.settings.tts_voice_index);\n    }\n\n    $('.ttsVoice').on('change', function () {\n        //desktop.app.tts.voice = voices[$(this).prop('selectedIndex')];\n        let voice = voices[$(this).prop('selectedIndex')];\n        bp.apps.say.setVoice($(this).prop('selectedIndex'));\n        desktop.set('tts_voice', voice);\n        desktop.set('tts_voice_index', $(this).prop('selectedIndex'));\n        bp.say('Hello Beautiful');\n    });\n\n\n    $('.hideFlag').on('click', function () {\n        if ($(this).prop('checked')) {\n            desktop.set('geo_flag_hidden', true);\n        } else {\n            desktop.set('geo_flag_hidden', false);\n        }\n    });\n\n\n\n}"],"names":["wallpapers","renderWallpaperTypes","el","w","bp","apps","wallpaper","wallpaperManager","_wallpapers","_wallpaper","checked","desktop","settings","wallpaper_name","str","label","append","isColorProperty","prop","value","isColorKey","includes","toLowerCase","isColorValue","test","legacyWallpapers","onSelect","context","hex","set","onCellEnter","$","on","color","setColor","html","activeName","active","changeColor","console","log","simpleColor","boxHeight","cellWidth","cellHeight","defaultColor","wallpaper_color","inputCSS","width","chooserCSS","border","top","displayCSS","displayColorCode","livePreview","insert","element","onClose","radioValue","val","hide","show","wallpaperUrl","wallpaper_url","_url","trim","alert","client","updateProfilePicture","event","profilePictureImg","file","target","files","profilePictureInput","statusElement","document","querySelector","statusText","updateStatus","text","state","classList","remove","textContent","add","style","display","hideStatusAfterDelay","delay","setTimeout","type","img","Image","reader","FileReader","onload","e","src","result","async","canvas","createElement","ctx","getContext","height","scale","Math","min","scaledWidth","scaledHeight","offsetX","offsetY","fillStyle","fillRect","drawImage","blob","Promise","resolve","toBlob","maxSize","size","previewUrl","URL","createObjectURL","previewImg","profilePicturePreview","innerHTML","appendChild","resizedFile","File","name","lastModified","Date","now","url","onProgress","progress","percentage","round","filePath","buddypond","uploadFile","err","error","message","this","buddylist","setStatus","me","profilePicture","messagesWsClients","forEach","wsClient","send","JSON","stringify","action","profile","data","profileState","onerror","readAsDataURL","endpoint","apiKeysEndpoint","addApiKey","roles","expiry","apiRequest","revokeApiKey","keyId","getApiKeys","keys","Array","isArray","Error","validateApiKey","key","requireRole","length","uri","method","options","headers","Accept","qtokenid","body","response","fetch","ok","status","json","Profile","constructor","init","load","appendScript","open","buddyname","replace","contentDiv","profileContent","profileWindow","content","setTitle","ui","Tabs","id","windowManager","createWindow","title","x","y","minWidth","minHeight","parent","icon","resizable","minimizable","maximizable","closable","focusable","maximized","minimized","loggedIn","tabs","onTab","tabId","flexShow","flexHide","bindUIEvents","showTab","appName","apps_installed","liveLink","config","host","attr","prototype","getElementById","navigateToTab","addEventListener","call","svg","vendor","dicebear","createAvatar","dicebearAvatars","seed","backgroundColor","toString","updates","email","password","confirmPassword","addClass","removeClass","passwordChanged","updateAccount","emailVerified","preventDefault","say","voices","v","voiceURI","lang","tts_voice_index","voice","setVoice","userSettings","padEditorHolder","profileUrl","indexOf","browser","BrowserWindow","yourProfile","navigate","click","themes","applyTheme","themeEditor","currentTheme","get","trigger","apiKeys","themeName","themeData","themeStyles","styles","editableTheme","parse","themeStylesContainer","styleName","styleValue","styleDiv","inputId","colorInput","startsWith","newValue","hasClass","closest","find","bind","row","propInput","valInput","newProp","newVal","roleBox","renderApiKeys","list","empty","role","created","ctime","created_at","toLocaleString","toLocaleDateString","usage","li","join","box","fullKey","navigator","clipboard","writeText","then","statusBox","split","map","r","filter","Boolean","valid","css","reason","confirm","form","newKey"],"mappings":"AAAA,MAAMA,EAAa,CAAE,EAoFrB,SAASC,EAAsBC,GAC3B,IAAK,IAAIC,KAAKC,GAAGC,KAAKC,UAAUC,iBAAiBC,YAAa,CAC5D,IAAIC,EAAaL,GAAGC,KAAKC,UAAUC,iBAAiBC,YAAYL,GAC5DO,EAAU,GACVP,IAAMQ,QAAQC,SAASC,iBACzBH,EAAU,WAEZ,IAAII,EAAM,iDAC8BX,wDAAwDA,MAAMO,uCAC1EP,MAAMM,EAAWM,oCAG7Cb,EAAGc,OAAOF,EAChB,CACA,CCKA,SAASG,EAAgBC,EAAMC,GAC3B,MAMMC,EANa,CACf,QAAS,aAAc,mBAAoB,eAC3C,gBAAiB,wBAAyB,oBAC1C,OAAQ,UAGkBC,SAASH,EAAKI,eAOtCC,GALa,iCACZ,kBACA,kBACA,aAEyBC,KAAKL,GAErC,OAAOC,GAAcG,CACzB,CDtHAvB,EAAWyB,iBAAmB,SAAUrB,GAGtC,GAAIA,EAAGC,KAAKC,UAAW,CAgBrB,SAASoB,EAAUC,EAASC,GAC1BxB,EAAGyB,IAAI,kBAAmB,IAAMD,EACtC,CAEI,SAASE,EAAaH,EAASC,GAC7BxB,EAAGyB,IAAI,kBAAmB,IAAMD,EACtC,CArBI3B,EAAqB8B,EAAE,oBACvB3B,EAAG4B,GAAG,4BAA6B,iCAAiC,SAASC,GAC3EF,EAAE,yBAAyBG,SAASD,GACpCF,EAAE,uBAAuBI,KAAKF,GAG9B,IAAIG,EAAahC,EAAGC,KAAKC,UAAUC,iBAAiB8B,OAChDA,EAASjC,EAAGC,KAAKC,UAAUC,iBAAiBP,WAAWoC,GACvDC,EACFA,EAAOC,YAAYL,GAEnBM,QAAQC,IAAI,kDAAmDJ,EAEvE,IAUIL,EAAE,yBAAyBU,YAAY,CACrCC,UAAW,GACXC,UAAW,GACXC,WAAY,GACZC,aAAclC,QAAQC,SAASkC,iBAAmB,UAClDC,SAAU,CAAE,gBAAiB,MAAO,YAAa,MAAOC,MAAS,QACjEC,WAAY,CAAEC,OAAU,oBAAqBC,IAAO,QACpDC,WAAY,CAAI,EAChBC,kBAAkB,EAClBC,aAAa,EACbC,OAAQ,SACR7B,SAAU,SAAUE,EAAK4B,GACvB9B,EAAStB,EAAGC,KAAKC,UAAU+B,OAAQT,EACpC,EACDE,YAAa,SAAUF,EAAK4B,GAC1B1B,EAAY1B,EAAGC,KAAKC,UAAU+B,OAAQT,EACvC,EACD6B,QAAS,SAAUD,GACzB,IAIIzB,EAAE,6BAA6BC,GAAG,SAAS,WACzC,IAAI0B,EAAa3B,EAAE,qCAAqC4B,MAGxD,GAAmB,QAAfD,EAAsB,CACxB3B,EAAE,oBAAoB6B,OACtB7B,EAAE,iBAAiB8B,OACnB,IAAIC,EAAe1D,EAAGQ,SAASmD,eAAiB,GAChDhC,EAAE,sBAAsB4B,IAAIG,EAEpC,MACQ/B,EAAE,oBAAoB8B,OACtB9B,EAAE,iBAAiB6B,OAEnBxD,EAAGyB,IAAI,iBAAkB6B,EAEjC,IAEI3B,EAAE,uBAAuBC,GAAG,SAAS,WACnC,IAAIgC,EAAOjC,EAAE,sBAAsB4B,MAAMM,OACrCD,GAEF5D,EAAGyB,IAAI,gBAAiBmC,GACxB5D,EAAGyB,IAAI,iBAAkB,QAEzBqC,MAAM,8CAEd,GAEA,CAEA,EE6EA,MAAMC,EAAS,CAAE,EC/JF,SAASC,EAAqBC,EAAOC,GAClD,MAAMC,EAAOF,EAAMG,OAAOC,MAAM,GAC1BC,EAAsBL,EAAMG,OAC5BG,EAAgBC,SAASC,cAAc,sCACvCC,EAAaH,EAAcE,cAAc,gBAGzCE,EAAe,CAACC,EAAMC,KAC1BN,EAAcO,UAAUC,OAAO,YAAa,UAAW,QAAS,UAChEL,EAAWM,YAAcJ,EACzBL,EAAcO,UAAUG,IAAIJ,GAC5BN,EAAcW,MAAMC,QAAU,SAI1BC,EAAuB,CAACC,EAAQ,OACpCC,YAAW,KACTf,EAAcO,UAAUG,IAAI,UAC5BV,EAAcW,MAAMC,QAAU,SAC7BE,IAGL,GAAIlB,EAAM,CAGR,IADwB,CAAC,aAAc,YAAa,YAAa,YAAa,cACzDlD,SAASkD,EAAKoB,MAIjC,OAHAZ,EAAa,wDAAyD,SACtEL,EAAoBvD,MAAQ,QAC5BqE,IAKF,MAAMI,EAAM,IAAIC,MACVC,EAAS,IAAIC,WACnBD,EAAOE,OAAUC,IACfL,EAAIM,IAAMD,EAAEzB,OAAO2B,OACnBP,EAAII,OAASI,UAEX,MAAMC,EAASzB,SAAS0B,cAAc,UAChCC,EAAMF,EAAOG,WAAW,MAC9BH,EAAOrD,MAAQ,IACfqD,EAAOI,OAAS,IAGhB,MAAMC,EAAQC,KAAKC,IAAI,IAAMhB,EAAI5C,MAAO,IAAM4C,EAAIa,QAC5CI,EAAcjB,EAAI5C,MAAQ0D,EAC1BI,EAAelB,EAAIa,OAASC,EAC5BK,GAAW,IAAMF,GAAe,EAChCG,GAAW,IAAMF,GAAgB,EAGvCP,EAAIU,UAAY,QAChBV,EAAIW,SAAS,EAAG,EAAG,IAAK,KACxBX,EAAIY,UAAUvB,EAAKmB,EAASC,EAASH,EAAaC,GAGlD,IACE,MAAMM,QAAa,IAAIC,SAASC,IAC9BjB,EAAOkB,QACJH,GAASE,EAAQF,IAClB,aACA,OAKEI,EAAU,OAChB,GAAIJ,EAAKK,KAAOD,EAId,OAHAzC,EAAa,8DAA+D,SAC5EL,EAAoBvD,MAAQ,QAC5BqE,IAKF,MAAMkC,EAAaC,IAAIC,gBAAgBR,GACvC9C,EAAkB4B,IAAMwB,EAGxB,MAAMG,EAAajD,SAAS0B,cAAc,OAC1CuB,EAAW3B,IAAMwB,EACjBG,EAAW3C,UAAUG,IAAI,2BACzB,MAAMyC,EAAwBlD,SAASC,cAAc,gCACrDiD,EAAsBC,UAAY,GAClCD,EAAsBE,YAAYH,GAGlC9C,EAAa,eAAgB,aAC7B,MAAMkD,EAAc,IAAIC,KAAK,CAACd,GAAO7C,EAAK4D,KAAM,CAC9CxC,KAAM,aACNyC,aAAcC,KAAKC,QAGrB,IACE,IAYIC,EAZAC,EAAcC,IAEhB,MAAMC,EAAa/B,KAAKgC,MAAiB,IAAXF,GAC9B1D,EAAa,cAAc2D,KAAe,cAK5CT,EAAYW,SAAW,iBAAmBX,EAAYE,KAEtD5F,QAAQC,IAAI,kBAAmByF,GAG/B,IACEM,QAAYM,UAAUC,WAAWb,EAAaO,GAC9CjG,QAAQC,IAAI,oBAAqB+F,GACjCxD,EAAa,mBAAoB,WACjCS,GAED,CAAC,MAAOuD,GAGP,OAFAxG,QAAQyG,MAAM,wBAAyBD,QACvChE,EAAa,kBAAoBgE,EAAIE,QAAS,QAE5D,CAGY1G,QAAQC,IAAI,oBAAqB+F,SAG3BW,KAAK9I,GAAGC,KAAK8I,UAAUhF,OAAOiF,UAAUF,KAAK9I,GAAGiJ,GAAI,CACxDC,eAAiBf,IAKnBW,KAAK9I,GAAGC,KAAK8D,OAAOoF,kBAAkBC,SAASrF,IAG7CA,EAAOsF,SAASC,KAAKC,KAAKC,UAAU,CAClCC,OAAQ,gBACRC,QAAS,CACPR,eAAgBf,SAMtBW,KAAK9I,GAAGC,KAAK8I,UAAUY,KAAKC,aAAaV,eAAiBf,CAa3D,CAAC,MAAOS,GACPzG,QAAQyG,MAAM,gBAAiBA,GAC/BjE,EAAa,mCAAoC,SACjDS,GACZ,CAIS,CAAC,MAAOwD,GACPzG,QAAQyG,MAAM,0BAA2BA,GACzCjE,EAAa,4CAA6C,SAC1DL,EAAoBvD,MAAQ,GAC5BqE,GACV,GAEMI,EAAIqE,QAAU,KACZlF,EAAa,0DAA2D,SACxEL,EAAoBvD,MAAQ,GAC5BqE,MAGJM,EAAOoE,cAAc3F,EACzB,CACA,CDjBAJ,EAAOgG,SAAWtB,UAAUuB,gBAE5BjG,EAAOkG,UAAYjE,eAAgB+B,EAAMmC,EAAOC,GAC5C,aAAapG,EAAOqG,WAAW,YAAa,OAAQ,CAChDrC,OACAmC,QACAC,UAER,EAEApG,EAAOsG,aAAerE,eAAgBsE,GAClC,aAAavG,EAAOqG,WAAW,aAAaE,IAAS,SACzD,EAEAvG,EAAOwG,WAAavE,iBAChB,MAAMwE,QAAazG,EAAOqG,WAAW,YAAa,OAClD,GAAIK,MAAMC,QAAQF,GAAO,OAAOA,EAChC,MAAM,IAAIG,MAAM,uBACpB,EAEA5G,EAAO6G,eAAiB5E,eAAgB6E,EAAKC,GACzC,IAAKD,IAAQC,IAAgBL,MAAMC,QAAQI,IAAuC,IAAvBA,EAAYC,OACnE,MAAM,IAAIJ,MAAM,wCAEpB,aAAa5G,EAAOqG,WAAW,qBAAsB,OAAQ,CACzDS,MACAC,eAER,EAGA/G,EAAOqG,WAAapE,MAAOgF,EAAKC,EAAS,MAAOtB,EAAO,QAEnD,MAAMuB,EAAU,CACZD,OAAQA,GAGZ,IAAIE,EAAU,CACVC,OAAU,mBACV,eAAgB,kCAChB,OAAQ3C,UAAUQ,IAElBR,UAAU4C,WACVF,EAAuB,cAAI,UAAU1C,UAAU4C,YAI/C1B,IACAuB,EAAQI,KAAO/B,KAAKC,UAAUG,IAGlCuB,EAAQC,QAAUA,EAElB,IAAIhD,EAAM,GAAGpE,EAAOgG,WAAWiB,IAC/B7I,QAAQC,IAAI,kCAAmC+F,EAAK+C,GAGpD,IACI,MAAMK,QAAiBC,MAAMrD,EAAK+C,GAClC,IAAKK,EAASE,GACV,MAAM,IAAId,MAAM,uBAAuBY,EAASG,UAEpD,aAAaH,EAASI,MACzB,CAAC,MAAO/C,GAEL,MADAzG,QAAQyG,MAAM,wBAAyBA,GACjCA,CACd,GE3Ne,MAAMgD,EACjB,WAAAC,CAAY7L,EAAIkL,EAAU,IAEtB,OADApC,KAAK9I,GAAKA,EACH8I,IACf,CAEI,UAAMgD,GAWF,aARMhD,KAAK9I,GAAG+L,KAAK,4CAEbjD,KAAK9I,GAAG+L,KAAK,iBACbjD,KAAK9I,GAAGgM,aAAa,6CAG3BlD,KAAK/G,WAAa+G,KAAK9I,GAAG+L,KAAK,uCAExB,gBACf,CAEI,UAAME,CAAKf,EAAU,IAEjB,IAAIgB,EAAYpD,KAAK9I,GAAGiJ,IAAMiC,EAAQ3J,QACtC2K,EAAYA,EAAUC,QAAQ,IAAK,IACnCD,EAAYA,EAAUC,QAAQ,IAAK,IAGnC,IAAIC,EAAa5H,SAAS0B,cAAc,OACxCkG,EAAWtH,UAAUG,IAAI,iBAGzB,IAAIoH,EAAiB7H,SAAS0B,cAAc,OAC5CmG,EAAe1E,UAAYmB,KAAK/G,KAO3B+G,KAAKwD,eA4DNxD,KAAKwD,cAAcC,QAAUH,EACzBtD,KAAKwD,cAAc/K,UAAY2K,IAC/BpD,KAAKwD,cAAc/K,QAAU2K,EAC7BvK,EAAEmH,KAAKwD,cAAcC,SAASxK,KAAKqK,EAAWzE,WAC9CmB,KAAKwD,cAAcE,SAAS,aAAeN,GAC3C,IAAIpD,KAAK9I,GAAGC,KAAKwM,GAAGC,KAAK,IAAM5D,KAAKwD,cAAcK,OAhEtD7D,KAAKwD,cAAgBxD,KAAK9I,GAAGC,KAAKwM,GAAGG,cAAcC,aAAa,CAC5DF,GAAI,UACJG,MAAO,aAAeZ,EACtBa,EAAG,GACHC,EAAG,IACHpK,MAAO,IACPyD,OAAQ,IACR4G,SAAU,IACVC,UAAW,IACXC,OAAQxL,EAAE,YAAY,GACtByL,KAAM,qDACN7L,QAAS2K,GAAa,UACtBK,QAASF,EACTgB,WAAW,EACXC,aAAa,EACbC,aAAa,EACbC,UAAU,EACVC,WAAW,EACXC,WAAW,EACXC,WAAW,EACXtK,QAAS,KACLyF,KAAKwD,cAAgB,QAG7BxD,KAAKwD,cAAcsB,UAAW,EAC9B9E,KAAK+E,KAAO,IAAI/E,KAAK9I,GAAGC,KAAKwM,GAAGC,KAAK,kBAAmB,IAAM5D,KAAKwD,cAAcK,IAEjF7D,KAAK+E,KAAKC,OAAM9H,MAAO+H,IACA,UAAfjF,KAAK9I,GAAGiJ,IACRtH,EAAE,YAAamH,KAAKwD,cAAcC,SAASyB,WAC3CrM,EAAE,aAAcmH,KAAKwD,cAAcC,SAAS0B,aAG5CtM,EAAE,YAAamH,KAAKwD,cAAcC,SAAS0B,WAC3CtM,EAAE,aAAcmH,KAAKwD,cAAcC,SAASyB,eAKpDpO,EAAWyB,iBAAiBrB,IAE5B8I,KAAKoF,aAAahD,GAGC,UAAfpC,KAAK9I,GAAGiJ,IACRtH,EAAE,YAAamH,KAAKwD,cAAcC,SAASyB,WAC3CrM,EAAE,aAAcmH,KAAKwD,cAAcC,SAAS0B,aAG5CtM,EAAE,YAAamH,KAAKwD,cAAcC,SAAS0B,WAC3CtM,EAAE,aAAcmH,KAAKwD,cAAcC,SAASyB,WAE5ClF,KAAK+E,KAAKM,QAAQ,iBAiB1BxM,EAAE,kBAAmBmH,KAAKwD,cAAcC,SAASxK,KAAK,IACtD,IAAK,IAAIqM,KAAWpO,GAAGQ,SAAS6N,gBAShC,IAAIC,EAAWxF,KAAK9I,GAAGuO,OAAOC,KAAO,IAAM1F,KAAK9I,GAAGiJ,GAQnD,OAPAtH,EAAE,mBAAoBmH,KAAKwD,cAAcC,SAASkC,KAAK,OAAQH,GAC/D3M,EAAE,mBAAoBmH,KAAKwD,cAAcC,SAASxK,KAAKuM,GAEvD3M,EAAE,YAAamH,KAAKwD,eAAe9I,OAI5BsF,KAAKwD,aAEpB,EA8BAV,EAAQ8C,UAAUR,aClKH,SAAsBhD,EAAU,IAE3C,MAAM5G,EAAsBE,SAASmK,eAAe,yBAC9CzK,EAAoBM,SAASC,cAAc,4BAiCjD,IAAIyE,EA9BJvH,EAAE,2BAA2BC,GAAG,SAAUiE,IACtCiD,KAAK+E,KAAKe,cAAc,cAI5BtK,EAAoBuK,iBAAiB,UAAU7I,MAAO/B,IAClDD,EAAqB8K,KAAKhG,KAAM7E,EAAOC,MAyBvC4E,KAAK9I,GAAGC,KAAK8I,WAAaD,KAAK9I,GAAGC,KAAK8I,UAAUY,MAAQb,KAAK9I,GAAGC,KAAK8I,UAAUY,KAAKC,eACrFV,EAAiBJ,KAAK9I,GAAGC,KAAK8I,UAAUY,KAAKC,aAAaV,gBAG9D,IAAIxB,EAAwB/F,EAAE,gCAE9B,GAAIuH,EAAgB,CAIhB,IAAI1D,EAAMhB,SAAS0B,cAAc,OACjCV,EAAIM,IAAMoD,EACV1D,EAAIV,UAAUG,IAAI,2BAClByC,EAAsB3F,KAAKyD,EAGnC,MACQ,IACI,MAOMuJ,EAPSjG,KAAK9I,GAAGgP,OAAOC,SAASC,aAAapG,KAAK9I,GAAGgP,OAAOG,gBAAiB,CAChFC,KAAMtG,KAAK9I,GAAGiJ,GACd5B,KAAM,IACNgI,gBAAiB,CAAC,aAIHC,WACnBnN,QAAQC,IAAI,cAAe2M,GAE3BrH,EAAsB3F,KAAKgN,EAC9B,CAAC,MAAOpG,GACLxG,QAAQyG,MAAM,2BAA4BD,EACtD,CAKIhH,EAAE,qBAAsBmH,KAAKwD,cAAcC,SAAS3K,GAAG,SAAS,KAE5DD,EAAE,iBAAkBmH,KAAKwD,cAAcC,SAASyB,WAEhDrM,EAAE,iBAAkBmH,KAAKwD,cAAcC,SAAS0B,WAChDtM,EAAE,qBAAsBmH,KAAKwD,cAAcC,SAASyB,WACpDrM,EAAE,qBAAsBmH,KAAKwD,cAAcC,SAASyB,cAOxDrM,EAAE,qBAAsBmH,KAAKwD,cAAcC,SAAS3K,GAAG,SAAS,KAE5DD,EAAE,iBAAkBmH,KAAKwD,cAAcC,SAAS0B,WAEhDtM,EAAE,iBAAkBmH,KAAKwD,cAAcC,SAASyB,WAChDrM,EAAE,qBAAsBmH,KAAKwD,cAAcC,SAAS0B,WACpDtM,EAAE,qBAAsBmH,KAAKwD,cAAcC,SAAS0B,cAGxDtM,EAAE,sBAAsBsM,WACxBtM,EAAE,sBAAsBsM,WCrGbjI,eAAkChG,GAC7C2B,EAAE,wBAAwBC,GAAG,SAASoE,iBAClC,IAAIuJ,EAAU,CAAE,EAKhB,GAJAA,EAAQC,MAAQ7N,EAAE,gBAAgB4B,MAClCgM,EAAQE,SAAW9N,EAAE,mBAAmB4B,MACxCgM,EAAQG,gBAAkB/N,EAAE,2BAA2B4B,MACvD5B,EAAE,0BAA0BI,KAAK,IAC7BwN,EAAQE,YACHF,EAAQG,iBAAoBH,EAAQE,WAAaF,EAAQG,iBAG1D,OAFA/N,EAAE,0BAA0BgO,SAAS,cACrChO,EAAE,0BAA0BI,KAAK,0BAIzCI,QAAQC,IAAI,wBAAyBmN,GACrC5N,EAAE,0BAA0BiO,YAAY,SACxC,IACI,IAAIC,QAAwBpH,UAAUqH,cAAc,CAAE5D,UAAWlM,EAAGiJ,GAAIwG,SAAUF,EAAQE,SAAUD,MAAOD,EAAQC,QACnHrN,QAAQC,IAAI,mBAAoByN,GAE5BA,GACAlO,EAAE,0BAA0BI,KAAK,+BAExC,CAAC,MAAO8D,GAGL,OAFAlE,EAAE,0BAA0BgO,SAAS,cACrChO,EAAE,0BAA0BI,KAAK,UAAY8D,EAAEgD,QAE3D,CAWA,IAEQ7I,EAAGC,KAAK8I,WAAa/I,EAAGC,KAAK8I,UAAUY,KAAKC,cAAgB5J,EAAGC,KAAK8I,UAAUY,KAAKC,aAAa4F,OAChG7N,EAAE,gBAAgB4B,IAAIvD,EAAGC,KAAK8I,UAAUY,KAAKC,aAAa4F,OAE1DxP,EAAGC,KAAK8I,WAAa/I,EAAGC,KAAK8I,UAAUY,KAAKC,cAA6E,kBAAtD5J,EAAGC,KAAK8I,UAAUY,KAAKC,aAAamG,gBACnG/P,EAAGC,KAAK8I,UAAUY,KAAKC,aAAamG,cACpCpO,EAAE,8BAA8BI,KAAK,kBAGrCJ,EAAE,8BAA8BI,KAAK,uBAK7CJ,EAAE,sBAAsBC,GAAG,UAAU,SAAUiE,GAI3C,OAHAA,EAAEmK,kBAGK,CACf,IAEQhQ,EAAGC,KAAKgQ,KACKjQ,EAAGC,KAAKgQ,IAAIC,OAClB9G,SAAQ,SAAU+G,GACrBxO,EAAE,aAAaf,OAAO,kBAAkBuP,EAAEC,aAAaD,EAAEpI,QAAQoI,EAAEE,gBAC/E,IAIQ9P,QAAQC,SAAS8P,iBACjB3O,EAAE,aAAab,KAAK,gBAAiBP,QAAQC,SAAS8P,iBAG1D3O,EAAE,aAAaC,GAAG,UAAU,WAExB,IAAI2O,EAAQL,OAAOvO,EAAEmH,MAAMhI,KAAK,kBAChCd,EAAGC,KAAKgQ,IAAIO,SAAS7O,EAAEmH,MAAMhI,KAAK,kBAClCP,QAAQkB,IAAI,YAAa8O,GACzBhQ,QAAQkB,IAAI,kBAAmBE,EAAEmH,MAAMhI,KAAK,kBAC5Cd,EAAGiQ,IAAI,kBACf,IAGItO,EAAE,aAAaC,GAAG,SAAS,WACnBD,EAAEmH,MAAMhI,KAAK,WACbP,QAAQkB,IAAI,mBAAmB,GAE/BlB,QAAQkB,IAAI,mBAAmB,EAE3C,GAIA,CDaIgP,CAAazQ,IAGb,IAAI0Q,EAAkB/O,EAAE,6BAA8BmH,KAAKwD,cAAcC,SAAS,GAU9EoE,EAAa7H,KAAK9I,GAAGuO,OAAOC,KAAO,IAAM1F,KAAK9I,GAAGiJ,QAEjDH,KAAK9I,GAAGuO,OAAOC,KAAKoC,QAAQ,mBAC5BD,GAA0B,eAGzB7H,KAAK+H,UACN/H,KAAK+H,QAAU,IAAI/H,KAAK9I,GAAGC,KAAK4Q,QAAQC,cAAchI,KAAK9I,GAAI0Q,EAAiBC,IAIpF,IAAII,EAAcpP,EAAE,gBAAiBmH,KAAKwD,cAAcC,SACxDzD,KAAK9I,GAAG4B,GAAG,wBAAyB,2CAA4C+H,IAG5Eb,KAAK+H,QAAQG,SAASL,MAG1BI,EAAYnQ,OAAO8P,GAGfxF,EAAQ3J,SAA+B,WAApB2J,EAAQ3J,SAC3BI,EAAE,eAAesP,QAGrBtP,EAAE,OAAOI,KAAK+G,KAAK9I,GAAGiJ,IAElBiC,GAA4B,aAAjBA,EAAQ3F,MAEnBuD,KAAK+E,KAAKM,QAAQ,WAGlBjD,GAA4B,WAAjBA,EAAQ3F,MAEnBuD,KAAK+E,KAAKM,QAAQ,WAGtBxM,EAAE,eAAgBmH,KAAKwD,cAAcC,SAAS3K,GAAG,UAAWiE,IACxD,IAAItC,EAAM5B,EAAEkE,EAAEzB,QAAQb,MACV,WAARA,IAOJuF,KAAK9I,GAAGC,KAAKiR,OAAOC,WAAW5N,GAC/BuF,KAAKsI,YAAY7N,OAIrB,IAAI8N,EAAevI,KAAK9I,GAAGsR,IAAI,iBAAmB,QAClD3P,EAAE,eAAgBmH,KAAKwD,cAAcC,SAAShJ,IAAI8N,GAElD1P,EAAE,eAAgBmH,KAAKwD,cAAcC,SAASgF,QAAQ,UAEtDzI,KAAK9I,GAAG4B,GAAG,yBAA0B,mBAAoB+H,IAEnCb,KAAK9I,GAAGsR,IAAI,mBAKf,UAAfxI,KAAK9I,GAAGiJ,IACRH,KAAK0I,UAGT7P,EAAE,YAAamH,KAAKwD,eAAe9I,MAMvC,EDvBAoI,EAAQ8C,UAAU0C,YHxKH,SAAqBK,GAChC,IAAIC,EAAY5I,KAAK9I,GAAGC,KAAKiR,OAAOA,OAAOO,GACvCE,EAAcD,EAAUE,QAAU,CAAE,EAGpCC,EAAgBtI,KAAKuI,MAAMvI,KAAKC,UAAUkI,IAG1CK,EAAuBpQ,EAAE,gBAAiBmH,KAAKwD,cAAcC,SACjEwF,EAAqBhQ,KAAK,IAE1B,IAAK,IAAIiQ,KAAaL,EAAa,CAC/B,IAAIM,EAAaN,EAAYK,GAGzBE,EAAWvQ,EAAE,mCACbyK,EAAazK,EAAE,2CAEnByK,EAAWxL,OAAO,4BAA4BoR,WAE9C,IAAK,IAAIlR,KAAQmR,EAAY,CACzB,IAAI1O,EAAM0O,EAAWnR,GACjBqR,EAAU,SAASH,KAAalR,IAAOqL,QAAQ,OAAQ,KAEvDiG,EAAa,GACjB,GAAIvR,EAAgBC,EAAMyC,GAAM,CAE5B6O,EAAa,8BADG7O,EAAI8O,WAAW,KAAO9O,EAAM,0BACyByO,iBAAyBlR,4BAC9G,CAEYsL,EAAWxL,OAAO,0FAEiBE,0DACFqR,aAAmB5O,kBAAoByO,iBAAyBlR,8BACvFsR,0CAGtB,CAcQF,EAAStR,OAAOwL,GAChB2F,EAAqBnR,OAAOsR,EACpC,CAGIH,EAAqBnQ,GAAG,QAAS,yCAA0C,SAAUiE,GACjFlE,EAAE,eAAgBmH,KAAKwD,cAAcC,SAAShJ,IAAI,UAElD,IAAI2B,EAAQvD,EAAEkE,EAAEzB,QAAQuF,KAAK,SACzB7I,EAAOa,EAAEkE,EAAEzB,QAAQuF,KAAK,QAC5B,IAAKzE,IAAUpE,EAAM,OAErB,IAAIwR,EAAW3Q,EAAEkE,EAAEzB,QAAQb,MAG3B,GAAI5B,EAAEkE,EAAEzB,QAAQmO,SAAS,gBAAiB,CACf5Q,EAAEkE,EAAEzB,QAAQoO,QAAQ,aAAaC,KAAK,sBAC5ClP,IAAI+O,EACjC,CAEQT,EAAcD,OAAO1M,GAAOpE,GAAQwR,EACpCT,EAAc9J,KAAO,SACrBe,KAAK9I,GAAGC,KAAKiR,OAAOC,WAAWU,EACvC,EAAMa,KAAK5J,OAGPiJ,EAAqBnQ,GAAG,QAAS,gBAAiB,SAAUiE,GACxD,IAAIX,EAAQvD,EAAEkE,EAAEzB,QAAQuF,KAAK,SACzBgJ,EAAMhR,EAAEkE,EAAEzB,QAAQoO,QAAQ,OAC1BI,EAAYD,EAAIF,KAAK,kBACrBI,EAAWF,EAAIF,KAAK,mBAEpBK,EAAUF,EAAUrP,MAAMM,OAC1BkP,EAASF,EAAStP,MAAMM,OAExBiP,GAAWC,IACXlB,EAAcD,OAAO1M,GAAO4N,GAAWC,EACvCpR,EAAE,eAAgBmH,KAAKwD,cAAcC,SAASgF,QAAQ,UAElE,EAAMmB,KAAK5J,OAGPiJ,EAAqBnQ,GAAG,QAAS,mBAAoB,SAAUiE,GAC3D,IAAIX,EAAQvD,EAAEkE,EAAEzB,QAAQuF,KAAK,SACzB7I,EAAOa,EAAEkE,EAAEzB,QAAQuF,KAAK,eACrBkI,EAAcD,OAAO1M,GAAOpE,GACnCa,EAAE,eAAgBmH,KAAKwD,cAAcC,SAASgF,QAAQ,SAC9D,EAAMmB,KAAK5J,OAEP3G,QAAQC,IAAI,YAAasP,EAC7B,EGoEA9F,EAAQ8C,UAAU8C,QFzKHxL,iBAIX,MAAMgN,EAAUrR,EAAE,sBA4ClBqE,eAAeiN,IACX,MAAMC,EAAOvR,EAAE,qBACfuR,EAAKC,eACiBpP,EAAOwG,cAErBnB,SAASyB,IACb,MACMX,EAAQO,MAAMC,QAAQG,EAAIX,OAASW,EAAIX,MAASW,EAAIuI,KAAO,CAACvI,EAAIuI,MAAQ,GACxEC,EAAU,IAAIpL,KAAK4C,EAAIyI,OAASzI,EAAI0I,YAAYC,iBAChDrJ,EAASU,EAAIV,OAAS,IAAIlC,KAAK4C,EAAIV,QAAQsJ,qBAAuB,QAClEC,EAAQ7I,EAAI6I,MAAQ,GAAG7I,EAAI6I,cAAgB,eAE3CC,EAAKhS,EAAE,gKAIkBkJ,EAAI9C,sEACO8C,EAAI8B,yFAGP9B,EAAIA,KAAOA,EAAI8B,2dAW3BzC,EAAM0J,KAAK,uDACTP,kDACDlJ,0EACwBuJ,yDAQpDR,EAAKtS,OAAO+S,MAIhBhS,EAAE,uBAAuBC,GAAG,SAAS,WACjC,MAAMiS,EAAMlS,EAAEmH,MAAM0J,QAAQ,uBACtBsB,EAAUD,EAAIlK,KAAK,QACzBkK,EAAIpB,KAAK,QAAQ7N,KAAKkP,GACtBnS,EAAEmH,MAAM/D,QACpB,IAGQpD,EAAE,qBAAqBC,GAAG,SAAS,WAC/B,MACMkS,EADMnS,EAAEmH,MAAM0J,QAAQ,uBACR7I,KAAK,QACrBoK,UAAUC,UACVD,UAAUC,UAAUC,UAAUH,GAASI,MAAK,KACxCvS,EAAEmH,MAAMlE,KAAK,WACbU,YAAW,IAAM3D,EAAEmH,MAAMlE,KAAK,SAAS,SAG3Cd,MAAM,+CAEtB,IAGQnC,EAAE,uBAAuBC,GAAG,SAASoE,iBACjC,MAAM6N,EAAMlS,EAAEmH,MAAM0J,QAAQ,uBACtBsB,EAAUD,EAAIlK,KAAK,QACnBwK,EAAYN,EAAIpB,KAAK,uBAKrBvI,EAFY2J,EAAIrB,QAAQ,qBAAqBC,KAAK,qBACnDA,KAAK,0BAA0B7N,OAAOuH,QAAQ,SAAU,IAAItI,OACzCuQ,MAAM,KAAKC,KAAIC,GAAKA,EAAEzQ,SAAQ0Q,OAAOC,SAE7DL,EAAUvP,KAAK,cAEf,IACI,MAAMmB,QAAehC,EAAO6G,eAAekJ,EAAS5J,GACpD,GAAInE,EAAO0O,MAAO,CACdN,EAAUvP,KAAK,WAAW8P,IAAI,QAAS,SAEpBb,EAAIrB,QAAQ,qBAAqBC,KAAK,gBAC9C7N,KAAKmB,EAAO2N,MAAQ,UAAY,UAC/D,MACoBS,EAAUvP,KAAK,cAAcmB,EAAO4O,QAAU,cAAcD,IAAI,QAAS,MAEhF,CAAC,MAAO/L,GACLxG,QAAQyG,MAAM,oBAAqBD,GACnCwL,EAAUvP,KAAK,0BAA0B8P,IAAI,QAAS,MACtE,CACA,IAIQ/S,EAAE,uBAAuBC,GAAG,SAASoE,iBACjC,MAAMsE,EAAQ3I,EAAEmH,MAAMa,KAAK,MACtBiL,QAAQ,yDACP7Q,EAAOsG,aAAaC,GAC1B2I,IACZ,GACA,CAvJgB,CAAC,SAAU,OAAQ,QAAS,SAIlC7J,SAAQgK,IACV,MAAMzG,EAAK,eAAeyG,IAC1B,IAAI9S,EAAU,GAED,WAAT8S,IACA9S,EAAU,WAGd0S,EAAQpS,OAAO,uBACH+L,0FACiCyG,UAAazG,MAAOrM,iBAC/D8S,8BAMNzR,EAAE,qBAAqBC,GAAG,UAAUoE,eAAgBH,GAChDA,EAAEmK,iBACF,MAAM6E,EAAOlT,EAAEmH,MACTf,EAAO8M,EAAKpC,KAAK,sBAAsBlP,MACvC4G,EAAS0K,EAAKpC,KAAK,wBAAwBlP,MAC3C2G,EAAQ2K,EAAKpC,KAAK,+BACnB4B,KAAI,WAAc,OAAOvL,KAAK/H,KAAQ,IACtCuQ,MAEL,IAAKvJ,GAAyB,IAAjBmC,EAAMa,OAEf,OADAjH,MAAM,iDACC,EAGX,IACI,MAAMgR,QAAe/Q,EAAOkG,UAAUlC,EAAMmC,EAAOC,GAAU,MAE7DhI,QAAQC,IAAI,uBAAwB0S,GACpC7B,GACH,CAAC,MAAOtK,GACL7E,MAAM,4BACN3B,QAAQyG,MAAMD,EAC1B,CACQ,OAAO,CACf,IA6GIsK,GACJ"}