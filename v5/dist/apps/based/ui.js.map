{"version":3,"file":"ui.js","sources":["../../../apps/based/ui/Window/lib/WindowDrag.js","../../../apps/based/ui/Window/Window.js","../../../apps/based/ui/Window/lib/maximize.js","../../../apps/based/ui/Window/lib/minimize.js","../../../apps/based/ui/Window/lib/open.js","../../../apps/based/ui/Window/lib/close.js","../../../apps/based/ui/Window/lib/createWindow.js","../../../apps/based/ui/Window/Panel.js","../../../apps/based/ui/Window/WindowManager.js","../../../apps/based/ui/CountdownManager.js","../../../apps/based/ui/LightBox.js","../../../apps/based/ui/showAlert.js","../../../apps/based/ui/ui.js"],"sourcesContent":["const clamp = (v, min, max) => Math.min(max, Math.max(min, v));\n\nexport default class WindowDrag {\n  static activeDrag = null;\n  static isListening = false;\n  static overlay = null;\n\n  constructor(container, handle = container) {\n    this.container = container;\n    this.handle = handle;\n\n    this.tx = 0;\n    this.ty = 0;\n    this.nextX = 0;\n    this.nextY = 0;\n    this.framePending = false;\n    this.isDragging = false;\n\n    this.onPointerDown = this.onPointerDown.bind(this);\n    this.onPointerMove = this.onPointerMove.bind(this);\n    this.onPointerUp = this.onPointerUp.bind(this);\n\n    handle.addEventListener(\"pointerdown\", this.onPointerDown);\n\n    // ensure global listeners + overlay only once\n    if (!WindowDrag.isListening) {\n      document.addEventListener(\"pointermove\", WindowDrag.handleGlobalMove);\n      document.addEventListener(\"pointerup\", WindowDrag.handleGlobalUp);\n      document.addEventListener(\"pointercancel\", WindowDrag.handleGlobalUp);\n\n      WindowDrag.ensureOverlay();\n      WindowDrag.isListening = true;\n    }\n  }\n\n  static ensureOverlay() {\n  if (!WindowDrag.overlay) {\n    const overlay = document.createElement(\"div\");\n    Object.assign(overlay.style, {\n      position: \"fixed\",\n      top: 0,\n      left: 0,\n      width: \"100vw\",\n      height: \"100vh\",\n      zIndex: 999999,\n      background: \"green\",\n      opacity: 0,\n      cursor: \"grabbing\",\n      visibility: \"hidden\", // Initialize as hidden\n    });\n    document.body.appendChild(overlay);\n    WindowDrag.overlay = overlay;\n  }\n}\n\nstatic showOverlay() {\n  if (WindowDrag.overlay) {\n    WindowDrag.overlay.style.visibility = \"visible\";\n  }\n}\n\nstatic hideOverlay() {\n  if (WindowDrag.overlay) {\n    WindowDrag.overlay.style.visibility = \"hidden\";\n  }\n}\n\n  static handleGlobalMove(e) {\n    if (WindowDrag.activeDrag) {\n      WindowDrag.activeDrag.onPointerMove(e);\n    }\n  }\n\n  static handleGlobalUp(e) {\n    if (WindowDrag.activeDrag) {\n      WindowDrag.activeDrag.onPointerUp(e);\n      WindowDrag.activeDrag = null;\n    }\n  }\n\n  // === Instance methods ===\n  initFromComputedPosition() {\n    const rect = this.container.getBoundingClientRect();\n    const parentRect =\n      this.container.offsetParent?.getBoundingClientRect?.() || {\n        left: 0,\n        top: 0,\n      };\n    this.tx = rect.left - parentRect.left;\n    this.ty = rect.top - parentRect.top;\n    this.container.style.left = \"0px\";\n    this.container.style.top = \"0px\";\n    this.container.style.transform = `translate3d(${this.tx}px, ${this.ty}px, 0)`;\n  }\n\n  onPointerDown(e) {\n    if (e.target.closest(\".window-controls\")) return;\n    // console.log(\"WindowDrag: onPointerDown called\");\n\n    this.isDragging = true;\n    WindowDrag.activeDrag = this;\n    this.handle.setPointerCapture(e.pointerId);\n\n    WindowDrag.showOverlay();\n\n    // Element rect in viewport -> to document coords:\n    const rect = this.container.getBoundingClientRect();\n    const scrollX =\n      window.scrollX ||\n      window.pageXOffset ||\n      document.documentElement.scrollLeft;\n    const scrollY =\n      window.scrollY ||\n      window.pageYOffset ||\n      document.documentElement.scrollTop;\n    const pageLeft = rect.left + scrollX;\n    const pageTop = rect.top + scrollY;\n\n    // Current transform translation\n    const style = getComputedStyle(this.container).transform;\n    const m =\n      style && style !== \"none\" ? new DOMMatrix(style) : new DOMMatrix();\n    this.tx = Number.isFinite(m.m41) ? m.m41 : 0;\n    this.ty = Number.isFinite(m.m42) ? m.m42 : 0;\n\n    // base (no-transform) document coords\n    const baseLeft = pageLeft - this.tx;\n    const baseTop = pageTop - this.ty;\n\n    // Document size\n    const docWidth = Math.max(\n      document.documentElement.scrollWidth,\n      document.documentElement.clientWidth,\n      window.innerWidth\n    );\n    const docHeight = Math.max(\n      document.documentElement.scrollHeight,\n      document.documentElement.clientHeight,\n      window.innerHeight\n    );\n\n    // margins / UI constraints\n    const marginLeft = 5;\n    const marginRight = 5;\n    const menuBarHeight = document.querySelector(\".desktop-menu-bar\")?.offsetHeight || 20;\n    const marginTop = menuBarHeight;\n    const marginBottom = 5;\n\n    // allowed bounds\n    const minXDoc = marginLeft;\n    const maxXDoc = docWidth - rect.width - marginRight;\n    const minYDoc = marginTop;\n    const maxYDoc = docHeight - rect.height - marginBottom;\n\n    // convert to translate bounds\n    this.minTranslateX = minXDoc - baseLeft;\n    this.maxTranslateX = maxXDoc - baseLeft;\n    this.minTranslateY = minYDoc - baseTop;\n    this.maxTranslateY = maxYDoc - baseTop;\n\n    // pointer start\n    this.startPageX = e.clientX + scrollX;\n    this.startPageY = e.clientY + scrollY;\n\n    this.container.classList.add(\"dragging\");\n    document.body.style.userSelect = \"none\";\n  }\n\n  onPointerMove(e) {\n    if (!this.isDragging) return;\n\n    const scrollX =\n      window.scrollX ||\n      window.pageXOffset ||\n      document.documentElement.scrollLeft;\n    const scrollY =\n      window.scrollY ||\n      window.pageYOffset ||\n      document.documentElement.scrollTop;\n    const pageX = e.clientX + scrollX;\n    const pageY = e.clientY + scrollY;\n\n    const dx = pageX - this.startPageX;\n    const dy = pageY - this.startPageY;\n\n    const rawNextX = this.tx + dx;\n    const rawNextY = this.ty + dy;\n\n    this.nextX = clamp(rawNextX, this.minTranslateX, this.maxTranslateX);\n    this.nextY = clamp(rawNextY, this.minTranslateY, this.maxTranslateY);\n\n    if (!this.framePending) {\n      this.framePending = true;\n      requestAnimationFrame(() => {\n        this.framePending = false;\n        this.container.style.transform = `translate3d(${this.nextX}px, ${this.nextY}px, 0)`;\n      });\n    }\n  }\n\n  onPointerUp(e) {\n    this.isDragging = false;\n    // console.log(\"WindowDrag: onPointerUp called\");\n\n    WindowDrag.hideOverlay();\n\n    try {\n      this.handle.releasePointerCapture(e.pointerId);\n    } catch {\n      /* ignore */\n    }\n\n    this.container.classList.remove(\"dragging\");\n    document.body.style.userSelect = \"\";\n  }\n}","// Buddy Pond - Window.js - Marak Squires 2023\n// A simple window class for creating draggable, resizable windows\n// Remark: WindowManager interface is optional and will be stubbed out if not provided\nimport maximize from \"./lib/maximize.js\";\nimport minimize from \"./lib/minimize.js\";\nimport open from \"./lib/open.js\";\nimport close from \"./lib/close.js\";\nimport createWindow from \"./lib/createWindow.js\";\n\nlet idCounter = 0;\n\nclass Window {\n    constructor(options = {}, windowManager) {\n        const {\n            title = \"Window\", // Title of the window\n            width = '400px', // Default width\n            height = '300px', // Default height\n            app = 'default', // default app\n            type = 'singleton', // Default type ( intended to not have siblings )\n            context = 'default', // Default context\n            content = '', // Default content\n            iframeContent = false,\n            position = null,\n            icon = '', // Default icon\n            x = 50, // Default x position\n            y = 50, // Default y position\n            z = 99, // Default z-index\n            parent = window.document.body, // Parent element to append to\n            id = `window-${idCounter}`, // Unique ID for the panel\n            onFocus = () => { }, // Callback when the window is focused\n            onClose = () => { }, // Callback when the window is closed\n            onOpen = () => { }, // Callback when the window is opened\n            onResize = () => { }, // Callback when the window is resized\n            onMessage = () => { }, // Callback when the window receives a message\n            onLoad = () => { }, // Callback when the window is loaded ( remote content )\n            className = '', // Custom classes for styling\n            resizeable = true, // Enable resizable feature\n            preventOverlap = true, // prevents direct overlap with other windows\n            canBeBackground = false // Can be set as background\n        } = options;\n\n        this.windowManager = windowManager;\n\n        // ensure that no other window has the same id\n        // we could check the windowManger.windows array for this\n        // we will check the document ( in case another system has created a window )\n        let existingWindow = document.getElementById(id);\n        if (existingWindow) {\n            console.log('Window with id already exists', id);\n            return existingWindow;\n        }\n\n        this.title = title;\n\n        // only append bp.config.host if icon doesn't start with http\n        if (icon && icon.length && !icon.startsWith('http')) {\n          this.icon = bp.config.host + '/' + icon;\n        }\n\n        this.width = width;\n        this.height = height;\n\n        if (app !== 'default') {\n            this.app = app;\n        } else {\n            this.app = id;\n        }\n\n\n        this.type = type;\n        this.x = x;\n        this.y = y;\n        this.z = 99;\n        this.context = context;\n        this.parent = parent;\n        this.id = id;\n        this.isMaximized = false;\n        this.isMinimized = false;\n        this.container = null;\n        this.content = null;\n        this.iframeContent = iframeContent;\n        this.contentValue = content;\n        this.isActive = false;\n        this.className = className;\n        this.resizeable = resizeable;\n        this.preventOverlap = preventOverlap;\n        this.canBeBackground = canBeBackground;\n\n\n        // if position is set, override the x and y values\n        if (position === 'center') {\n            this.x = (window.innerWidth - parseInt(this.width)) / 2;\n            this.y = (window.innerHeight - parseInt(this.height)) / 2;\n        }\n\n\n        windowManager = windowManager || {\n            windows: [],\n            saveWindowsState: () => { },\n            removeWindow: () => { },\n\n        };\n\n        this.bp = options.bp;\n\n        this.onFocus = onFocus;\n        this.onClose = onClose;\n        this.onOpen = onOpen;\n        this.onLoad = onLoad;\n        this.onMessage = onMessage;\n\n        this.createWindow();\n        this.open();\n\n        return this;\n    }\n\n    initContentArea() {\n        if (typeof this.iframeContent === 'boolean' && this.iframeContent) {\n            this.content = document.createElement(\"iframe\");\n            this.content.classList.add(\"bp-window-content\");\n            document.body.appendChild(this.content);\n            this.content.src = 'about:blank';\n            this.content.onload = () => {\n                let iframeDoc = this.content.contentDocument || this.content.contentWindow.document;\n                iframeDoc.open();\n                iframeDoc.write(this.contentValue);\n                iframeDoc.close();\n                this.setupMessageHandling();\n            };\n        } else if (typeof this.iframeContent === 'string' && this.iframeContent.length) {\n            this.content = document.createElement(\"div\");\n            this.content.classList.add(\"bp-window-content\");\n\n            this.iframe = document.createElement(\"iframe\");\n\n            this.content.appendChild(this.iframe);\n            // by default add allow attributes to the iframe\n            this.iframe.setAttribute(\"allow\", \"autoplay; encrypted-media; fullscreen; clipboard-write; accelerometer; gyroscope; web-share\");\n\n            // if this.iframeContent starts with a '/' it's a local iframe\n            // and if window.discordMode is true, we need to prepend /.proxy/\n            if (this.iframeContent.startsWith('/')) {\n                if (window.discordMode) {\n                    this.iframeContent = `/.proxy${this.iframeContent}`;\n                } else {\n                    this.iframeContent = `${this.bp.config.host}${this.iframeContent}`;\n                }\n            }\n\n            this.iframe.src = this.iframeContent;\n\n            \n\n            // Remark: This is legacy settings for iframe message handling bootstrapping\n            // In more modern applications, we use broadcast channels or other methods\n            // It's important we don't attempt to setup message handling for iframes that are not from the same origin\n            let currentOrigin = bp.config.host;\n            let iframeOrigin = this.iframe.src;\n\n            // check if currentOrigin can be found in iframeOrigin\n            if (iframeOrigin.indexOf(currentOrigin) !== -1) {\n                this.iframe.onload = () => this.setupMessageHandling();\n            } else {\n\n                // hide the iframe\n                this.iframe.style.display = 'none';\n                this.iframe.onload = () => {\n                    // remove loading image\n                    loaderHolder.remove();\n                    // show the iframe\n                    this.iframe.style.display = 'block';\n                }\n\n                // add the loaderHolder\n                let loaderHolder = document.createElement(\"div\");\n                loaderHolder.id = \"loaderHolder\";\n                loaderHolder.innerHTML = `\n                <div id=\"loader\"></div>\n                <p class=\"loaderText\">Loading... ${this.id || this.title || this.label || ''}</p>\n            `;\n                this.content.appendChild(loaderHolder);\n\n                // console.log('not setting up legacy iframe message handling, as the iframe origin does not match current origin');\n            }\n        } else {\n            this.content = document.createElement(\"div\");\n            this.content.classList.add(\"bp-window-content\");\n            if (typeof this.contentValue === 'string') {\n                this.content.innerHTML = this.contentValue;\n            } else {\n                this.content.appendChild(this.contentValue);\n            }\n        }\n    }\n\n    // TODO: migrate away from iframe messages and use BroadcastChannel instead\n    setupMessageHandling() {\n        // iframe is loaded by now\n        this.onLoad(this);\n        const iframeWindow = this.iframe.contentWindow;\n\n        // Inject a script into the iframe to listen for the ESC key\n        const iframeDoc = this.iframe.contentDocument || this.iframe.contentWindow.document;\n        const script = iframeDoc.createElement(\"script\");\n        script.type = \"text/javascript\";\n        script.textContent = `\n            document.addEventListener('keydown', (event) => {\n                if (event.key === 'Escape') {\n                    window.parent.postMessage({ event: 'ESC_KEY_PRESSED' }, '*');\n                }\n            });\n        `;\n        iframeDoc.body.appendChild(script);\n\n        // Set the message event listener on the iframe's window\n        window.addEventListener('message', this.receiveMessage.bind(this), false);\n    }\n\n\n    sendMessage(message) {\n        if (this.iframe && this.iframe.contentWindow) {\n            this.iframe.contentWindow.postMessage(message, '*'); // Consider specifying an origin here instead of '*'\n        }\n    }\n\n    receiveMessage(event) {\n        // Ensure security by checking the event.origin, if possible\n        if (typeof event.data === 'object' && event.data.event) {\n            if (event.data.event === 'ESC_KEY_PRESSED') {\n                console.log('ESC key pressed inside iframe. Closing window...');\n                this.close();\n            } else {\n                this.handleReceivedMessage(event.data);\n            }\n        }\n    }\n\n    handleReceivedMessage(data) {\n        //console.log('Handled Received message:', data, this.onMessage);\n        if (this.onMessage) {\n            this.onMessage(data);\n        }\n    }\n\n\n    move(x, y) {\n        this.x = x;\n        this.y = y;\n        this.container.style.top = `${this.y}px`;\n        this.container.style.left = `${this.x}px`;\n        this.windowManager.saveWindowsState();\n    }\n\n    serialize() {\n\n        // we need an xpath selector for this.parent\n        let parentXpath = getXPathForElement(this.parent);\n        // console.log('parentXpath', parentXpath);\n        return {\n            title: this.title,\n            width: this.width,\n            height: this.height,\n            type: this.type,\n            app: this.app,\n            x: this.x,\n            y: this.y,\n            z: this.z,\n            context: this.context,\n            parent: parentXpath,\n            id: this.id,\n            onClose: this.onClose,\n            onOpen: this.onOpen,\n            className: this.className,\n            resizeable: this.resizeable,\n            canBeBackground: this.canBeBackground\n        };\n    }\n\n    hydrate(data) {\n        console.log('hydrate', data);\n        this.title = data.title;\n        this.width = data.width;\n        this.height = data.height;\n        this.app = data.app;\n        this.type = data.type;\n        this.x = data.x;\n        this.y = data.y;\n        this.z = Number(data.z);\n        this.context = data.context;\n        // TODO: some of these are constructor...maybe all?\n        // this.parent = document.querySelector(data.parent);\n        this.id = data.id;\n        this.onClose = data.onClose;\n        this.onOpen = data.onOpen;\n        this.onMessage = data.onMessage;\n        this.className = data.className;\n        this.resizeable = data.resizeable;\n        this.canBeBackground = data.canBeBackground;\n\n        this.updateWindow();\n    }\n\n    updateWindow() {\n        this.container.style.width = `${this.width}px`;\n        this.container.style.height = `${this.height}px`;\n\n        // top and left values should be relative to the current scroll position of the window\n        let relativeX = this.x + window.scrollX;\n        let relativeY = this.y + window.scrollY;\n        this.container.style.top = `${relativeY}px`;\n        this.container.style.left = `${relativeX}px`;\n        this.container.style.zIndex = this.z;\n        // console.log('updateWindow', this);\n    }\n\n    setDepth(depth) {\n        this.z = depth;\n        this.container.style.zIndex = depth;\n        // console.log('container depth was set to', this.id, depth);\n        this.windowManager.saveWindowsState();\n    }\n\n    setAsBackground() {\n        console.log('setAsBackground', this.windowManager.windows);\n        if (!this.canBeBackground) {\n            console.log('This window cannot be set as background. Try setting canBeBackground:true in the Window declaration');\n            return;\n        }\n        // check other api.ui.windowManager.windows and restore them if isBackground is true\n        this.windowManager.windows.forEach((window) => {\n            if (window.isBackground) {\n                window.restoreWindowFromBackground();\n            }\n        });\n\n        this.container.style.zIndex = -1;\n\n        // make full window size\n        this.container.style.width = \"100%\";\n        this.container.style.height = \"100%\";\n\n        // set top and left to 0\n        this.container.style.top = \"0\";\n        this.container.style.left = \"0\";\n\n        this.isBackground = true;\n        this.isActive = false;\n    }\n\n    restoreWindowFromBackground() {\n\n        this.isBackground = false;\n\n        // reset the z-index\n        this.container.style.zIndex = 11000;\n\n        // reset the window size\n        this.container.style.width = `${this.width}`;\n        this.container.style.height = `${this.height}`;\n\n        // put window back to original position\n        this.container.style.top = `${this.y}px`;\n        this.container.style.left = `${this.x}px`;\n\n        // get the menubar-restore-background-window element and add disabled class\n        let el = document.getElementById('menubar-restore-background-window');\n        if (el) {\n            el.classList.add('disabled');\n        }\n\n    }\n\n    // Restore the window\n    restore() {\n        // console.log('restore', this)\n        // Restore the window's content and original size\n\n        if (this.bp.isMobile()) {\n            this.windowManager.minimizeAllWindows(true);\n        }\n\n        if (window.discordView) {\n            // this.windowManager.minimizeAllWindows(true);\n        }\n\n        this.container.style.display = \"flex\";\n\n        //this.container.style.top = this.y + 'px';\n        //this.container.style.left = this.x + 'px';\n\n        // Mark as not minimized\n        this.isMinimized = false;\n        // TODO: save the window state\n\n    }\n\n    focus(propigate = true) {\n        // console.log('on focus called from Window.js')\n        if (propigate) {\n            this.windowManager.focusWindow(this);\n        }\n\n        // check if window is minimized, if so, restore it\n        if (this.isMinimized) {\n            this.restore();\n        }\n\n        this.onFocus(this);\n\n        if (this.bp.apps.desktop && this.bp.apps.list) {\n          let appData = this.bp.apps.list[this.id];\n          let pushStateId = this.id;\n          if (appData && appData.alias) {\n              // get the first entry in the alias array\n              let alias = appData.alias[0];\n              pushStateId = alias; // use the id if it exists, otherwise use the alias string\n          }\n\n          let pushUrl = `/app/${pushStateId}`;\n          // console.log('focus pushUrl', pushUrl, this.context);\n          if (this.context && this.context !== 'default' && this.context !== 'all') {\n            // don't double append context if it's already ending with it\n            // TODO: should fix this upstream, better URL push state routing\n            if (!pushUrl.endsWith(`/${this.context}`)) {\n              pushUrl += `/${this.context}`;\n            }\n          }\n\n          // history.pushState({ appId: pushStateId }, this.title, `/app/${pushStateId}`);\n          DelayedPushState.push({ appId: pushStateId }, this.title, pushUrl);\n        }\n\n    }\n\n\n    addResizeHandles() {\n        const resizeHandle = document.createElement(\"div\");\n        resizeHandle.classList.add(\"resize-handle\");\n        this.container.appendChild(resizeHandle);\n        resizeHandle.addEventListener(\"mousedown\", (e) => this.startResize(e), { passive: false });\n        resizeHandle.addEventListener(\"touchstart\", (e) => {\n            e.preventDefault(); // Prevent default touch behavior\n            this.startResize(e.touches[0]);\n        }, { passive: false });\n    }\n\n    setSize(width, height) {\n        this.width = width;\n        this.height = height;\n        this.container.style.width = `${this.width}`;\n        this.container.style.height = `${this.height}`;\n        // save the window state\n        this.windowManager.saveWindowsState();\n    }\n\n    startResize(e) {\n        // alert('start resize')\n        const container = this.container;\n        const startX = e.clientX;\n        const startY = e.clientY;\n        const startWidth = container.offsetWidth;\n        const startHeight = container.offsetHeight;\n\n        const onMove = (moveEvent) => {\n            const clientX = moveEvent.clientX || moveEvent.touches[0].clientX;\n            const clientY = moveEvent.clientY || moveEvent.touches[0].clientY;\n            const newWidth = startWidth + (clientX - startX);\n            const newHeight = startHeight + (clientY - startY);\n\n            // Apply new dimensions, respecting min/max constraints\n            container.style.width = `${Math.max(100, newWidth)}px`; // Example min-width\n            container.style.height = `${Math.max(100, newHeight)}px`; // Example min-height\n        };\n\n        const onUp = () => {\n            document.removeEventListener(\"mousemove\", onMove);\n            document.removeEventListener(\"mouseup\", onUp);\n            document.removeEventListener(\"touchmove\", onMove);\n            document.removeEventListener(\"touchend\", onUp);\n        };\n\n        document.addEventListener(\"mousemove\", onMove);\n        document.addEventListener(\"mouseup\", onUp);\n        document.addEventListener(\"touchmove\", onMove, { passive: false });\n        document.addEventListener(\"touchend\", onUp);\n\n        // Disable pointer events on iframe\n        const iframes = this.container.querySelectorAll('iframe');\n        console.log('Disabling pointer events on iframes during resize', iframes);\n        iframes.forEach(iframe => {\n            iframe.style.pointerEvents = 'none';\n        });\n\n\n    }\n\n    resize(e) {\n        if (!this.isResizing) return;\n        const newWidth = this.startWidth + (e.clientX - this.startX);\n        const newHeight = this.startHeight + (e.clientY - this.startY);\n\n        this.container.style.width = `${newWidth}px`;\n        this.container.style.height = `${newHeight}px`;\n\n        if (this.onResize) {\n            this.onResize(newWidth, newHeight);\n        }\n\n    }\n\n    stopResize() {\n        this.isResizing = false;\n        // Restore pointer events on iframe\n        const iframes = this.container.querySelectorAll('iframe');\n        iframes.forEach(iframe => {\n            iframe.style.pointerEvents = 'auto';\n        });\n        // TODO: save the window state\n\n    }\n\n    setTitle(title) {\n        this.title = title;\n        this.titleBarSpan.textContent = title;\n        // save the window state\n        this.windowManager.saveWindowsState();\n    }\n\n    setContent(content) {\n        this.contentValue = content;\n        this.content.innerHTML = content;\n        // save the window state\n        this.windowManager.saveWindowsState();\n    }\n}\n\nexport default Window;\n\n\nfunction getXPathForElement(element) {\n    const fullPath = (el) => {\n        let names = [];\n        while (el.parentNode) {\n            if (el.id) { // If the element has an ID, use it as a unique identifier\n                names.unshift('#' + el.id);\n                break;\n            } else {\n                let e = el, sibling, count = 1;\n                while (sibling = e.previousSibling) {\n                    if (sibling.nodeType === 1 && sibling.tagName === e.tagName) { count++; }\n                    e = sibling;\n                }\n                const tagName = el.tagName.toLowerCase();\n                const nth = count > 1 ? `:nth-of-type(${count})` : '';\n                names.unshift(`${tagName}${nth}`);\n                el = el.parentNode;\n            }\n        }\n        return names.length ? names.join(' > ') : null;\n    };\n    return fullPath(element);\n}\n\nWindow.prototype.maximize = maximize;\nWindow.prototype.minimize = minimize;\nWindow.prototype.open = open;\nWindow.prototype.close = close;\nWindow.prototype.createWindow = createWindow;","export default function maximize({ fullWindow = false } = {}) {\n  // Cache menu bar height (aligned with WindowDrag's static caching suggestion)\n  const getMenuBarOffset = () => {\n    const normalMenuBarHeight = 21;\n    const menuBar = document.querySelector('.desktop-menu-bar');\n    const currentMenuBarHeight = menuBar?.offsetHeight || normalMenuBarHeight;\n    return currentMenuBarHeight - normalMenuBarHeight + (normalMenuBarHeight + 2); // Add 2px for border\n  };\n\n  // Helper to apply styles using transforms\n  const applyTransformStyles = (width, height, translateX, translateY) => {\n    this.container.style.width = width;\n    this.container.style.height = height;\n    this.container.style.top = '0px'; // Reset top/left to avoid conflicts\n    this.container.style.left = '0px';\n    this.container.style.transform = `translate3d(${translateX}px, ${translateY}px, 0)`;\n\n    // Update WindowDrag state to sync transform\n    if (this.dragInstance) { // Assuming WindowDrag instance is stored as this.dragInstance\n      this.dragInstance.tx = translateX;\n      this.dragInstance.ty = translateY;\n      this.dragInstance.nextX = translateX;\n      this.dragInstance.nextY = translateY;\n      this.dragInstance.isDragging = false; // Prevent drag interference\n    }\n  };\n\n  const applyMobileStyles = () => {\n    const translateX = window.scrollX;\n    const translateY = window.scrollY;\n    applyTransformStyles('100vw', 'calc(var(--vh) * 90)', translateX, translateY);\n    this.isMaximized = true;\n  };\n\n  const applyDiscordViewStyles = (isFullWindow) => {\n    if (isFullWindow) {\n      applyTransformStyles('calc(100vw - 75px)', 'calc(var(--vh) * 95)', 75, 20);\n    } else {\n      applyTransformStyles('90vw', 'calc(var(--vh) * 90)', 75, 0);\n    }\n    this.isMaximized = true;\n  };\n\n  const applyDefaultUnmaximizedStyles = () => {\n    const translateX = 50 + window.scrollX;\n    const translateY = 50 + window.scrollY;\n    applyTransformStyles(`${this.width}px`, `${this.height}px`, translateX, translateY);\n    this.isMaximized = false;\n  };\n\n  const applyMaximizedDiscordViewStyles = (isFullWindow) => {\n    if (isFullWindow) {\n      applyTransformStyles('100vw', 'calc(var(--vh) * 95)', 0, 20);\n    } else {\n      applyTransformStyles('calc(100vw - 72px)', 'calc(var(--vh) * 100)', 72, 20);\n    }\n    this.isMaximized = true;\n  };\n\n  const applyDefaultMaximizedStyles = () => {\n    const pixelOffset = getMenuBarOffset();\n    const translateX = window.scrollX;\n    const translateY = pixelOffset + window.scrollY;\n    applyTransformStyles('100vw', 'calc(100vh - 104px)', translateX, translateY);\n    this.isMaximized = true;\n  };\n\n  // Main logic\n  if (this.isMaximized) {\n    if (this.bp.isMobile()) {\n      applyMobileStyles();\n    } else if (window.discordView) {\n      applyDiscordViewStyles(fullWindow);\n    } else {\n      applyDefaultUnmaximizedStyles();\n    }\n  } else {\n    if (this.bp.isMobile()) {\n      applyMobileStyles();\n    } else if (window.discordView) {\n      applyMaximizedDiscordViewStyles(fullWindow);\n    } else {\n      applyDefaultMaximizedStyles();\n    }\n  }\n\n  // TODO: save the window state\n}"," export default function minimize(force = false) {\n        // console.log('minimize', this.isMinimized);\n\n        if (false && this.bp.isMobile()) {\n\n            if (this.isMinimized && !force) {\n                this.restore();\n                // this.content.style.display = \"block\"; // Show content area\n            } else {\n                // Minimize the window\n                // this.container.style.display = \"none\";  // Hide content area\n                // hides the `bp-window-content` area\n                //this.content.style.display = \"none\";  // Hide content area\n                // set the window-container height to 50px\n                this.container.style.height = \"120px\"; // Set height to 50px\n\n                this.isMinimized = true;\n            }\n\n            // this.windowManager.arrangeVerticalStacked();\n\n        } else {\n            if (this.isMinimized && !force) {\n                this.restore();\n            } else {\n                // Minimize the window\n                this.container.style.display = \"none\";  // Hide content area\n                this.isMinimized = true;\n            }\n        }\n        // TODO: save the window state\n    }","export default function open() {\n    console.log('Window open:', this.id, this.title, this.app, this.type, this.context);\n    // set focus to this window ( first )\n    this.focus();\n\n    try {\n        // onOpen may have additional focus events\n        this.onOpen(this);\n    } catch (err) {\n        console.error(err);\n    }\n\n    // TODO: save the window state ???\n\n    if (this.bp.isMobile()) {\n        this.windowManager.minimizeAllWindows(true);\n        this.maximize();\n    }\n\n    if (window.discordView) {\n        // this.windowManager.minimizeAllWindows(true);\n        this.maximize();\n    }\n\n    this.bp.emit('window::open', this);\n\n    // console.log('Window opened:', this);\n    let _app = {\n        id: this.id,\n        app: this.app,\n        label: this.title,\n        icon: this.icon,\n        // app: this.app,\n        type: this.type,\n        context: this.context\n    };\n    // console.log('openWindow openItem', _app);\n    this.bp.apps.taskbar.taskBar.openItem(_app);\n\n    // add the items to this.bp.apps.ui.recentApps\n    this.bp.apps.ui.recentApps = this.bp.apps.ui.recentApps || this.bp.settings.recentApps || [];\n\n    // remove items with the same id if already exists\n    this.bp.apps.ui.recentApps = this.bp.apps.ui.recentApps.filter(app => app.id !== this.id);\n\n    this.bp.apps.ui.recentApps.unshift({\n        id: this.id,\n        app: this.app,\n        label: this.label || this.title,\n        icon: this.icon,\n        type: this.type\n    });\n\n    // update the recentApps localStorage\n    this.bp.apps.ui.recentApps = this.bp.apps.ui.recentApps.slice(0, 10); // keep only the first 10 items\n    this.bp.set('recentApps', this.bp.apps.ui.recentApps);\n\n    // update the url bar push state with app id\n    // modify the url to include the app id\n    // load app data to find any aliases\n    if (this.bp.apps.list) {\n\n        let appData = this.bp.apps.list[this.id];\n        let pushStateId = this.id;\n        if (appData && appData.alias) {\n            // get the first entry in the alias array\n            let alias = appData.alias[0];\n            pushStateId = alias; // use the id if it exists, otherwise use the alias string\n        }\n\n        let pushUrl = `/app/${pushStateId}`;\n        /*\n        if (this.context && this.context !== 'default' && this.context !== 'all') {\n            pushUrl += `/${this.context}`;\n        }\n        */\n        if (typeof DelayedPushState !== 'undefined') {\n            DelayedPushState.push({ appId: pushStateId }, this.title, pushUrl);\n        }\n    }\n\n}\n","export default function close() {\n\n    if (this.parent) {\n        // check first to see if child is in parent\n        if (this.container.parentElement && this.container.parentElement === this.parent) {\n            this.parent.removeChild(this.container);\n        }\n    } else {\n        this.container.parentElement.removeChild(this.container);\n    }\n\n    // check to see if this is an iframe and remove event listener\n    if (this.content && this.content.contentWindow) {\n        this.content.contentWindow.removeEventListener('message', this.receiveMessage.bind(this), false);\n    }\n    if (this.content) {\n        if (this.content.parentNode) {\n            this.content.parentNode.removeChild(this.content);\n        }\n        this.content = null;\n    }\n\n    // check to see if no more windows\n    // TODO: remove this code from Window.js class ( it should not know about menubar )\n    // if window count is 0 get the menubar-set-window-as-background element and add disabled class\n    let windowCount = this.windowManager.windows.length;\n    if (windowCount === 0) {\n        let el = document.getElementById('menubar-set-window-as-background');\n        if (el) {\n            el.classList.add('disabled');\n        }\n    }\n    // console.log('removeWindow', this.id);\n    this.windowManager.removeWindow(this.id);\n\n\n    if (this.windowManager.taskBar) {\n        // remove the chat window from the taskbar\n        this.windowManager.taskBar.closeItem(this.id);\n    }\n\n    // TODO: save the window state ??? removeWindow could do it..?\n\n    this.onClose(this);\n    this.bp.emit('window::close', this);\n\n    if (this.bp.isMobile()) {\n        // this.minimizeAllWindows(true);\n        //this.windowManager.arrangeVerticalStacked();\n        setTimeout(() => {\n            // this.windowManager.arrangeVerticalStacked();\n        }, 100);\n    }\n\n    // clear the current pushState\n    // history.pushState({}, '', '/');\n    if (typeof DelayedPushState !== 'undefined') {\n      DelayedPushState.push({}, '', '/');\n    }\n\n    if (this.bp.isMobile()) {\n        // if mobile, check to see if there are any other windows open\n        // if so, restore the first one\n        if (this.windowManager.windows.length > 0) {\n            let firstWindow = this.windowManager.windows[0];\n            if (firstWindow) {\n                firstWindow.restore();\n            }\n        }\n    }\n\n}\n","import WindowDrag from \"./WindowDrag.js\";\n\nexport default function createWindow() {\n    // Create the main window container\n    this.container = document.createElement(\"div\");\n    this.container.classList.add(\"window-container\");\n\n    // add dataset for app, type, context\n    this.container.dataset.app = this.app;\n    this.container.dataset.type = this.type;\n    this.container.dataset.context = this.context;\n\n    if (this.className) {\n        this.container.classList.add(this.className);\n    }\n\n    if (!this.resizeable) {\n        this.container.classList.add(\"window-not-resizeable\");\n    }\n\n\n    // Helper function to check if two rectangles overlap\n    function checkOverlap(x1, y1, w1, h1, x2, y2, w2, h2, buffer = 10) {\n        // console.log('checkOverlap', x1, y1, w1, h1, x2, y2, w2, h2, buffer);\n        w1 = parseInt(w1);\n        h1 = parseInt(h1);\n        w2 = parseInt(w2);\n        h2 = parseInt(h2);\n        return (\n            x1 < x2 + w2 + buffer &&\n            x1 + w1 + buffer > x2 &&\n            y1 < y2 + h2 + buffer &&\n            y1 + h1 + buffer > y2\n        );\n    }\n\n    // Function to adjust position to prevent overlap\n    function adjustPosition(newWindow, windows, screenWidth, screenHeight, buffer = 10) {\n        let adjustedX = newWindow.x;\n        let adjustedY = newWindow.y;\n\n        // Check overlap with other windows\n        windows.forEach((win) => {\n            if (checkOverlap(adjustedX, adjustedY, newWindow.width, newWindow.height, win.x, win.y, win.width, win.height, buffer)) {\n                // console.log('OVERLAP DETECTED');\n                adjustedX += buffer; // Move slightly to the right\n                // adjustedY += buffer; // Move slightly down\n            }\n        });\n\n        // Check screen boundaries\n        if (adjustedX + newWindow.width + buffer > screenWidth) {\n            adjustedX = screenWidth - newWindow.width - buffer; // Move to the left\n        }\n        if (adjustedY + newWindow.height + buffer > screenHeight) {\n            adjustedY = screenHeight - newWindow.height - buffer; // Move up\n        }\n        if (adjustedX < buffer) {\n            adjustedX = buffer; // Move to the right\n        }\n        if (adjustedY < buffer) {\n            adjustedY = buffer; // Move down\n        }\n\n        return { x: adjustedX, y: adjustedY };\n    }\n\n    // Main Window Creation Logic\n    this.container.id = this.id;\n    this.container.style.width = `${this.width}px`;\n    this.container.style.height = `${this.height}px`;\n    this.container.style.position = \"absolute\";\n\n    // Assume screen dimensions\n    const screenWidth = window.innerWidth;\n    const screenHeight = window.innerHeight;\n\n    /*\n    // Remark: We could perform a general zoom scale for mobile devices\n    if (screenWidth <= 980) {\n        // this.container.style.zoom = 1.5; // Adjust zoom for mobile\n    } else {\n        // do nothing\n    }\n    */\n\n    // Adjust position to prevent overlap\n    let adjustedPosition = {\n        x: this.x,\n        y: this.y,\n    };\n\n    if (this.preventOverlap) {\n        adjustedPosition = adjustPosition(\n            { x: this.x, y: this.y, width: this.width, height: this.height },\n            this.windowManager.windows,\n            screenWidth,\n            screenHeight,\n            32\n        );\n    }\n\n    // adjust the position to be relative to the current scroll position of the window\n    adjustedPosition.x += window.scrollX;\n    adjustedPosition.y += window.scrollY;\n\n    // Apply adjusted position\n    this.x = adjustedPosition.x;\n    this.y = adjustedPosition.y;\n\n    this.container.style.top = `${this.y}px`;\n    this.container.style.left = `${this.x}px`;\n\n    this.container.style.zIndex = 99;\n\n    // add a pointerdown handler to container itself to set 'window-active' status\n    this.container.addEventListener('pointerdown', () => {\n        // set all windows to inactive\n        document.querySelectorAll('.window-container').forEach((window) => {\n            if (window.id === this.id) return; // skip self\n            window.classList.remove('window-active');\n            window.isActive = false;\n        });\n        // set this window to active\n        this.container.classList.add('window-active');\n        this.isActive = true;\n    });\n\n    // Create the title bar\n    this.titleBar = document.createElement(\"div\");\n    this.titleBar.classList.add(\"window-title-bar\");\n\n    if (this.bp.isMobile()) {\n        this.titleBar.onclick = () => {\n            console.log('titleBar clicked on mobile');\n            this.minimize();\n            return;\n            if (!this.isMinimized) {\n                this.minimize(true); // force minimize on mobile\n            } else {\n                this.restore(); // restore on mobile\n            }\n        }\n    }\n\n    // on double click maximize\n    if (window.discordView) {\n        this.titleBar.ondblclick = () => this.maximize({ fullWindow: true });\n    } else {\n        this.titleBar.ondblclick = () => this.maximize();\n    }\n\n    if (this.icon) {\n        let iconTitleBar = document.createElement(\"img\");\n        iconTitleBar.src = this.icon;\n        iconTitleBar.classList.add(\"window-icon\");\n        this.titleBar.appendChild(iconTitleBar);\n    }\n\n    let titleBarSpan = document.createElement(\"span\");\n    titleBarSpan.classList.add(\"window-title-text\");\n    titleBarSpan.textContent = this.title;\n    this.titleBarSpan = titleBarSpan;\n\n    // Drag functionality\n    // Add mouse and touch event listeners to the titleBar\n    // this.titleBar.addEventListener('mousedown', this.startDrag);\n    // this.titleBar.addEventListener('touchstart', this.startDrag, { passive: false });\n\n    // Touch events for mobile\n\n\n    // Create control buttons (Minimize, Maximize, Close)\n    const controls = document.createElement(\"div\");\n    controls.classList.add(\"window-controls\");\n\n    if (!this.bp.isMobile()) {\n        this.minimizeButton = document.createElement(\"button\");\n        this.minimizeButton.innerHTML = \"&#x1F7E1;\"; // Yellow circle\n        this.minimizeButton.classList.add(\"minimize-button\");\n        this.minimizeButton.title = \"Minimize\";\n        this.minimizeButton.onclick = () => this.minimize();\n\n        controls.appendChild(this.minimizeButton);\n\n\n    }\n\n\n    this.maximizeButton = document.createElement(\"button\");\n    this.maximizeButton.innerHTML = \"&#x1F7E2;\"; // Green circle\n    this.maximizeButton.classList.add(\"maximize-button\");\n    this.maximizeButton.title = \"Maximize\";\n    this.maximizeButton.onclick = () => this.maximize();\n\n    controls.appendChild(this.maximizeButton);\n\n\n    this.closeButton = document.createElement(\"button\");\n    this.closeButton.innerHTML = \"&#x1F534;\"; // Red circle\n    this.closeButton.classList.add(\"close-button\");\n    this.closeButton.title = \"Close\";\n    this.closeButton.onclick = () => this.close();\n\n    controls.appendChild(this.closeButton);\n\n    this.titleBar.appendChild(titleBarSpan);\n    this.titleBar.appendChild(controls);\n\n\n    if (!this.bp.isMobile()) {\n        this.dragInstance = new WindowDrag(this.container, this.titleBar);\n    }\n\n\n    this.initContentArea();\n\n    // Append components\n    this.container.appendChild(this.titleBar);\n    this.container.appendChild(this.content);\n\n    if (this.parent) {\n        if (typeof this.parent === 'string') {\n            $(this.parent).append(this.container);\n        } else {\n            this.parent.appendChild(this.container);\n        }\n    }\n\n    // Resizing\n    if (this.resizeable) {\n        this.addResizeHandles();\n    }\n\n    if (this.canBeBackground) {\n        // get the menubar-set-window-as-background element and remove disabled class\n        let el = document.getElementById('menubar-set-window-as-background');\n        if (el) {\n            el.classList.remove('disabled');\n        }\n    }\n\n\n    return this.container;\n}\n\n","class Panel {\n  constructor(options = {}, windowManager) {\n    const {\n      id = 'panel',\n      title = 'Panel',\n      icon = null,\n      position = 'bottom', // 'top', 'left', 'right', 'bottom'\n      panel = 'body',\n      width = 300,\n      height = 200,\n      iframeContent = false,\n      content = '',\n      resizable = false,\n      closable = false,\n      minimizable = false,\n      maximizable = false,\n      focusable = false,\n      maximized = false,\n      minimized = false,\n      onClose = null,\n      onMinimize = null,\n      onMaximize = null,\n      onFocus = null,\n      onBlur = null\n    } = options;\n    this.windowManager = windowManager;\n    this.bp = this.windowManager.bp;\n    this.id = id;\n    this.title = title;\n    // create new DOM element for this.container\n    this.container = document.createElement('div');\n    this.content = null;\n    this.iframeContent = iframeContent;\n    this.contentValue = content;\n    this.parent = panel;\n    this.width = '100%';\n    this.height = '100%';\n\n    console.log('Panel options', options);\n    this.initContentArea();\n\n    // append the content to the container\n    this.container.appendChild(this.content);\n    this.container.classList.add('bp-panel');\n    this.container.style.overflow = 'hidden';\n    // alert(this.width)\n    this.container.style.width = `${this.width}`;\n    this.container.style.height = `${this.height}`;\n\n    this.content.style.width = '100%';\n    this.content.style.height = '100%';\n    // append the container to the parent\n    $(this.parent).append(this.container);\n\n\n  }  // methods for Panel can be added here\n\n}\n\n\nPanel.prototype.initContentArea = function () {\n  if (typeof this.iframeContent === 'boolean' && this.iframeContent) {\n    this.content = document.createElement(\"iframe\");\n    this.content.classList.add(\"bp-panel-content\");\n    document.body.appendChild(this.content);\n    this.content.src = 'about:blank';\n    this.content.onload = () => {\n      let iframeDoc = this.content.contentDocument || this.content.contentWindow.document;\n      iframeDoc.open();\n      iframeDoc.write(this.contentValue);\n      iframeDoc.close();\n      // this.setupMessageHandling();\n    };\n  } else if (typeof this.iframeContent === 'string' && this.iframeContent.length) {\n    this.content = document.createElement(\"div\");\n    this.content.classList.add(\"bp-panel-content\");\n\n    this.iframe = document.createElement(\"iframe\");\n\n    this.content.appendChild(this.iframe);\n    // by default add allow attributes to the iframe\n    this.iframe.setAttribute(\"allow\", \"autoplay; encrypted-media; fullscreen; clipboard-write; accelerometer; gyroscope; web-share\");\n\n    // if this.iframeContent starts with a '/' it's a local iframe\n    // and if window.discordMode is true, we need to prepend /.proxy/\n    if (this.iframeContent.startsWith('/')) {\n      if (window.discordMode) {\n        this.iframeContent = `/.proxy${this.iframeContent}`;\n      } else {\n        this.iframeContent = `${this.bp.config.host}${this.iframeContent}`;\n      }\n    }\n\n    this.iframe.src = this.iframeContent;\n\n    // Remark: This is legacy settings for iframe message handling bootstrapping\n    // In more modern applications, we use broadcast channels or other methods\n    // It's important we don't attempt to setup message handling for iframes that are not from the same origin\n    let currentOrigin = bp.config.host;\n    let iframeOrigin = this.iframe.src;\n\n    // check if currentOrigin can be found in iframeOrigin\n    if (iframeOrigin.indexOf(currentOrigin) !== -1) {\n      // this.iframe.onload = () => this.setupMessageHandling();\n    } else {\n\n      // hide the iframe\n      this.iframe.style.display = 'none';\n      this.iframe.onload = () => {\n        // remove loading image\n        loaderHolder.remove();\n        // show the iframe\n        this.iframe.style.display = 'block';\n      }\n\n      // add the loaderHolder\n      let loaderHolder = document.createElement(\"div\");\n      loaderHolder.id = \"loaderHolder\";\n      loaderHolder.innerHTML = `\n                <div id=\"loader\"></div>\n                <p class=\"loaderText\">Loading... ${this.id || this.title || this.label || ''}</p>\n            `;\n      this.content.appendChild(loaderHolder);\n\n      // console.log('not setting up legacy iframe message handling, as the iframe origin does not match current origin');\n    }\n  } else {\n    this.content = document.createElement(\"div\");\n    this.content.classList.add(\"bp-panel-content\");\n    console.log('content', this.content);\n    console.log('contentValue', this.contentValue);\n    if (typeof this.contentValue === 'string') {\n      this.content.innerHTML = this.contentValue;\n    } else {\n      this.content.appendChild(this.contentValue);\n    }\n  }\n    this.content.style.padding = '0px !important';\n  this.content.style.margin = '0px !important';\n\n}\n\nPanel.prototype.setContent = function (content) {\n  this.contentValue = content;\n  this.content.innerHTML = content;\n  // save the window state\n  this.windowManager.saveWindowsState();\n}\n\n\nPanel.prototype.serialize = function () {\n  return {\n    id: this.id,\n    title: this.title,\n    icon: this.icon,\n    position: this.position,\n    width: this.width,\n    height: this.height,\n    resizable: this.resizable,\n    closable: this.closable,\n    minimizable: this.minimizable,\n    maximizable: this.maximizable,\n    focusable: this.focusable,\n    maximized: this.maximized,\n    minimized: this.minimized\n  };\n};\n\nPanel.prototype.setDepth = function (zIndex) {\n  //this.container.style.zIndex = zIndex;\n  //this.zIndex = zIndex;\n};\n\nPanel.prototype.minimize = function (zIndex) {\n};\n\nPanel.prototype.restore = function (zIndex) {\n};\n\nPanel.prototype.focus = function () {\n  if (this.focusable) {\n    this.container.classList.add('focused');\n    if (this.onFocus) {\n      this.onFocus(this);\n    }\n    // scroll the document to the container\n    this.bp.emit('window::focus', this);\n  }\n  // TODO: we may need better logic for auto-scrolling to panels on open/focus\n  // Remark: Might be better to make this an option, or to modify bp.open() to accept a scrollIntoView option\n  // Prior behavior was catering to Windows, not Panels\n  this.container.scrollIntoView({ behavior: 'smooth', block: 'end' });\n};\n\nPanel.prototype.close = function () {\n  if (this.onClose) {\n    this.onClose(this);\n  }\n  this.container.remove();\n  this.bp.emit('window::close', this);\n  // remove the window from the window manager\n  this.windowManager.removeWindow(this.id);\n  // save the window state\n  this.windowManager.saveWindowsState();\n};\nexport default Panel;\n","/* Buddy Pond - WindowManager.js - Marak Squires 2023 */\nimport TaskBar from './TaskBar.js';\nimport Window from \"./Window.js\";\nimport Panel from \"./Panel.js\"\n\nexport default class WindowManager {\n    constructor(ui, options = {}) {\n        this.storage = options.storage || localStorage; // Use localStorage by default\n        this.storageKey = options.storageKey || 'windowsState'; // Key for storing data\n        this.windows = [];\n        this._windows = [];\n        this.options = options;\n\n        this.bp = ui.bp;\n\n        this.useKeyboardControls = true;\n\n        if (typeof options.useKeyboardControls === \"boolean\") {\n            this.useKeyboardControls = options.useKeyboardControls;\n        }\n\n        if (typeof options.hideTaskBar === \"boolean\") {\n            this.hideTaskBar = options.hideTaskBar;\n        }\n\n        if (typeof options.openWindow === \"function\") {\n            this._openWindow = options.openWindow;\n        } else {\n            this._openWindow = function (name, config) {\n                if (options.panel) {\n                    config = { ...config, panel: true };\n                }\n                const window = this.createWindow(config);\n                window.hydrate(config);\n            }\n        }\n\n        // Remark: Why is TaskBar in the WindowManager?\n        // shouldn't this be in the UI class?\n        /*\n        this.taskBar = new TaskBar({\n            bp: this.bp,\n            homeCallback: () => {\n\t\n            if (!this.state) {\n                // save current window positions\n                this.lastPositionsBeforeArranged = this.windows.map(w => {\n                return {\n                    x: w.x,\n                    y: w.y,\n                    height: w.height,\n                    width: w.width\n                }\n                });\n                // console.log('lastPositionsBeforeArranged', this.lastPositionsBeforeArranged);\n                this.state = 'maximized';\n            }\n\t\n\t\n            if (this.state === 'minimized') {\n                this.minimizeAllWindows();\n                // this.arrangeHorizontalStacked();\n                this.state = 'maximized';\n\t\n            } else if (this.state === 'stacked-vertical') {\n                // stack-vertical has been removed ( for now )\n                // it wasn't looking good as a default and was rarely used\n         \n\t\n            } else if (this.state === 'stacked-horizontal') {\n                // this.arrangeVerticalStacked();\n                // this.state = 'stacked-vertical';\n                // restore all windows to their previous positions\n                this.windows.forEach((w, i) => {\n                w.move(this.lastPositionsBeforeArranged[i].x, this.lastPositionsBeforeArranged[i].y);\n                w.setSize(this.lastPositionsBeforeArranged[i].width + 'px', this.lastPositionsBeforeArranged[i].height + 'px');\n                });\n                this.state = 'maximized';\n\t\n            } else {\n                this.minimizeAllWindows(true);\n                this.windows.forEach((w, i) => {\n                w.move(this.lastPositionsBeforeArranged[i].x, this.lastPositionsBeforeArranged[i].y);\n                w.setSize(this.lastPositionsBeforeArranged[i].width + 'px', this.lastPositionsBeforeArranged[i].height + 'px');\n                });\n\t\n                this.state = 'minimized';\n\t\n            }\n\t\n            // close all windows\n            // this.minimizeAllWindows();\n            // this.windowsClosed = true;\n\t\n            // hide all legacy BP windows\n            $('.window').hide();\n            $('.window').removeClass('window_stack');\n\t\n            }\n        });\n        */\n\n        if (this.options.hideTaskBar) {\n            this.taskBar.taskBarElement.style.display = 'none';\n        }\n\n        if (this.useKeyboardControls) {\n            window.addEventListener(\"keydown\", (e) => {\n                // alert(this.bp.editingMode);\n                if (e.key === \"Escape\" && !this.bp.ignoreUIControlKeys) {\n                    // alert(\"Escape key pressed\");\n                    // find the window with the highest depth and close it\n\n                    // first check to see if there is a dialog open, close that first\n                    const dialog = document.querySelector('.dialog');\n                    if (dialog) {\n                        dialog.remove();\n                        return;\n                    }\n\n                    const window = this.windows[0]; // no sort needed, windows are already sorted by depth\n                    if (window) {\n                        window.close();\n                    }\n                }\n            });\n        }\n\n    }\n\n    createWindow(options) {\n\n        // check to see if there is previous window data in this._windows\n        // check by id, if found, hydrate the window\n        // This is a temporary solution until full app hydration is back online\n        // This solution will allow for position and size to be saved and restored\n        options = { ...options, ...this.options.window };\n        // console.log('createWindow', options);\n        let previousWindowData = this._windows.find(w => w.id === options.id);\n        if (previousWindowData) {\n            // just merge the previous window data with the new options\n            options = { ...previousWindowData, ...options };\n        }\n\n        // check to see if window already exists with id\n        const existingWindow = this.getWindow(options.id);\n        let window;\n\n        if (existingWindow) {\n            window = existingWindow;\n            this.focusWindow(window); // Focus the newly created window\n            return window;\n        }\n        options.bp = this.bp;\n        if (!options.panel) {\n            window = new Window(options, this);\n        } else {\n            window = new Panel(options, this);\n        }\n\n\n        window.container.addEventListener(\"mousedown\", () => {\n            this.focusWindow(window);\n        });\n        this.addWindow(window);\n        if (!options.panel) {\n          this.focusWindow(window); // Focus the newly created window\n        }\n\n        // when opening a window, automatically add it to the taskbar\n        //alert(window.id)\n        /*\n        this.taskBar.openItem({\n            id: window.app,\n            title: window.title,\n            icon: window.icon,\n            onClick: () => {\n                // toggle window minimize / restore state\n                if (this.isMobile()) {\n                    // this.minimizeAllWindows(true);\n                    this.arrangeVerticalStacked();\n                    // we could minimize all other windows here\n                    // minimizeAllWindows();\n                }\n                if (window.isMinimized) {\n                    window.restore();\n                    window.focus();\n                } else {\n                    window.minimize();\n                }\n            }\n        });\n        */\n\n        return window;\n    }\n\n    isMobile() {\n        return window.innerWidth < 1000;\n    }\n\n    addWindow(window) {\n        this.windows.push(window);\n        this.saveWindowsState(); // Save state when a window is added\n        this.updateFocus();\n    }\n\n    removeWindow(window) {\n        // console.log(\"Removing window\", window);\n        this.windows = this.windows.filter(w => w.id !== window);\n        //console.log(\"Remaining windows\", this.windows);\n        this.saveWindowsState(); // Save state when a window is removed\n        this.updateFocus();\n    }\n\n    focusWindow(window) {\n        // window can be the window instance or the window id\n        if (typeof window === 'string') {\n            window = this.getWindow(window);\n        }\n\n        // console.log(\"Focusing window\", window);\n\n        // TODO: this isn't working consistenly?  there seems to be an issue with index\n        // console.log(\"Focusing window\", window.id);\n        const index = this.windows.indexOf(window);\n        if (index !== -1) {\n            this.windows.splice(index, 1);\n            this.windows.unshift(window);\n            // console.log('Focusing window', window.id, 'at index', index);\n            this.updateFocus();\n            window.focus(false);\n            this.saveWindowsState(); // Save state when focus changes\n        }\n        // iterate through all windows and set isFocused to false\n        // set this window isFocused to true\n        this.windows.forEach(w => {\n            if (w.id !== window) {\n                w.isFocused = false;\n\n            } else {\n                window.isFocused = true;\n\n            }\n        });\n    }\n\n    updateFocus() {\n        // console.log(\"Updating focus\");\n        this.windows.forEach((window, index) => {\n            // console.log(\"Setting depth for window\", window.id, \"to\", 1000 - index);\n            // console.log(\"setting depth for window\", window.id, \"to\", 1000 - index);\n            window.setDepth(1000 - index); // Higher index, higher depth\n        });\n    }\n\n    closeAllWindows() {\n        this.windows.forEach(window => window.close());\n        this.windows = [];\n        this.storage.removeItem(this.storageKey); // Clear storage when all windows are closed\n    }\n\n    minimizeAllWindows(force = false) {\n        if (!this.windowsHiding) {\n            this.windowsHiding = true;\n        } else {\n            this.windowsHiding = false;\n        }\n        this.windows.forEach(window => {\n\n            if ((!this.windowsHiding || force) && typeof window.minimize === 'function') {\n                window.minimize(force);\n            } else {\n                window.restore();\n            }\n        });\n    }\n\n    getWindow(id) {\n        // console.log('searching for', id, 'in', this.windows)\n        return this.windows.find(w => w.id === id);\n    }\n\n    findWindows({ app, type }) {\n        if (!app) {\n            console.warn(\"No app provided to findWindows\");\n            return [];\n        }\n\n        // Normalize app and type to arrays for unified matching\n        const apps = Array.isArray(app) ? app : [app];\n        const types = type ? (Array.isArray(type) ? type : [type]) : null;\n\n        return this.windows.filter(w => {\n            const appMatch = apps.includes(w.app);\n            const typeMatch = types ? types.includes(w.type) : true;\n            return appMatch && typeMatch;\n        });\n    }\n\n    saveWindowsState() {\n        const state = JSON.stringify(this.windows.map(window => window.serialize()));\n        // console.log(\"Saving windows state\", JSON.parse(state));\n        this.storage.setItem(this.storageKey, state);\n    }\n\n    // Remark: This should probably be mostly in settings app or a separate app\n    loadWindows() {\n        const serializedWindows = this.storage.getItem(this.storageKey);\n        if (serializedWindows) {\n            this.restoreWindows(serializedWindows);\n        }\n    }\n\n    arrangeVerticalStacked() {\n        let containerHeight = document.body.clientHeight - 100; // Adjust for container and offset\n        let windowWidth = document.body.clientWidth - 10; // Adjust for container and offset\n        const defaultWindowHeight = containerHeight * 0.8; // Default height for non-minimized windows\n        const minimizedHeight = 120; // Height for minimized windows\n        const gap = 10; // Optional gap between windows for better spacing\n        let totalY = 0; // Initialize Y position\n\n        // console.log('window count', this.windows.length, 'defaultWindowHeight', defaultWindowHeight, 'windowWidth', windowWidth);\n        // console.log(this.windows);\n\n        this.windows.reverse().forEach((window, index) => {\n            // Determine the height for the current window\n            let currentWindowHeight = window.isMinimized ? minimizedHeight : defaultWindowHeight;\n\n            // console.log(\"index\", index, window.title, 'isMinimized', window.isMinimized, 'currentWindowHeight', currentWindowHeight, 'windowWidth', windowWidth);\n\n            // Set window size and position\n            window.setSize(windowWidth + 'px', currentWindowHeight + 'px'); // Set size\n            window.move(0, totalY); // Move to calculated Y position\n\n            // Increment totalY for the next window\n            totalY += currentWindowHeight + gap; // Add current window's height and gap\n\n            // console.log(\"totalY\", totalY, \"currentWindowHeight\", currentWindowHeight, \"windowWidth\", windowWidth);\n        });\n\n        // Position the shortCutsContainer below the last window\n        // console.log('setting shortCutsContainer top to', totalY);\n        if (this.bp.apps.desktop && this.bp.apps.desktop.shortCutsContainer) {\n            this.bp.apps.desktop.shortCutsContainer.style.position = 'absolute';\n            this.bp.apps.desktop.shortCutsContainer.style.left = '0px';\n            this.bp.apps.desktop.shortCutsContainer.style.top = totalY + 'px';\n        }\n    }\n\n    arrangeHorizontalStacked() {\n        const containerWidth = document.body.clientWidth; // Adjust to your specific container if not the body\n        const numWindows = this.windows.length;\n        let windowWidth = containerWidth / numWindows;\n        windowWidth -= 10; // Adjust to your desired offset\n        this.windows.forEach((window, index) => {\n            let xPos = windowWidth * index;\n            xPos += 5;\n            xPos += 10 * index; // Adjust to your desired offset\n            window.setSize(windowWidth + 'px', 'calc(100% - 80px)'); // Assuming you have a resize method\n            window.move(xPos, 30); // Assuming you have a move method\n        });\n\n    }\n\n    arrangeCascadeFromTopLeft() {\n        const offset = 20; // Adjust to your desired offset\n        this.windows.forEach((window, index) => {\n            const xPos = offset * index;\n            const yPos = offset * index;\n            window.move(xPos, yPos); // Assuming you have a move method\n        });\n    }\n\n    // Remark: This should probably be mostly in settings app or a separate app\n    // Restore windows from serialized state\n    restoreWindows(serializedWindows, inflate = false) {\n        const windowsData = JSON.parse(serializedWindows);\n        // console.log(\"Restoring windows\", windowsData);\n        // alert(\"Restoring windows from storage, this will be removed in the future, please use the settings app to manage windows\");\n        this._windows = windowsData;\n\n        if (!inflate) {\n            // for now, probably better suited elsewhere\n            return;\n        }\n        windowsData.forEach(data => {\n            // check to see if window already exists with id\n            const existingWindow = this.getWindow(data.id);\n            if (existingWindow) {\n                console.log(\"WARNING: Window with id\", data.id, \"already exists, hydrating instead of creating new window\");\n                existingWindow.hydrate(data);\n                return;\n            }\n            data.parent = document.querySelector(data.parent);\n            // console.log(\"hydrating window\", data);\n            // this.openWindow(data.app, data);\n            //const window = this.createWindow(data);\n            //window.hydrate(data);\n        });\n    }\n}","export default class CountdownManager {\n    constructor() {\n        this.intervalId = null;\n        this.expiryCallbacks = new WeakMap(); // store per-element callbacks\n    }\n\n    updateCountdowns() {\n        const countdownEls = $('.countdown-date').filter(function () {\n            return $(this).data('expired') !== true;\n        });\n\n        if (countdownEls.length === 0) {\n            if (this.intervalId) {\n                clearInterval(this.intervalId);\n                this.intervalId = null;\n                if (bp?.apps?.ui) {\n                    bp.apps.ui.countdownTimer = null;\n                }\n            }\n            return;\n        }\n\n        countdownEls.each((_, el) => {\n            const $el = $(el);\n\n            const expiry = new Date($el.data('expiry')).getTime();\n            const now = Date.now();\n            const distance = expiry - now;\n\n            if (!$el.data('duration')) {\n                const ctime = $el.data('ctime');\n                if (ctime) {\n                    $el.data('duration', expiry - ctime);\n                }\n            }\n            // console.log('distance for', $el, distance);\n            // distance is going negative? on recurse?\n            if (distance < 0) {\n                $el.data('expired', true);\n\n                const cb = this.expiryCallbacks.get(el);\n                if (typeof cb === 'function') {\n                    cb($el);\n                    this.expiryCallbacks.delete(el); // Cleanup\n                }\n\n                return;\n            }\n\n            const days = Math.floor(distance / (1000 * 60 * 60 * 24));\n            const hours = Math.floor((distance % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60));\n            const minutes = Math.floor((distance % (1000 * 60 * 60)) / (1000 * 60));\n            const seconds = Math.floor((distance % (1000 * 60)) / 1000);\n\n            let prefix = '';\n            let timeParts = [];\n\n            if (days > 0) {\n                prefix = `${days} Day${days > 1 ? 's' : ''} `;\n                timeParts.push(hours.toString().padStart(2, '0'));\n            } else if (hours > 0) {\n                timeParts.push(hours.toString());\n            }\n\n            timeParts.push(minutes.toString().padStart(2, '0'));\n            timeParts.push(seconds.toString().padStart(2, '0'));\n\n            $el.text(prefix + timeParts.join(':'));\n        });\n    }\n\n    /**\n     * Start a countdown on the given jQuery element\n     * @param {jQuery} $el - The element to attach the countdown to\n     * @param {string|Date} expiry - Expiry date/time\n     * @param {function} [onExpire] - Optional callback when countdown expires\n     */\n    startCountdown($el, expiry, onExpire) {\n        const expiryTime = new Date(expiry).getTime();\n        const now = Date.now();\n        const duration = expiryTime - now;\n\n        // console.log('Starting countdown for', $el, expiry);\n\n        $el\n            .data('expiry', expiryTime)\n            .data('ctime', now)\n            .data('duration', duration)\n            .data('expired', false);\n\n        if (typeof onExpire === 'function') {\n            this.expiryCallbacks.set($el[0], onExpire);\n        }\n\n        if (!this.intervalId) {\n            this.intervalId = setInterval(() => this.updateCountdowns(), 1000);\n            if (bp?.apps?.ui) {\n                bp.apps.ui.countdownTimer = this.intervalId;\n            }\n        }\n\n        this.updateCountdowns(); // Immediate update\n    }\n}\n","export default function showLightbox(src) {\n  // Remove any existing overlay\n  $('.buddypond-lightbox-overlay').remove();\n\n  const $overlay = $(`\n    <div class=\"buddypond-lightbox-overlay\" style=\"\n      position: fixed;\n      top: 0; left: 0; right: 0; bottom: 0;\n      background: rgba(0,0,0,0.85);\n      display: flex;\n      justify-content: center;\n      align-items: center;\n      z-index: 999999;\n      cursor: zoom-out;\n      display: none;\n    \"></div>\n  `);\n\n  const $img = $('<img style=\"max-width: 90%; max-height: 90%; box-shadow: 0 0 10px #000;\">');\n  $img.attr('src', src);\n  $overlay.append($img);\n  $('body').append($overlay);\n  bp.ignoreUIControlKeys = true;\n\n  // Show with fade-in\n  $overlay.flexShow().fadeIn(150);\n\n  // ESC key handler\n  const onKeyUp = (e) => {\n    if (e.key === 'Escape') {\n      closeOverlay.call(this);\n    }\n  };\n\n  // Close function with fade-out\n  function closeOverlay() {\n    $(document).off('keyup', onKeyUp); // cleanup key event\n    bp.ignoreUIControlKeys = false;\n\n    $overlay.fadeOut(150, () => $overlay.remove());\n  }\n\n  // Click to close\n  $overlay.on('click', closeOverlay);\n  $(document).on('keyup', onKeyUp);\n}\n","// alert.js - Custom HTML-based alert modal for Discord Activities\n\n// Function to create and show a custom alert modal\nexport default function showAlert(message, options = {}) {\n  // Default options\n  const defaults = {\n    title: 'Alert',\n    buttonText: 'OK',\n    onClose: null, // Optional callback when modal is closed\n  };\n  const config = { ...defaults, ...options };\n\n  if (!window.discordView) {\n    return alert(message); // Fallback to native alert if not in Discord Activities\n  }\n\n  // Create modal container\n  const modal = document.createElement('div');\n  modal.className = 'custom-alert-modal';\n  modal.style.position = 'fixed';\n  modal.style.top = '0';\n  modal.style.left = '0';\n  modal.style.width = '100%';\n  modal.style.height = '100%';\n  modal.style.backgroundColor = 'rgba(0, 0, 0, 0.5)';\n  modal.style.display = 'flex';\n  modal.style.alignItems = 'center';\n  modal.style.justifyContent = 'center';\n  modal.style.zIndex = '1000';\n\n  // Create modal content\n  const modalContent = document.createElement('div');\n  modalContent.style.backgroundColor = '#fff';\n  modalContent.style.padding = '20px';\n  modalContent.style.borderRadius = '8px';\n  modalContent.style.maxWidth = '60vw';\n  modalContent.style.width = '90%';\n  modalContent.style.boxShadow = '0 4px 8px rgba(0, 0, 0, 0.2)';\n  modalContent.style.fontFamily = 'Arial, sans-serif';\n  // align text to center\n  modalContent.style.textAlign = 'center';\n\n  // Add title\n  const title = document.createElement('h2');\n  title.textContent = config.title;\n  title.style.margin = '0 0 10px';\n  title.style.fontSize = '2.5em';\n  title.style.color = '#5865F2'; // Discord-like purple\n  modalContent.appendChild(title);\n\n  // Add message\n  const messageText = document.createElement('p');\n  messageText.textContent = message;\n  messageText.style.margin = '0 0 20px';\n  messageText.style.fontSize = '2em';\n  messageText.style.color = '#333'; // Dark text for readability\n  $(messageText).html(message);\n  modalContent.appendChild(messageText);\n\n  // Add OK button\n  const button = document.createElement('button');\n  button.textContent = config.buttonText;\n  button.style.padding = '8px 16px';\n  button.style.backgroundColor = '#5865F2'; // Discord-like purple\n  button.style.color = '#fff';\n  button.style.border = 'none';\n  button.style.borderRadius = '4px';\n  button.style.cursor = 'pointer';\n  button.style.fontSize = '1em';\n  button.addEventListener('click', () => {\n    modal.remove(); // Remove modal from DOM\n    if (config.onClose && typeof config.onClose === 'function') {\n      config.onClose(); // Call optional callback\n    }\n  });\n  modalContent.appendChild(button);\n\n  // Append modal content to modal\n  modal.appendChild(modalContent);\n\n  // Append modal to document body\n  document.body.appendChild(modal);\n\n  // Focus the button for accessibility\n  button.focus();\n\n  // Allow closing with Enter or Escape keys\n  const handleKeydown = (event) => {\n    if (event.key === 'Enter' || event.key === 'Escape') {\n      modal.remove();\n      if (config.onClose) config.onClose();\n      document.removeEventListener('keydown', handleKeydown);\n    }\n  };\n  document.addEventListener('keydown', handleKeydown);\n}","// Remark: We may be able to remove UI and put all this logic in the desktop app\nimport WindowManager from \"./Window/WindowManager.js\";\nimport CountdownManager from \"../ui/CountdownManager.js\";\nimport LightBox from \"./LightBox.js\";\nimport showAlert from \"./showAlert.js\";\n\nexport default class UI {\n    constructor(bp, options = {}) {\n        this.bp = bp;\n\n        this.bp.alert = showAlert.bind(this);\n        let windowManagerOptions = {};\n        windowManagerOptions.openWindow = this.bp.open.bind(this.bp),\n        windowManagerOptions.window = options.window || {};\n        windowManagerOptions.hideTaskBar = options.hideTaskBar;\n        this.windowManager = new WindowManager(this, windowManagerOptions);\n        this.bp.windows = this.windowManager.windows;\n        // will re-load any previous stored metadata about windows\n        // storage provider is defaulted to localStorage\n        this.windowManager.loadWindows();\n\n        options.parent = options.parent || document.body;\n\n        // options.parent.classList.add('droparea');\n\n        this.options = options;\n\n        if (typeof options.fontAwesome !== 'boolean') {\n            options.fontAwesome = true;\n        }\n\n        this.parent = options.parent;\n\n        this.countdownManager = new CountdownManager(this.bp);\n        // this.countdownManager.updateCountdowns();\n        let that = this;\n        this.bp.window = that.windowManager.createWindow.bind(that.windowManager);\n        // console.log('UI initialized with options:', this.options);\n        function setViewportHeight() {\n            const vh = window.innerHeight * 0.01;\n            document.documentElement.style.setProperty('--vh', `${vh}px`);\n            const vw = window.innerWidth;\n            document.documentElement.style.setProperty('--vw', `${vw}px`);\n        }\n\n        // Run on load and resize\n        window.addEventListener('resize', setViewportHeight);\n        setViewportHeight();\n\n        return this;\n    }\n\n    async init() {\n\n        // base CSS for ui, this can be themed in the future\n        if (!this.options.noCSS) {\n            this.bp.appendCSS('/v5/apps/based/ui/ui.css'); // no need to wait for CSS to load?\n            if (this.bp.mode !== 'prod') {\n                this.bp.appendCSS('/v5/apps/based/ui/mobile.css'); // no need to wait for CSS to load?\n                this.bp.appendCSS('/v5/apps/based/ui/Window/Window.css'); // no need to wait for CSS to load?\n                this.bp.appendCSS('/v5/apps/based/ui/Window/TaskBar.css'); // no need to wait for CSS to load?\n                this.bp.appendCSS('/v5/apps/based/ui/Window/StartPanel.css'); // no need to wait for CSS to load?\n\n            }\n        }\n\n        if (this.options.fontAwesome) {\n            this.bp.appendCSS('/v5/vendor/font-awesome/css/fontawesome.css', false, true);\n            this.bp.appendCSS('/v5/vendor/font-awesome/css/all.min.css', false, true);\n        }\n\n        // TODO: add these lines back after removing v4 completely ( as jQuery is already loaded in v4)\n        if (!this.options.noZepto) {\n            // If you need jQuery or another version of $\n            // we have the ability to not load Zepto as $\n            //await this.bp.appendScript('/v5/vendor/zepto.min.js');\n        } else {\n            //await this.bp.appendScript('/v5/vendor/jquery.min.js');\n\n        }\n\n        // await this.bp.appendScript('/desktop/assets/js/jquery.js');\n\n\n        if (!this.options.noTabs) {\n            // what happened here with config? we shouldn't need to reference host here,\n            // TODO: check implementation of importModule with options\n            let SimpleTabs = await this.bp.importModule('/v5/apps/based/ui/SimpleTabs.js', {}, false)\n            this.Tabs = SimpleTabs.default;\n\n        }\n\n        await this.bp.appendScript('/v5/vendor/DateFormat.js');\n\n        this.showLightBox = LightBox.bind(this);\n\n        // bind common document events\n        // TODO: move UI events to separate file\n        let d = document;\n\n        $(d).on('click', '.open-app', function (e) {\n            e.preventDefault();\n            let appName = $(this).data('app');\n            let context = $(this).data('context');\n            let type = $(this).data('type');\n            // let output = $(this).data('output');\n            // check to see if legacy app ( for now)\n            bp.open(appName, { context, type });\n\n        });\n\n         $(d).on('click', function (e) {\n            // console.log('document click', e);\n            // if the click is outside of a lightbox, close it\n         });\n\n        $(d).on('click', '.open-link', async function (e) {\n            e.preventDefault();\n            let url = $(this).data('link');\n            if (!url) {\n                // check if tag has href attribute\n                url = $(this).attr('href');\n            }\n            console.log('open-link ' + url);\n            if (window.discordMode) {\n                await window.discordSdk.commands.openExternalLink({\n                    url: url\n                });\n                return;\n            } else {\n                window.open(url, '_blank');\n            }\n            return false;\n        });\n\n        return 'loaded ui';\n    }\n\n    async appendToElement(el) {\n        console.log('appendToElement', this);\n        let html = await fetchHTMLFragment('ui.html'); // TODO: might need root\n        console.log(html);\n        el.innerHTML = html;\n        return 'hello ui';\n    }\n\n    async loadDocumentBody() {\n        console.log('loadDocumentBody', this);\n        let html = await this.bp.fetchHTMLFragment('/v5/apps/based/ui/ui.html'); // TODO: might need root\n        console.log(html);\n        $('body').append(html);\n        //document.body.innerHTML = html;\n        return 'hello ui';\n\n    }\n\n    toggleFullScreen() {\n        if (document.fullscreenElement) {\n            document.exitFullscreen();\n        } else {\n            document.documentElement.requestFullscreen();\n        }\n    }\n\n}"],"names":["clamp","v","min","max","Math","WindowDrag","static","constructor","container","handle","this","tx","ty","nextX","nextY","framePending","isDragging","onPointerDown","bind","onPointerMove","onPointerUp","addEventListener","isListening","document","handleGlobalMove","handleGlobalUp","ensureOverlay","overlay","createElement","Object","assign","style","position","top","left","width","height","zIndex","background","opacity","cursor","visibility","body","appendChild","showOverlay","hideOverlay","e","activeDrag","initFromComputedPosition","rect","getBoundingClientRect","parentRect","offsetParent","transform","target","closest","setPointerCapture","pointerId","scrollX","window","pageXOffset","documentElement","scrollLeft","scrollY","pageYOffset","scrollTop","pageLeft","pageTop","getComputedStyle","m","DOMMatrix","Number","isFinite","m41","m42","baseLeft","baseTop","docWidth","scrollWidth","clientWidth","innerWidth","docHeight","scrollHeight","clientHeight","innerHeight","marginTop","querySelector","offsetHeight","maxXDoc","minYDoc","maxYDoc","minTranslateX","maxTranslateX","minTranslateY","maxTranslateY","startPageX","clientX","startPageY","clientY","classList","add","userSelect","pageX","pageY","dx","dy","rawNextX","rawNextY","requestAnimationFrame","releasePointerCapture","remove","idCounter","Window","options","windowManager","title","app","type","context","content","iframeContent","icon","x","y","z","parent","id","onFocus","onClose","onOpen","onResize","onMessage","onLoad","className","resizeable","preventOverlap","canBeBackground","existingWindow","getElementById","console","log","length","startsWith","bp","config","host","isMaximized","isMinimized","contentValue","isActive","parseInt","windows","saveWindowsState","removeWindow","createWindow","open","initContentArea","src","onload","iframeDoc","contentDocument","contentWindow","write","close","setupMessageHandling","iframe","setAttribute","discordMode","currentOrigin","indexOf","display","loaderHolder","innerHTML","label","script","textContent","receiveMessage","sendMessage","message","postMessage","event","data","handleReceivedMessage","move","serialize","parentXpath","el","names","parentNode","unshift","sibling","count","previousSibling","nodeType","tagName","toLowerCase","nth","join","fullPath","hydrate","updateWindow","relativeX","relativeY","setDepth","depth","setAsBackground","forEach","isBackground","restoreWindowFromBackground","restore","isMobile","minimizeAllWindows","focus","propigate","focusWindow","apps","desktop","list","appData","pushStateId","alias","pushUrl","endsWith","DelayedPushState","push","appId","addResizeHandles","resizeHandle","startResize","passive","preventDefault","touches","setSize","startX","startY","startWidth","offsetWidth","startHeight","onMove","moveEvent","newWidth","newHeight","onUp","removeEventListener","iframes","querySelectorAll","pointerEvents","resize","isResizing","stopResize","setTitle","titleBarSpan","setContent","prototype","maximize","fullWindow","applyTransformStyles","translateX","translateY","dragInstance","applyMobileStyles","applyDiscordViewStyles","isFullWindow","applyDefaultUnmaximizedStyles","applyMaximizedDiscordViewStyles","applyDefaultMaximizedStyles","pixelOffset","menuBar","getMenuBarOffset","discordView","minimize","force","err","error","emit","_app","taskbar","taskBar","openItem","ui","recentApps","settings","filter","slice","set","parentElement","removeChild","closeItem","setTimeout","firstWindow","dataset","screenWidth","screenHeight","adjustedPosition","newWindow","buffer","adjustedX","adjustedY","win","x1","y1","w1","h1","x2","y2","w2","h2","checkOverlap","adjustPosition","titleBar","onclick","ondblclick","iconTitleBar","controls","minimizeButton","maximizeButton","closeButton","$","append","Panel","panel","resizable","closable","minimizable","maximizable","focusable","maximized","minimized","onMinimize","onMaximize","onBlur","overflow","padding","margin","scrollIntoView","behavior","block","WindowManager","storage","localStorage","storageKey","_windows","useKeyboardControls","hideTaskBar","openWindow","_openWindow","name","taskBarElement","key","ignoreUIControlKeys","dialog","previousWindowData","find","w","getWindow","addWindow","updateFocus","index","splice","isFocused","closeAllWindows","removeItem","windowsHiding","findWindows","warn","Array","isArray","types","appMatch","includes","typeMatch","state","JSON","stringify","map","setItem","loadWindows","serializedWindows","getItem","restoreWindows","arrangeVerticalStacked","containerHeight","windowWidth","defaultWindowHeight","totalY","reverse","currentWindowHeight","shortCutsContainer","arrangeHorizontalStacked","xPos","arrangeCascadeFromTopLeft","yPos","inflate","windowsData","parse","CountdownManager","intervalId","expiryCallbacks","WeakMap","updateCountdowns","countdownEls","each","_","$el","expiry","Date","getTime","distance","now","ctime","cb","get","delete","days","floor","hours","minutes","seconds","prefix","timeParts","toString","padStart","text","clearInterval","countdownTimer","startCountdown","onExpire","expiryTime","duration","setInterval","showLightbox","$overlay","$img","attr","flexShow","fadeIn","onKeyUp","closeOverlay","call","off","fadeOut","on","showAlert","buttonText","alert","modal","backgroundColor","alignItems","justifyContent","modalContent","borderRadius","maxWidth","boxShadow","fontFamily","textAlign","fontSize","color","messageText","html","button","border","handleKeydown","UI","windowManagerOptions","fontAwesome","countdownManager","setViewportHeight","vh","setProperty","vw","init","noCSS","appendCSS","mode","noZepto","noTabs","SimpleTabs","importModule","Tabs","default","appendScript","showLightBox","LightBox","d","appName","async","url","discordSdk","commands","openExternalLink","appendToElement","fetchHTMLFragment","loadDocumentBody","toggleFullScreen","fullscreenElement","exitFullscreen","requestFullscreen"],"mappings":"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"}