{"version":3,"file":"ui.js","sources":["../../../apps/based/ui/Window/StartPanel.js","../../../apps/based/ui/Window/TaskBar.js","../../../apps/based/ui/Window/Window.js","../../../apps/based/ui/Window/lib/maximize.js","../../../apps/based/ui/Window/lib/minimize.js","../../../apps/based/ui/Window/lib/open.js","../../../apps/based/ui/Window/lib/close.js","../../../apps/based/ui/Window/lib/createWindow.js","../../../apps/based/ui/Window/WindowManager.js","../../../apps/based/ui/CountdownManager.js","../../../apps/based/ui/LightBox.js","../../../apps/based/ui/showAlert.js","../../../apps/based/ui/ui.js"],"sourcesContent":["/* StartPanel.js - Marak Squires 2025 - BuddyPond */\nexport default class StartPanel {\n    constructor({ onAppLaunch, bp } = {}) {\n        this.onAppLaunch = onAppLaunch || function () { };\n        this.bp = bp;\n        this.panelElement = null;\n    }\n\n    open() {\n        if (this.panelElement) {\n            this.close();\n            return;\n        }\n\n        const panel = document.createElement('div');\n        panel.className = 'start-panel';\n        panel.style.display = 'none'; // hide initially for animation\n\n        const searchInput = document.createElement('input');\n        searchInput.id = 'start-panel-search';\n        searchInput.className = 'start-panel-search';\n        searchInput.type = 'text';\n        searchInput.placeholder = 'Search apps...';\n        searchInput.autocomplete = 'off';\n\n        const recentSection = document.createElement('div');\n        recentSection.className = 'start-panel-section';\n        recentSection.innerHTML = `<h3>Recent Apps</h3>`;\n        const recentGrid = document.createElement('div');\n        recentGrid.className = 'start-panel-grid';\n        recentSection.appendChild(recentGrid);\n\n        const allSection = document.createElement('div');\n        allSection.className = 'start-panel-section';\n        allSection.innerHTML = `<h3>All Apps</h3>`;\n        const allGrid = document.createElement('div');\n        allGrid.className = 'start-panel-grid';\n        allSection.appendChild(allGrid);\n\n        panel.appendChild(searchInput);\n        panel.appendChild(recentSection);\n        panel.appendChild(allSection);\n\n        document.body.appendChild(panel);\n        this.panelElement = panel;\n        // Animate it in\n        $(panel).css({\n            display: 'block',\n            opacity: 1,\n            transform: 'translateY(100%)',\n            transition: 'all 300ms ease-out'\n        });\n\n        requestAnimationFrame(() => {\n            $(panel).css({\n                opacity: 1,\n                transform: 'translateY(0)'\n            });\n        });\n\n        const recentApps = (window.bp?.apps?.ui?.recentApps || []).slice(0, 10);\n        recentApps.forEach(appData => {\n            const app = this.createAppTile(appData);\n            recentGrid.appendChild(app);\n        });\n\n        const appList = window.bp?.apps?.desktop?.appList || {};\n        const allAppEntries = Object.entries(appList);\n        allAppEntries.forEach(([appName, appData]) => {\n            if (appData.adminOnly && this.bp.me !== 'Marak') return;\n            appData.app = appData.app || appName;\n            appData.id = appData.id || appName;\n            const app = this.createAppTile(appData, appData.icon);\n            allGrid.appendChild(app);\n        });\n\n        searchInput.addEventListener('input', () => {\n            const query = searchInput.value.toLowerCase();\n\n            recentSection.style.display = query.length > 0 ? 'none' : '';\n            allGrid.querySelectorAll('.start-panel-app').forEach(el => {\n                const label = el.dataset.name.toLowerCase();\n                const _app = this.bp.apps.desktop.appList[el.dataset.id];\n                let showResult = label.includes(query);\n                if (!showResult && _app?.categories) {\n                    showResult = _app.categories.some(cat => cat.toLowerCase().includes(query));\n                }\n                el.style.display = showResult ? 'flex' : 'none';\n            });\n        });\n\n        this.closeEventHandler = (event) => {\n            if ($(event.target).hasClass('taskbar-item')) return;\n            if (this.panelElement && !this.panelElement.contains(event.target) && event.target !== searchInput) {\n                this.close();\n            }\n        };\n\n        document.addEventListener('click', this.closeEventHandler);\n        if (!this.bp.isMobile()) {\n            // Remark: We don't want to focus the search input on mobile devices, since this brings up the keyboard\n            searchInput.focus();\n        }\n    }\n\n\n    close() {\n        if (this.panelElement) {\n            const $panel = $(this.panelElement);\n\n            $panel.css({\n                transform: 'translateY(0)',\n                opacity: 1,\n                transition: 'all 300ms ease-in'\n            });\n\n            requestAnimationFrame(() => {\n                $panel.css({\n                    transform: 'translateY(100%)',\n                    opacity: 1\n                });\n\n                setTimeout(() => {\n                    $panel.remove();\n                    this.panelElement = null;\n                }, 300); // match transition duration\n            });\n        }\n\n        if (this.closeEventHandler) {\n            document.removeEventListener('click', this.closeEventHandler);\n            this.closeEventHandler = null;\n        }\n    }\n\n    createAppTile(appData, icon) {\n        // console.log('Creating app tile for:', appData);\n        let name = appData.id || appData.appName || appData.name || appData.label || 'Unknown App';\n        icon = appData.icon || icon;\n        const tile = document.createElement('div');\n        tile.className = 'start-panel-app';\n        tile.dataset.name = name;\n        tile.dataset.id = appData.id || appData.app || name;\n        tile.dataset.app = appData.app || appData.id || name;\n        if (!icon && appData.type === 'buddy' && this.bp.apps.buddylist) {\n            // Remark: special case for default dicebar avatars for buddies\n            let defautSvgAvatar = this.bp.apps.buddylist.defaultAvatarSvg(appData.id.replace('messages/', ''));\n            const svgContainer = document.createElement('div');\n            svgContainer.className = 'start-panel-app-icon';\n            svgContainer.innerHTML = defautSvgAvatar;\n            tile.appendChild(svgContainer);\n        } else {\n            const img = document.createElement('img');\n            img.src = icon;\n            img.alt = name;\n            tile.appendChild(img);\n        }\n\n        const label = document.createElement('div');\n        label.textContent = appData.label || name;\n\n        tile.appendChild(label);\n\n        tile.onclick = async () => {\n            // TODO: this should be handled when adding the item to the recent apps list\n            if (appData.type === 'buddy' && appData.app === 'buddylist') {\n                appData.context = appData.id.replace('messages/', '');\n            }\n            let win = await this.bp.open(appData.app || appData.id, { context: appData.context, type: appData.type });\n            this.onAppLaunch(name);\n            this.close();\n        };\n\n        return tile;\n    }\n}\n\n// Enable keyboard navigation for the start panel\nStartPanel.prototype.enableKeyboardNavigation = function (panel, searchInput) {\n    // Add keyboard navigation\n    let currentIndex = -1;\n    let appTiles = [];\n\n    function updateTilesList() {\n        appTiles = Array.from(panel.querySelectorAll('.start-panel-app'))\n            .filter(el => el.style.display !== 'none');\n    }\n    updateTilesList();\n\n    // Add highlight class\n    function focusTile(index) {\n        console.log('Focusing tile at index:', index);\n        appTiles.forEach((el, i) => {\n            el.classList.toggle('focused', i === index);\n            if (i === index) el.scrollIntoView({ block: 'nearest' });\n        });\n        currentIndex = index;\n    }\n\n    // Clear highlight\n    function clearFocus() {\n        appTiles.forEach(el => el.classList.remove('focused'));\n        currentIndex = -1;\n    }\n\n    searchInput.addEventListener('keydown', (e) => {\n        if (e.key === 'ArrowDown') {\n            updateTilesList();\n            if (appTiles.length > 0) {\n                focusTile(0);\n                e.preventDefault();\n            }\n        }\n    });\n\n    let ROW_LENGTH = 5;\n\n    panel.addEventListener('keydown', (e) => {\n        console.log('Key pressed:', e.key);\n        if (appTiles.length === 0) return;\n\n\n        // tab key should select the first tile\n        if (e.key === 'Tab') {\n            // TODO: shift tab should select the last tile\n            if (currentIndex === -1) {\n                focusTile(0);\n            } else {\n                // Move to next tile\n                let nextIndex = currentIndex + 1;\n                if (nextIndex < appTiles.length) {\n                    focusTile(nextIndex);\n                } else {\n                    // Stay on last tile if next tile is out of bounds\n                    focusTile(appTiles.length - 1);\n                }\n            }\n            e.preventDefault();\n            return;\n        }\n\n        if (e.key === 'ArrowDown') {\n            // ✅ If nothing is focused, focus first tile\n            if (currentIndex === -1) {\n                focusTile(0);\n            } else {\n                // ✅ Move down one row\n                let nextIndex = currentIndex + ROW_LENGTH;\n                if (nextIndex < appTiles.length) {\n                    focusTile(nextIndex);\n                } else {\n                    // Stay on last tile if next row is out of bounds\n                    focusTile(appTiles.length - 1);\n                }\n            }\n            e.preventDefault();\n        }\n\n        if (e.key === 'ArrowUp') {\n            if (currentIndex === -1) {\n                focusTile(0);\n            } else {\n                // ✅ Move up one row\n                let prevIndex = currentIndex - ROW_LENGTH;\n                if (prevIndex >= 0) {\n                    focusTile(prevIndex);\n                } else {\n                    // Stay on first tile if already in top row\n                    focusTile(0);\n                }\n            }\n            e.preventDefault();\n        }\n\n        if (e.key === 'ArrowRight') {\n            if (currentIndex === -1) {\n                focusTile(0);\n            } else {\n                focusTile(Math.min(currentIndex + 1, appTiles.length - 1));\n            }\n            e.preventDefault();\n        }\n\n        if (e.key === 'ArrowLeft') {\n            if (currentIndex === -1) {\n                focusTile(0);\n            } else {\n                focusTile(Math.max(currentIndex - 1, 0));\n            }\n            e.preventDefault();\n        }\n\n        if (e.key === 'Enter' && currentIndex >= 0) {\n            appTiles[currentIndex].click();\n            e.preventDefault();\n        }\n\n        if (e.key === 'Escape') {\n            clearFocus();\n            searchInput.focus();\n        }\n    });\n}","import StartPanel from \"./StartPanel.js\";\n\nexport default class TaskBar {\n    constructor({ homeCallback, bp } = {}) {\n        this.taskBarElement = document.createElement(\"div\");\n        this.taskBarElement.className = \"taskbar-container\";\n        document.body.appendChild(this.taskBarElement);\n\n        // Create containers for anchored and scrollable items\n        this.taskbarLeft = document.createElement(\"div\");\n        this.taskbarLeft.className = \"taskbar-left\";\n        this.taskBarElement.appendChild(this.taskbarLeft);\n\n        this.taskbarItems = document.createElement(\"div\");\n        this.taskbarItems.className = \"taskbar-items\";\n        this.taskBarElement.appendChild(this.taskbarItems);\n\n        this.taskbarRight = document.createElement(\"div\");\n        this.taskbarRight.className = \"taskbar-right\";\n        this.taskBarElement.appendChild(this.taskbarRight);\n\n        this.bp = bp; // Reference to the base platform instance\n        this.items = new Map(); // id -> config\n        this.shortcuts = new Set(); // id\n\n        // Add scroll listener for indicator visibility\n        this.taskbarItems.addEventListener('scroll', () => {\n            const isAtEnd = this.taskbarItems.scrollLeft + this.taskbarItems.clientWidth >= this.taskbarItems.scrollWidth - 1;\n            console.log(\"Scroll end reached:\", isAtEnd);\n            this.taskbarItems.setAttribute('data-scroll-end', isAtEnd);\n        });\n\n        function openStartPanel() {\n            if (!this.startPanel) {\n                this.startPanel = new StartPanel({ bp: this.bp });\n            }\n            this.startPanel.open();\n        }\n\n        // Add \"home\" button (anchored right)\n        if (homeCallback) {\n            this.addItem({\n                id: \"home\",\n                label: \"Home\",\n                onClick: openStartPanel,\n                icon: \"desktop/assets/images/icons/icon_mantra_64.png\",\n                isShortcut: true,\n                anchor: \"right\"\n            });\n        }\n\n        // Add \"settings\" button (anchored left on mobile)\n        if (this.bp.isMobile()) {\n            this.addItem({\n                id: \"settings\",\n                label: \"Settings\",\n                onClick: (e) => {\n                    e.stopPropagation();\n                    const $menu = $('.menu-bar'); // TODO: Reference class property, not DOM\n                    if ($menu.hasClass(\"mobile-active\")) {\n                        $menu.animate({ left: \"-100%\" }, 300, () => {\n                            $menu.removeClass(\"mobile-active\");\n                        });\n                    } else {\n                        $menu\n                            .css({ left: \"-100%\", display: \"flex\" })\n                            .addClass(\"mobile-active\")\n                            .animate({ left: \"0%\" }, 300);\n                    }\n                },\n                icon: \"desktop/assets/images/icons/icon_settings_64.png\",\n                isShortcut: true,\n                anchor: \"left\"\n            });\n        }\n        // Handle context menu (desktop)\n        this.taskBarElement.addEventListener('contextmenu', (e) => {\n            e.preventDefault();\n            const target = e.target.closest('.taskbar-item');\n            if (!target) return;\n            const id = target.dataset.id;\n            if (!id || id === 'home' || id === 'settings') return; // Exclude anchored items\n            this.showContextMenu(id, e.clientX, e.clientY);\n        });\n\n        // Handle long-press context menu (mobile)\n        if (this.bp.isMobile()) {\n            let pressTimer = null;\n            let startX = 0, startY = 0;\n\n            this.taskBarElement.addEventListener('touchstart', (e) => {\n\n                // e.preventDefault();\n                const touch = e.touches[0];\n                const target = e.target.closest('.taskbar-item');\n                if (!target) return;\n                const id = target.dataset.id;\n                if (!id || id === 'home' || id === 'settings') return;\n\n                startX = touch.clientX;\n                startY = touch.clientY;\n\n                pressTimer = setTimeout(() => {\n                    // Haptic feedback\n                    if (navigator.vibrate) {\n                        navigator.vibrate(10); // 10ms pulse\n                    }\n                    this.showContextMenu(id, startX, startY);\n                }, 600); // Long press threshold\n            });\n\n            this.taskBarElement.addEventListener('touchend', () => {\n                clearTimeout(pressTimer);\n            });\n\n            this.taskBarElement.addEventListener('touchmove', () => {\n                clearTimeout(pressTimer); // Cancel if finger moves\n            });\n        }\n\n        this.enableDragAndDrop();\n    }\n\n    showContextMenu(id, x, y) {\n        const existing = document.querySelector('.taskbar-context-menu');\n        if (existing) existing.remove();\n\n        const item = this.items.get(id);\n        if (!item) return;\n\n        const menu = document.createElement('div');\n        menu.className = 'taskbar-context-menu';\n        menu.style.position = 'fixed';\n        menu.style.left = `${x}px`;\n        menu.style.visibility = 'hidden';\n        document.body.appendChild(menu);\n\n        const makeOption = (label, handler) => {\n            const option = document.createElement('div');\n            option.className = 'taskbar-context-menu-item';\n            option.textContent = label;\n            option.onclick = () => {\n                handler();\n                this.startPanel.close();\n                menu.remove();\n            };\n            menu.appendChild(option);\n        };\n\n        if (item.isOpen) {\n            makeOption('Close', () => this.closeItem(id));\n        } else {\n            makeOption('Open', () => this.openItem(item));\n        }\n\n        if (this.shortcuts.has(id)) {\n            makeOption('Unpin from Taskbar', () => {\n                this.shortcuts.delete(id);\n                if (!item.isOpen) {\n                    this.removeItem(id);\n                }\n            });\n        } else {\n            if (item.app !== 'buddylist' && id !== 'buddylist' && item.app !== 'emulator') {\n                makeOption('Keep in Taskbar', () => {\n                    this.shortcuts.add(item.app || id);\n                    let installedTaskBarApps = this.bp.settings.taskbar_apps || {};\n                    installedTaskBarApps[item.app || id] = {\n                        app: item.app || id,\n                        context: item.context || 'default',\n                        label: item.label || id,\n                        icon: item.icon || ''\n                    };\n                    this.bp.set('taskbar_apps', installedTaskBarApps);\n                });\n            }\n        }\n\n        requestAnimationFrame(() => {\n            const menuHeight = menu.offsetHeight;\n            const viewportHeight = window.innerHeight;\n            let top = y - menuHeight - 4;\n            if (top < 0) {\n                top = y + 4;\n            }\n            menu.style.top = `${top}px`;\n            menu.style.visibility = 'visible';\n        });\n\n        const removeMenu = () => menu.remove();\n        setTimeout(() => {\n            window.addEventListener('click', removeMenu, { once: true });\n            window.addEventListener('contextmenu', removeMenu, { once: true });\n        }, 0);\n    }\n\n    // same as addItem ( calls into addItem )\n    // except it also saves the item to localStorage\n    // this is used when the user explicitly pins an app to the taskbar from outside API\n    saveItem(config) {\n        // first add the item to the taskbar\n        config.isShortcut = true; // Ensure it's treated as a shortcut\n        const itemElement = this.addItem(config);\n        if (!itemElement) return;\n\n        let { app, id, context, label = \"\", onClick, icon, isShortcut = true, anchor } = config;\n\n        let installedTaskBarApps = this.bp.settings.taskbar_apps || {};\n        if (id !== 'home' && id !== 'settings') {\n            installedTaskBarApps[app || id] = {\n                id: id,\n                app: app || id,\n                context: context || 'default',\n                label: label || id,\n                icon: icon || ''\n            };\n            this.bp.set('taskbar_apps', installedTaskBarApps);\n        }\n\n    }\n\n    addItem(config) {\n        let { app, id, context, label = \"\", onClick, icon, isShortcut = true, anchor } = config;\n\n        if (typeof onClick !== 'function') {\n            onClick = async (ev, itemElement) => {\n                let existingWindow = this.bp.apps.ui.windowManager.getWindow(id);\n                if (!existingWindow) {\n                    let win = await this.bp.open(app || id, { context });\n                } else {\n                    if (existingWindow.isMinimized) {\n                        existingWindow.restore();\n                        existingWindow.focus();\n                    } else {\n                        existingWindow.minimize();\n                    }\n                }\n                if (this.startPanel) {\n                    this.startPanel.close();\n                }\n                ev.stopPropagation();\n            };\n        }\n\n        let existing = this.taskBarElement.querySelector(`[data-id=\"${id}\"]`);\n        if (existing) return existing;\n\n        const itemElement = document.createElement(\"div\");\n        itemElement.className = \"taskbar-item\";\n        itemElement.dataset.id = id;\n        itemElement.draggable = id !== 'home' && id !== 'settings'; // Disable drag for anchored items\n\n        if (!this.bp.isMobile()) {\n            const itemText = document.createElement(\"div\");\n            itemText.className = \"taskbar-item-text\";\n            itemText.textContent = label;\n            itemElement.appendChild(itemText);\n        }\n\n        if (!icon && app === 'buddylist' && this.bp.apps.buddylist) {\n            // Remark: special case for default dicebar avatars for buddies\n            let defautSvgAvatar = this.bp.apps.buddylist.defaultAvatarSvg(context.replace('messages/', ''));\n            const svgContainer = document.createElement('div');\n            svgContainer.className = 'start-panel-app-icon';\n            svgContainer.innerHTML = defautSvgAvatar;\n            svgContainer.title = context;\n            label = label || context.replace('messages/', '');\n            // itemText.textContent = label; // Update text content with context\n            itemElement.appendChild(svgContainer);\n        } else if (icon) {\n            const itemIcon = document.createElement(\"img\");\n            itemIcon.src = icon;\n            itemIcon.height = 32;\n            itemIcon.width = 32;\n            itemIcon.alt = label;\n            itemElement.appendChild(itemIcon);\n        } else {\n            itemElement.textContent = label;\n        }\n\n        itemElement.onclick = (ev) => {\n            if (onClick) onClick.call(this, ev, itemElement);\n            this.alertItem(id);\n        };\n\n        if (isShortcut) {\n            this.shortcuts.add(id);\n        }\n\n        // Append to appropriate container\n        if (id === 'home' && anchor === 'right') {\n            this.taskbarRight.appendChild(itemElement);\n        } else if (id === 'settings' && anchor === 'left') {\n            this.taskbarLeft.appendChild(itemElement);\n        } else {\n            this.taskbarItems.appendChild(itemElement);\n            // Scroll to the newly added item\n            if (this.bp.isMobile()) {\n                requestAnimationFrame(() => {\n                    itemElement.scrollIntoView({ behavior: 'smooth', inline: 'start' });\n                });\n            }\n        }\n\n        this.items.set(id, {\n            ...config,\n            element: itemElement,\n            isOpen: false,\n            isShortcut: isShortcut\n        });\n\n        return itemElement;\n    }\n\n    openItem(config) {\n        let item = this.items.get(config.id);\n        if (item) {\n            item.isOpen = true;\n            item.element.classList.add(\"taskbar-item-open\");\n            // Scroll to the opened item\n            if (this.bp.isMobile()) {\n                requestAnimationFrame(() => {\n                    item.element.scrollIntoView({ behavior: 'smooth', inline: 'start' });\n                });\n            }\n        } else {\n            this.addItem({ ...config, isShortcut: false });\n            this.openItem(config); // Scroll happens in addItem\n        }\n    }\n\n    closeItem(id) {\n        const item = this.items.get(id);\n        if (!item) return;\n\n        item.isOpen = false;\n        item.element.classList.remove(\"taskbar-item-open\");\n\n        if (!this.shortcuts.has(id)) {\n            this.removeItem(id);\n        }\n\n        const win = this.bp.apps.ui.windowManager.getWindow(id);\n        if (win) {\n            win.close();\n        } else {\n            console.warn(`No window found with ID: ${id}`);\n        }\n    }\n\n    removeItem(id) {\n        const item = this.items.get(id);\n        if (!item) return;\n\n        item.element.parentNode.removeChild(item.element);\n        this.items.delete(id);\n        this.shortcuts.delete(id);\n\n        let taskBarApps = this.bp.settings.taskbar_apps || {};\n        if (taskBarApps[id]) {\n            delete taskBarApps[id];\n            this.bp.set('taskbar_apps', taskBarApps);\n        }\n    }\n\n    getItem(id) {\n        return this.items.get(id);\n    }\n\n    alertItem(id) {\n        const item = this.items.get(id);\n        if (item) {\n            item.element.classList.add(\"taskbar-item-alert\");\n            setTimeout(() => item.element.classList.remove(\"taskbar-item-alert\"), 1000);\n        }\n    }\n\n    enableDragAndDrop() {\n\n        let dragged = null;\n\n        this.taskbarItems.addEventListener(\"dragstart\", (e) => {\n            dragged = e.target.closest(\".taskbar-item\");\n            if (dragged && (dragged.dataset.id === 'home' || dragged.dataset.id === 'settings')) {\n                e.preventDefault(); // Prevent dragging anchored items\n                dragged = null;\n            }\n        });\n\n        this.taskbarItems.addEventListener(\"dragover\", (e) => {\n            e.preventDefault();\n            const over = e.target.closest(\".taskbar-item\");\n            if (dragged && over && dragged !== over && over.dataset.id !== 'home' && over.dataset.id !== 'settings') {\n                const draggedIndex = [...this.taskbarItems.children].indexOf(dragged);\n                const overIndex = [...this.taskbarItems.children].indexOf(over);\n                if (draggedIndex < overIndex) {\n                    this.taskbarItems.insertBefore(over, dragged);\n                } else {\n                    this.taskbarItems.insertBefore(dragged, over);\n                }\n            }\n        });\n\n        this.taskbarItems.addEventListener(\"dragend\", () => {\n            if (dragged) {\n                const newOrder = Array.from(this.taskbarItems.children).map(item => item.dataset.id);\n                // references the saved / pinned taskbar apps\n                let taskBarApps = this.bp.settings.taskbar_apps || {};\n                const newTaskBarApps = {};\n                newOrder.forEach(id => {\n                    // only save the order of taskbar apps that are currently pinned\n                    if (taskBarApps[id]) {\n                        let _app = taskBarApps[id];\n                        newTaskBarApps[id] = _app;\n                    }\n                });\n                this.bp.set('taskbar_apps', newTaskBarApps);\n            }\n            dragged = null;\n        });\n    }\n}","// Buddy Pond - Window.js - Marak Squires 2023\n// A simple window class for creating draggable, resizable windows\n// Remark: WindowManager interface is optional and will be stubbed out if not provided\n\nimport maximize from \"./lib/maximize.js\";\nimport minimize from \"./lib/minimize.js\";\nimport open from \"./lib/open.js\";\nimport close from \"./lib/close.js\";\nimport createWindow from \"./lib/createWindow.js\";\n\nlet idCounter = 0;\n\nclass Window {\n    constructor(options = {}, windowManager) {\n        const {\n            title = \"Window\", // Title of the window\n            width = '400px', // Default width\n            height = '300px', // Default height\n            app = 'default', // default app\n            type = 'singleton', // Default type ( intended to not have siblings )\n            context = 'default', // Default context\n            content = '', // Default content\n            iframeContent = false,\n            position = null,\n            icon = '', // Default icon\n            x = 50, // Default x position\n            y = 50, // Default y position\n            z = 99, // Default z-index\n            parent = window.document.body, // Parent element to append to\n            id = `window-${idCounter}`, // Unique ID for the panel\n            onFocus = () => { }, // Callback when the window is focused\n            onClose = () => { }, // Callback when the window is closed\n            onOpen = () => { }, // Callback when the window is opened\n            onResize = () => { }, // Callback when the window is resized\n            onMessage = () => { }, // Callback when the window receives a message\n            onLoad = () => { }, // Callback when the window is loaded ( remote content )\n            className = '', // Custom classes for styling\n            resizeable = true, // Enable resizable feature\n            preventOverlap = true, // prevents direct overlap with other windows\n            canBeBackground = false // Can be set as background\n        } = options;\n\n        this.windowManager = windowManager;\n\n        // ensure that no other window has the same id\n        // we could check the windowManger.windows array for this\n        // we will check the document ( in case another system has created a window )\n        let existingWindow = document.getElementById(id);\n        if (existingWindow) {\n            console.log('Window with id already exists', id);\n            return existingWindow;\n        }\n\n        this.title = title;\n        this.icon = icon;\n        this.width = width;\n        this.height = height;\n\n        if (app !== 'default') {\n            this.app = app;\n        } else {\n            this.app = id;\n        }\n\n\n        this.type = type;\n        this.x = x;\n        this.y = y;\n        this.z = 99;\n        this.context = context;\n        this.parent = parent;\n        this.id = id;\n        this.isMaximized = false;\n        this.isMinimized = false;\n        this.container = null;\n        this.content = null;\n        this.iframeContent = iframeContent;\n        this.contentValue = content;\n        this.isActive = false;\n        this.className = className;\n        this.resizeable = resizeable;\n        this.preventOverlap = preventOverlap;\n        this.canBeBackground = canBeBackground;\n\n\n        // if position is set, override the x and y values\n        if (position === 'center') {\n            this.x = (window.innerWidth - parseInt(this.width)) / 2;\n            this.y = (window.innerHeight - parseInt(this.height)) / 2;\n        }\n\n\n        windowManager = windowManager || {\n            windows: [],\n            saveWindowsState: () => { },\n            removeWindow: () => { },\n\n        };\n\n        this.bp = options.bp;\n\n        this.onFocus = onFocus;\n        this.onClose = onClose;\n        this.onOpen = onOpen;\n        this.onLoad = onLoad;\n        this.onMessage = onMessage;\n\n        this.startDrag = this.startDrag.bind(this);\n        this.drag = this.drag.bind(this);\n        this.stopDrag = this.stopDrag.bind(this);\n\n\n        this.createWindow();\n        this.open();\n\n        return this;\n    }\n\n    initContentArea() {\n        if (typeof this.iframeContent === 'boolean' && this.iframeContent) {\n            this.content = document.createElement(\"iframe\");\n            this.content.classList.add(\"bp-window-content\");\n            document.body.appendChild(this.content);\n            this.content.src = 'about:blank';\n            this.content.onload = () => {\n                let iframeDoc = this.content.contentDocument || this.content.contentWindow.document;\n                iframeDoc.open();\n                iframeDoc.write(this.contentValue);\n                iframeDoc.close();\n                this.setupMessageHandling();\n            };\n        } else if (typeof this.iframeContent === 'string' && this.iframeContent.length) {\n            this.content = document.createElement(\"div\");\n            this.content.classList.add(\"bp-window-content\");\n\n            this.iframe = document.createElement(\"iframe\");\n\n            this.content.appendChild(this.iframe);\n            // by default add allow attributes to the iframe\n            this.iframe.setAttribute(\"allow\", \"autoplay; encrypted-media; fullscreen; clipboard-write; accelerometer; gyroscope; web-share\");\n\n            // if this.iframeContent starts with a '/' it's a local iframe\n            // and if window.discordMode is true, we need to prepend /.proxy/\n            if (this.iframeContent.startsWith('/')) {\n                if (window.discordMode) {\n                    this.iframeContent = `/.proxy${this.iframeContent}`;\n                }\n            }\n\n            this.iframe.src = this.iframeContent;\n\n            \n\n            // Remark: This is legacy settings for iframe message handling bootstrapping\n            // In more modern applications, we use broadcast channels or other methods\n            // It's important we don't attempt to setup message handling for iframes that are not from the same origin\n            let currentOrigin = window.location.origin;\n            let iframeOrigin = this.iframe.src;\n\n            // check if currentOrigin can be found in iframeOrigin\n            if (iframeOrigin.indexOf(currentOrigin) !== -1) {\n                this.iframe.onload = () => this.setupMessageHandling();\n            } else {\n\n                // hide the iframe\n                this.iframe.style.display = 'none';\n                this.iframe.onload = () => {\n                    // remove loading image\n                    loaderHolder.remove();\n                    // show the iframe\n                    this.iframe.style.display = 'block';\n                }\n\n                // add the loaderHolder\n                let loaderHolder = document.createElement(\"div\");\n                loaderHolder.id = \"loaderHolder\";\n                loaderHolder.innerHTML = `\n                <div id=\"loader\"></div>\n                <p class=\"loaderText\">Loading... ${this.id || this.title || this.label || ''}</p>\n            `;\n                this.content.appendChild(loaderHolder);\n\n                // console.log('not setting up legacy iframe message handling, as the iframe origin does not match current origin');\n            }\n        } else {\n            this.content = document.createElement(\"div\");\n            this.content.classList.add(\"bp-window-content\");\n            if (typeof this.contentValue === 'string') {\n                this.content.innerHTML = this.contentValue;\n            } else {\n                this.content.appendChild(this.contentValue);\n            }\n        }\n    }\n\n    // TODO: migrate away from iframe messages and use BroadcastChannel instead\n    setupMessageHandling() {\n        // iframe is loaded by now\n        this.onLoad(this);\n        const iframeWindow = this.iframe.contentWindow;\n\n        // Inject a script into the iframe to listen for the ESC key\n        const iframeDoc = this.iframe.contentDocument || this.iframe.contentWindow.document;\n        const script = iframeDoc.createElement(\"script\");\n        script.type = \"text/javascript\";\n        script.textContent = `\n            document.addEventListener('keydown', (event) => {\n                if (event.key === 'Escape') {\n                    window.parent.postMessage({ event: 'ESC_KEY_PRESSED' }, '*');\n                }\n            });\n        `;\n        //alert(script.textContent)\n        iframeDoc.body.appendChild(script);\n\n        // Set the message event listener on the iframe's window\n        window.addEventListener('message', this.receiveMessage.bind(this), false);\n    }\n\n\n    sendMessage(message) {\n        if (this.iframe && this.iframe.contentWindow) {\n            this.iframe.contentWindow.postMessage(message, '*'); // Consider specifying an origin here instead of '*'\n        }\n    }\n\n    receiveMessage(event) {\n        // Ensure security by checking the event.origin, if possible\n        if (typeof event.data === 'object' && event.data.event) {\n            if (event.data.event === 'ESC_KEY_PRESSED') {\n                console.log('ESC key pressed inside iframe. Closing window...');\n                this.close();\n            } else {\n                this.handleReceivedMessage(event.data);\n            }\n        }\n    }\n\n    handleReceivedMessage(data) {\n        //console.log('Handled Received message:', data, this.onMessage);\n        if (this.onMessage) {\n            this.onMessage(data);\n        }\n    }\n\n\n    move(x, y) {\n        this.x = x;\n        this.y = y;\n        this.container.style.top = `${this.y}px`;\n        this.container.style.left = `${this.x}px`;\n        this.windowManager.saveWindowsState();\n    }\n\n    serialize() {\n\n        // we need an xpath selector for this.parent\n        let parentXpath = getXPathForElement(this.parent);\n        // console.log('parentXpath', parentXpath);\n        return {\n            title: this.title,\n            width: this.width,\n            height: this.height,\n            type: this.type,\n            app: this.app,\n            x: this.x,\n            y: this.y,\n            z: this.z,\n            context: this.context,\n            parent: parentXpath,\n            id: this.id,\n            onClose: this.onClose,\n            onOpen: this.onOpen,\n            className: this.className,\n            resizeable: this.resizeable,\n            canBeBackground: this.canBeBackground\n        };\n    }\n\n    hydrate(data) {\n        console.log('hydrate', data);\n        this.title = data.title;\n        this.width = data.width;\n        this.height = data.height;\n        this.app = data.app;\n        this.type = data.type;\n        this.x = data.x;\n        this.y = data.y;\n        this.z = Number(data.z);\n        this.context = data.context;\n        // TODO: some of these are constructor...maybe all?\n        // this.parent = document.querySelector(data.parent);\n        this.id = data.id;\n        this.onClose = data.onClose;\n        this.onOpen = data.onOpen;\n        this.onMessage = data.onMessage;\n        this.className = data.className;\n        this.resizeable = data.resizeable;\n        this.canBeBackground = data.canBeBackground;\n\n        this.updateWindow();\n    }\n\n    updateWindow() {\n        this.container.style.width = `${this.width}px`;\n        this.container.style.height = `${this.height}px`;\n        this.container.style.top = `${this.y}px`;\n        this.container.style.left = `${this.x}px`;\n        this.container.style.zIndex = this.z;\n        // console.log('updateWindow', this);\n    }\n\n    setDepth(depth) {\n        this.z = depth;\n        this.container.style.zIndex = depth;\n        // console.log('container depth was set to', this.id, depth);\n        this.windowManager.saveWindowsState();\n    }\n\n    setAsBackground() {\n        console.log('setAsBackground', this.windowManager.windows);\n        if (!this.canBeBackground) {\n            console.log('This window cannot be set as background. Try setting canBeBackground:true in the Window declaration');\n            return;\n        }\n        // check other api.ui.windowManager.windows and restore them if isBackground is true\n        this.windowManager.windows.forEach((window) => {\n            if (window.isBackground) {\n                window.restoreWindowFromBackground();\n            }\n        });\n\n        this.container.style.zIndex = -1;\n\n        // make full window size\n        this.container.style.width = \"100%\";\n        this.container.style.height = \"100%\";\n\n        // set top and left to 0\n        this.container.style.top = \"0\";\n        this.container.style.left = \"0\";\n\n        this.isBackground = true;\n        this.isActive = false;\n    }\n\n    restoreWindowFromBackground() {\n\n        this.isBackground = false;\n\n        // reset the z-index\n        this.container.style.zIndex = 11000;\n\n        // reset the window size\n        this.container.style.width = `${this.width}`;\n        this.container.style.height = `${this.height}`;\n\n        // put window back to original position\n        this.container.style.top = `${this.y}px`;\n        this.container.style.left = `${this.x}px`;\n\n        // get the menubar-restore-background-window element and add disabled class\n        let el = document.getElementById('menubar-restore-background-window');\n        if (el) {\n            el.classList.add('disabled');\n        }\n\n    }\n\n    startDrag(e) {\n        this.isDragging = true;\n        this.titleBar.style.cursor = \"grabbing\";\n\n        // Disable pointer events on iframe\n        const iframes = this.container.querySelectorAll('iframe');\n        iframes.forEach(iframe => {\n            iframe.style.pointerEvents = 'none';\n        });\n\n        // Get coordinates from mouse or touch event\n        const { clientX, clientY } = this.getEventCoordinates(e);\n        this.offsetX = clientX - this.container.offsetLeft;\n        this.offsetY = clientY - this.container.offsetTop;\n\n        // Add event listeners for both mouse and touch events\n        document.addEventListener('mousemove', this.drag);\n        document.addEventListener('touchmove', this.drag, { passive: false });\n        document.addEventListener('mouseup', this.stopDrag);\n        document.addEventListener('touchend', this.stopDrag);\n    }\n\n    drag(e) {\n        if (!this.isDragging) return;\n\n        // Prevent default behavior for touchmove to avoid scrolling\n        e.preventDefault();\n\n        // Get coordinates from mouse or touch event\n        const { clientX, clientY } = this.getEventCoordinates(e);\n\n        // Update container position\n        // Ensure window does not drag off the screen\n        let menuBarHeight = 42;\n        let bottomLimit = window.innerHeight - 52; // 50px from bottom\n        if (clientY > menuBarHeight && clientY < bottomLimit) {\n            this.container.style.top = `${clientY - this.offsetY}px`;\n        }\n        let leftLimit = 52; // 0px from left\n        let rightLimit = window.innerWidth - 52; // 0px from right\n        if (clientX > leftLimit && clientX < rightLimit) {\n            this.container.style.left = `${clientX - this.offsetX}px`;\n        }\n    }\n\n    stopDrag() {\n        this.isDragging = false;\n        this.titleBar.style.cursor = \"grab\";\n\n        // Restore pointer events on iframe\n        const iframes = this.container.querySelectorAll('iframe');\n        iframes.forEach(iframe => {\n            iframe.style.pointerEvents = 'auto';\n        });\n\n        // Remove event listeners\n        document.removeEventListener('mousemove', this.drag);\n        document.removeEventListener('touchmove', this.drag);\n        document.removeEventListener('mouseup', this.stopDrag);\n        document.removeEventListener('touchend', this.stopDrag);\n\n        // Save window state\n        this.x = this.container.offsetLeft;\n        this.y = this.container.offsetTop;\n        this.z = Number(this.container.style.zIndex);\n        if (this.windowManager) {\n            this.windowManager.saveWindowsState();\n        } else {\n            console.warn('windowManager is not defined');\n        }\n    }\n\n    getEventCoordinates(e) {\n        let clientX, clientY;\n        if (e.type.startsWith('touch')) {\n            // Use the first touch point for dragging\n            const touch = e.touches[0] || e.changedTouches[0];\n            clientX = touch.clientX;\n            clientY = touch.clientY;\n        } else {\n            // Mouse event\n            clientX = e.clientX;\n            clientY = e.clientY;\n        }\n        return { clientX, clientY };\n    }\n\n    // Restore the window\n    restore() {\n        // console.log('restore', this)\n        // Restore the window's content and original size\n\n        if (this.bp.isMobile()) {\n            this.windowManager.minimizeAllWindows(true);\n        }\n\n        if (window.discordView) {\n            // this.windowManager.minimizeAllWindows(true);\n        }\n\n        this.container.style.display = \"flex\";\n\n        //this.container.style.top = this.y + 'px';\n        //this.container.style.left = this.x + 'px';\n\n        // Mark as not minimized\n        this.isMinimized = false;\n        // TODO: save the window state\n\n    }\n\n    focus(propigate = true) {\n        // console.log('on focus called from Window.js')\n        if (propigate) {\n            this.windowManager.focusWindow(this);\n        }\n\n        // check if window is minimized, if so, restore it\n        if (this.isMinimized) {\n            this.restore();\n        }\n\n        this.onFocus(this);\n\n        let appData = this.bp.apps.desktop.appList[this.id];\n        let pushStateId = this.id;\n        if (appData && appData.alias) {\n            // get the first entry in the alias array\n            let alias = appData.alias[0];\n            pushStateId = alias; // use the id if it exists, otherwise use the alias string\n        }\n        // history.pushState({ appId: pushStateId }, this.title, `/app/${pushStateId}`);\n        DelayedPushState.push({ appId: pushStateId }, this.title, `/app/${pushStateId}`);\n\n    }\n\n\n    addResizeHandles() {\n        const resizeHandle = document.createElement(\"div\");\n        resizeHandle.classList.add(\"resize-handle\");\n        this.container.appendChild(resizeHandle);\n        resizeHandle.addEventListener(\"mousedown\", (e) => this.startResize(e), { passive: false });\n        resizeHandle.addEventListener(\"touchstart\", (e) => {\n            e.preventDefault(); // Prevent default touch behavior\n            this.startResize(e.touches[0]);\n        }, { passive: false });\n    }\n\n    setSize(width, height) {\n        this.width = width;\n        this.height = height;\n        this.container.style.width = `${this.width}`;\n        this.container.style.height = `${this.height}`;\n        // save the window state\n        this.windowManager.saveWindowsState();\n    }\n\n    startResize(e) {\n        const container = this.container;\n        const startX = e.clientX;\n        const startY = e.clientY;\n        const startWidth = container.offsetWidth;\n        const startHeight = container.offsetHeight;\n\n        const onMove = (moveEvent) => {\n            const clientX = moveEvent.clientX || moveEvent.touches[0].clientX;\n            const clientY = moveEvent.clientY || moveEvent.touches[0].clientY;\n            const newWidth = startWidth + (clientX - startX);\n            const newHeight = startHeight + (clientY - startY);\n\n            // Apply new dimensions, respecting min/max constraints\n            container.style.width = `${Math.max(100, newWidth)}px`; // Example min-width\n            container.style.height = `${Math.max(100, newHeight)}px`; // Example min-height\n        };\n\n        const onUp = () => {\n            document.removeEventListener(\"mousemove\", onMove);\n            document.removeEventListener(\"mouseup\", onUp);\n            document.removeEventListener(\"touchmove\", onMove);\n            document.removeEventListener(\"touchend\", onUp);\n        };\n\n        document.addEventListener(\"mousemove\", onMove);\n        document.addEventListener(\"mouseup\", onUp);\n        document.addEventListener(\"touchmove\", onMove, { passive: false });\n        document.addEventListener(\"touchend\", onUp);\n    }\n\n    resize(e) {\n        if (!this.isResizing) return;\n        const newWidth = this.startWidth + (e.clientX - this.startX);\n        const newHeight = this.startHeight + (e.clientY - this.startY);\n\n        this.container.style.width = `${newWidth}px`;\n        this.container.style.height = `${newHeight}px`;\n\n        if (this.onResize) {\n            this.onResize(newWidth, newHeight);\n        }\n\n    }\n\n    stopResize() {\n        this.isResizing = false;\n        // TODO: save the window state\n\n    }\n\n    setTitle(title) {\n        this.title = title;\n        this.titleBarSpan.textContent = title;\n        // save the window state\n        this.windowManager.saveWindowsState();\n    }\n\n    setContent(content) {\n        this.contentValue = content;\n        this.content.innerHTML = content;\n        // save the window state\n        this.windowManager.saveWindowsState();\n    }\n}\n\nexport default Window;\n\n\nfunction getXPathForElement(element) {\n    const fullPath = (el) => {\n        let names = [];\n        while (el.parentNode) {\n            if (el.id) { // If the element has an ID, use it as a unique identifier\n                names.unshift('#' + el.id);\n                break;\n            } else {\n                let e = el, sibling, count = 1;\n                while (sibling = e.previousSibling) {\n                    if (sibling.nodeType === 1 && sibling.tagName === e.tagName) { count++; }\n                    e = sibling;\n                }\n                const tagName = el.tagName.toLowerCase();\n                const nth = count > 1 ? `:nth-of-type(${count})` : '';\n                names.unshift(`${tagName}${nth}`);\n                el = el.parentNode;\n            }\n        }\n        return names.length ? names.join(' > ') : null;\n    };\n    return fullPath(element);\n}\n\nWindow.prototype.maximize = maximize;\nWindow.prototype.minimize = minimize;\nWindow.prototype.open = open;\nWindow.prototype.close = close;\nWindow.prototype.createWindow = createWindow;","export default function maximize({ fullWindow = false } = {}) {\n  const getMenuBarOffset = () => {\n    const normalMenuBarHeight = 21;\n    const currentMenuBarHeight = $('.desktop-menu-bar').height() || normalMenuBarHeight;\n    const diff = currentMenuBarHeight - normalMenuBarHeight + (normalMenuBarHeight + 2); // add 2px for border\n    return `${diff}px`;\n  };\n\n  const applyMobileStyles = () => {\n    this.container.style.width = \"100vw\";\n    this.container.style.height = 'calc(var(--vh) * 90)';\n    this.container.style.top = \"0\";\n    this.container.style.left = \"0\";\n  };\n\n  const applyDiscordViewStyles = (isFullWindow) => {\n    if (isFullWindow) {\n      this.container.style.width = \"calc(100vw - 75px)\";\n      this.container.style.height = 'calc(var(--vh) * 95)';\n      this.container.style.top = \"20px\";\n      this.container.style.left = \"75px\";\n    } else {\n      this.container.style.width = \"90vw\";\n      this.container.style.height = 'calc(var(--vh) * 90)';\n      this.container.style.top = \"0\";\n      this.container.style.left = \"75px\";\n    }\n  };\n\n  const applyDefaultUnmaximizedStyles = () => {\n    this.container.style.width = `${this.width}px`;\n    this.container.style.height = `${this.height}px`;\n    this.container.style.top = \"50px\";\n    this.container.style.left = \"50px\";\n    this.isMaximized = false;\n  };\n\n  const applyMaximizedDiscordViewStyles = (isFullWindow) => {\n    if (isFullWindow) {\n      this.container.style.width = \"100vw\";\n      this.container.style.height = 'calc(var(--vh) * 95)';\n      this.container.style.top = \"20px\";\n      this.container.style.left = \"0\";\n    } else {\n      this.container.style.width = \"calc(var(--vw) - 72px)\";\n      this.container.style.height = 'calc(var(--vh) * 100)';\n      this.container.style.top = \"20px\";\n      this.container.style.left = \"72px\";\n    }\n  };\n\n  const applyDefaultMaximizedStyles = () => {\n    const pixelOffset = getMenuBarOffset();\n    this.container.style.width = \"100vw\";\n    this.container.style.height = \"calc(100vh - 104px)\";\n    this.container.style.top = pixelOffset;\n    this.container.style.left = \"0\";\n    this.isMaximized = true;\n  };\n\n  // Main logic\n  if (this.isMaximized) {\n    if (this.bp.isMobile()) {\n      applyMobileStyles();\n    } else if (window.discordView) {\n      applyDiscordViewStyles(fullWindow);\n    } else {\n      applyDefaultUnmaximizedStyles();\n    }\n  } else {\n    if (this.bp.isMobile()) {\n      applyMobileStyles();\n    } else if (window.discordView) {\n      applyMaximizedDiscordViewStyles(fullWindow);\n    } else {\n      applyDefaultMaximizedStyles();\n    }\n  }\n\n  // TODO: save the window state\n}"," export default function minimize(force = false) {\n        // console.log('minimize', this.isMinimized);\n\n        if (false && this.bp.isMobile()) {\n\n            if (this.isMinimized && !force) {\n                this.restore();\n                // this.content.style.display = \"block\"; // Show content area\n            } else {\n                // Minimize the window\n                // this.container.style.display = \"none\";  // Hide content area\n                // hides the `bp-window-content` area\n                //this.content.style.display = \"none\";  // Hide content area\n                // set the window-container height to 50px\n                this.container.style.height = \"120px\"; // Set height to 50px\n\n                this.isMinimized = true;\n            }\n\n            // this.windowManager.arrangeVerticalStacked();\n\n        } else {\n            if (this.isMinimized && !force) {\n                this.restore();\n            } else {\n                // Minimize the window\n                this.container.style.display = \"none\";  // Hide content area\n                this.isMinimized = true;\n            }\n        }\n        // TODO: save the window state\n    }","export default function open() {\n    console.log('Window open:', this.id, this.title, this.app, this.type, this.context);\n    // set focus to this window ( first )\n    this.focus();\n\n    try {\n        // onOpen may have additional focus events\n        this.onOpen(this);\n    } catch (err) {\n        console.error(err);\n    }\n    // TODO: save the window state ???\n    // ???? this.parent.appendChild(this.container);\n\n    if (this.bp.isMobile()) {\n        this.windowManager.minimizeAllWindows(true);\n        this.maximize();\n    }\n\n    if (window.discordView) {\n        // this.windowManager.minimizeAllWindows(true);\n        this.maximize();\n    }\n\n    this.bp.emit('window::open', this);\n\n    // console.log('Window opened:', this);\n    let _app = {\n        id: this.id,\n        app: this.app,\n        label: this.title,\n        icon: this.icon,\n        // app: this.app,\n        type: this.type,\n        context: this.context\n    };\n    // console.log('openWindow openItem', _app);\n    this.bp.apps.ui.windowManager.taskBar.openItem(_app);\n\n    // add the items to this.bp.apps.ui.recentApps\n    this.bp.apps.ui.recentApps = this.bp.apps.ui.recentApps || this.bp.settings.recentApps || [];\n\n    // remove items with the same id if already exists\n    this.bp.apps.ui.recentApps = this.bp.apps.ui.recentApps.filter(app => app.id !== this.id);\n\n    this.bp.apps.ui.recentApps.unshift({\n        id: this.id,\n        app: this.app,\n        label: this.label || this.title,\n        icon: this.icon,\n        type: this.type\n    });\n\n    // update the recentApps localStorage\n    this.bp.apps.ui.recentApps = this.bp.apps.ui.recentApps.slice(0, 10); // keep only the first 10 items\n    this.bp.set('recentApps', this.bp.apps.ui.recentApps);\n\n    // update the url bar push state with app id\n    // modify the url to include the app id\n    // load app data to find any aliases\n    let appData = this.bp.apps.desktop.appList[this.id];\n    let pushStateId = this.id;\n    if (appData && appData.alias) {\n        // get the first entry in the alias array\n        let alias = appData.alias[0];\n        pushStateId = alias; // use the id if it exists, otherwise use the alias string\n    }\n\n    // history.pushState({ appId: pushStateId }, this.title, `/app/${pushStateId}`);\n    DelayedPushState.push({ appId: pushStateId }, this.title, `/app/${pushStateId}`);\n\n}\n","export default function close() {\n\n    if (this.parent) {\n        // check first to see if child is in parent\n        if (this.container.parentElement && this.container.parentElement === this.parent) {\n            this.parent.removeChild(this.container);\n        }\n    } else {\n        this.container.parentElement.removeChild(this.container);\n    }\n\n    // check to see if this is an iframe and remove event listener\n    if (this.content && this.content.contentWindow) {\n        this.content.contentWindow.removeEventListener('message', this.receiveMessage.bind(this), false);\n    }\n    if (this.content) {\n        if (this.content.parentNode) {\n            this.content.parentNode.removeChild(this.content);\n        }\n        this.content = null;\n    }\n\n    // check to see if no more windows\n    // TODO: remove this code from Window.js class ( it should not know about menubar )\n    // if window count is 0 get the menubar-set-window-as-background element and add disabled class\n    let windowCount = this.windowManager.windows.length;\n    if (windowCount === 0) {\n        let el = document.getElementById('menubar-set-window-as-background');\n        if (el) {\n            el.classList.add('disabled');\n        }\n    }\n    // console.log('removeWindow', this.id);\n    this.windowManager.removeWindow(this.id);\n\n\n    if (this.windowManager.taskBar) {\n        // remove the chat window from the taskbar\n        this.windowManager.taskBar.closeItem(this.id);\n    }\n\n    // TODO: save the window state ??? removeWindow could do it..?\n\n    this.onClose(this);\n    this.bp.emit('window::close', this);\n\n    if (this.bp.isMobile()) {\n        // this.minimizeAllWindows(true);\n        //this.windowManager.arrangeVerticalStacked();\n        setTimeout(() => {\n            // this.windowManager.arrangeVerticalStacked();\n        }, 100);\n    }\n\n    // clear the current pushState\n    // history.pushState({}, '', '/');\n    DelayedPushState.push({}, '', '/');\n\n    if (this.bp.isMobile()) {\n        // if mobile, check to see if there are any other windows open\n        // if so, restore the first one\n        if (this.windowManager.windows.length > 0) {\n            let firstWindow = this.windowManager.windows[0];\n            if (firstWindow) {\n                firstWindow.restore();\n            }\n        }\n    }\n\n}\n","export default function createWindow() {\n    // Create the main window container\n    this.container = document.createElement(\"div\");\n    this.container.classList.add(\"window-container\");\n\n    // add dataset for app, type, context\n    this.container.dataset.app = this.app;\n    this.container.dataset.type = this.type;\n    this.container.dataset.context = this.context;\n\n    if (this.className) {\n        this.container.classList.add(this.className);\n    }\n\n    if (!this.resizeable) {\n        this.container.classList.add(\"window-not-resizeable\");\n    }\n\n\n    // Helper function to check if two rectangles overlap\n    function checkOverlap(x1, y1, w1, h1, x2, y2, w2, h2, buffer = 10) {\n        // console.log('checkOverlap', x1, y1, w1, h1, x2, y2, w2, h2, buffer);\n        w1 = parseInt(w1);\n        h1 = parseInt(h1);\n        w2 = parseInt(w2);\n        h2 = parseInt(h2);\n        return (\n            x1 < x2 + w2 + buffer &&\n            x1 + w1 + buffer > x2 &&\n            y1 < y2 + h2 + buffer &&\n            y1 + h1 + buffer > y2\n        );\n    }\n\n    // Function to adjust position to prevent overlap\n    function adjustPosition(newWindow, windows, screenWidth, screenHeight, buffer = 10) {\n        let adjustedX = newWindow.x;\n        let adjustedY = newWindow.y;\n\n        // Check overlap with other windows\n        windows.forEach((win) => {\n            if (checkOverlap(adjustedX, adjustedY, newWindow.width, newWindow.height, win.x, win.y, win.width, win.height, buffer)) {\n                // console.log('OVERLAP DETECTED');\n                adjustedX += buffer; // Move slightly to the right\n                // adjustedY += buffer; // Move slightly down\n            }\n        });\n\n        // Check screen boundaries\n        if (adjustedX + newWindow.width + buffer > screenWidth) {\n            adjustedX = screenWidth - newWindow.width - buffer; // Move to the left\n        }\n        if (adjustedY + newWindow.height + buffer > screenHeight) {\n            adjustedY = screenHeight - newWindow.height - buffer; // Move up\n        }\n        if (adjustedX < buffer) {\n            adjustedX = buffer; // Move to the right\n        }\n        if (adjustedY < buffer) {\n            adjustedY = buffer; // Move down\n        }\n\n        return { x: adjustedX, y: adjustedY };\n    }\n\n    // Main Window Creation Logic\n    this.container.id = this.id;\n    this.container.style.width = `${this.width}px`;\n    this.container.style.height = `${this.height}px`;\n    this.container.style.position = \"absolute\";\n\n    // Assume screen dimensions\n    const screenWidth = window.innerWidth;\n    const screenHeight = window.innerHeight;\n\n    /*\n    // Remark: We could perform a general zoom scale for mobile devices\n    if (screenWidth <= 980) {\n        // this.container.style.zoom = 1.5; // Adjust zoom for mobile\n    } else {\n        // do nothing\n    }\n    */\n\n    // Adjust position to prevent overlap\n    let adjustedPosition = {\n        x: this.x,\n        y: this.y,\n    };\n\n    if (this.preventOverlap) {\n        adjustedPosition = adjustPosition(\n            { x: this.x, y: this.y, width: this.width, height: this.height },\n            this.windowManager.windows,\n            screenWidth,\n            screenHeight,\n            32\n        );\n    }\n\n\n    // Apply adjusted position\n    this.x = adjustedPosition.x;\n    this.y = adjustedPosition.y;\n    this.container.style.top = `${this.y}px`;\n    this.container.style.left = `${this.x}px`;\n\n    this.container.style.zIndex = 99;\n\n    // add a mousedown handler to container itself to set 'window-active' status\n    this.container.addEventListener('mousedown', () => {\n        // set all windows to inactive\n        document.querySelectorAll('.window-container').forEach((window) => {\n            window.classList.remove('window-active');\n            window.isActive = false;\n        });\n        // set this window to active\n        this.container.classList.add('window-active');\n        this.isActive = true;\n    });\n\n    // same for touchstart\n    this.container.addEventListener('touchstart', () => {\n        // set all windows to inactive\n        document.querySelectorAll('.window-container').forEach((window) => {\n            window.classList.remove('window-active');\n            window.isActive = false;\n        });\n        // set this window to active\n        this.container.classList.add('window-active');\n        this.isActive = true;\n    });\n\n    // Create the title bar\n    this.titleBar = document.createElement(\"div\");\n    this.titleBar.classList.add(\"window-title-bar\");\n\n    if (this.bp.isMobile()) {\n        this.titleBar.onclick = () => {\n            console.log('titleBar clicked on mobile');\n            this.minimize();\n            return;\n            if (!this.isMinimized) {\n                this.minimize(true); // force minimize on mobile\n            } else {\n                this.restore(); // restore on mobile\n            }\n        }\n    }\n\n    // on double click maximize\n    if (window.discordView) {\n        this.titleBar.ondblclick = () => this.maximize({ fullWindow: true });\n    } else {\n        this.titleBar.ondblclick = () => this.maximize();\n    }\n\n    if (this.icon) {\n        let iconTitleBar = document.createElement(\"img\");\n        iconTitleBar.src = this.icon;\n        iconTitleBar.classList.add(\"window-icon\");\n        this.titleBar.appendChild(iconTitleBar);\n    }\n\n    let titleBarSpan = document.createElement(\"span\");\n    titleBarSpan.classList.add(\"window-title-text\");\n    titleBarSpan.textContent = this.title;\n    this.titleBarSpan = titleBarSpan;\n\n    // Drag functionality\n    // Add mouse and touch event listeners to the titleBar\n    this.titleBar.addEventListener('mousedown', this.startDrag);\n    this.titleBar.addEventListener('touchstart', this.startDrag, { passive: false });\n\n    // Touch events for mobile\n\n\n    // Create control buttons (Minimize, Maximize, Close)\n    const controls = document.createElement(\"div\");\n    controls.classList.add(\"window-controls\");\n\n    if (!this.bp.isMobile()) {\n        this.minimizeButton = document.createElement(\"button\");\n        this.minimizeButton.innerHTML = \"&#x1F7E1;\"; // Yellow circle\n        this.minimizeButton.classList.add(\"minimize-button\");\n        this.minimizeButton.title = \"Minimize\";\n        this.minimizeButton.onclick = () => this.minimize();\n\n        controls.appendChild(this.minimizeButton);\n\n\n    }\n\n\n    this.maximizeButton = document.createElement(\"button\");\n    this.maximizeButton.innerHTML = \"&#x1F7E2;\"; // Green circle\n    this.maximizeButton.classList.add(\"maximize-button\");\n    this.maximizeButton.title = \"Maximize\";\n    this.maximizeButton.onclick = () => this.maximize();\n\n    controls.appendChild(this.maximizeButton);\n\n\n    this.closeButton = document.createElement(\"button\");\n    this.closeButton.innerHTML = \"&#x1F534;\"; // Red circle\n    this.closeButton.classList.add(\"close-button\");\n    this.closeButton.title = \"Close\";\n    this.closeButton.onclick = () => this.close();\n\n    controls.appendChild(this.closeButton);\n\n    this.titleBar.appendChild(titleBarSpan);\n    this.titleBar.appendChild(controls);\n\n    this.initContentArea();\n\n    // Append components\n    this.container.appendChild(this.titleBar);\n    this.container.appendChild(this.content);\n\n    if (this.parent) {\n        this.parent.appendChild(this.container);\n    }\n\n    // Resizing\n    if (this.resizeable) {\n        this.addResizeHandles();\n    }\n\n    if (this.canBeBackground) {\n        // get the menubar-set-window-as-background element and remove disabled class\n        let el = document.getElementById('menubar-set-window-as-background');\n        if (el) {\n            el.classList.remove('disabled');\n        }\n    }\n\n\n    return this.container;\n}\n\n","/* Buddy Pond - WindowManager.js - Marak Squires 2023 */\nimport TaskBar from './TaskBar.js';\nimport Window from \"./Window.js\";\n\nexport default class WindowManager {\n    constructor(ui, options = {}) {\n        this.storage = options.storage || localStorage; // Use localStorage by default\n        this.storageKey = options.storageKey || 'windowsState'; // Key for storing data\n        this.windows = [];\n        this._windows = [];\n        this.options = options;\n\n        this.bp = ui.bp;\n\n        this.useKeyboardControls = true;\n\n        if (typeof options.useKeyboardControls === \"boolean\") {\n            this.useKeyboardControls = options.useKeyboardControls;\n        }\n\n        if (typeof options.hideTaskBar === \"boolean\") {\n            this.hideTaskBar = options.hideTaskBar;\n        }\n\n        if (typeof options.openWindow === \"function\") {\n            this._openWindow = options.openWindow;\n        } else {\n            this._openWindow = function (name, config) {\n                const window = this.createWindow(config);\n                window.hydrate(config);\n            }\n        }\n\n        // Remark: Why is TaskBar in the WindowManager?\n        // shouldn't this be in the UI class?\n        this.taskBar = new TaskBar({\n            bp: this.bp,\n            homeCallback: () => {\n\n                if (!this.state) {\n                    // save current window positions\n                    this.lastPositionsBeforeArranged = this.windows.map(w => {\n                        return {\n                            x: w.x,\n                            y: w.y,\n                            height: w.height,\n                            width: w.width\n                        }\n                    });\n                    // console.log('lastPositionsBeforeArranged', this.lastPositionsBeforeArranged);\n                    this.state = 'maximized';\n                }\n\n\n                if (this.state === 'minimized') {\n                    this.minimizeAllWindows();\n                    // this.arrangeHorizontalStacked();\n                    this.state = 'maximized';\n\n                } else if (this.state === 'stacked-vertical') {\n                    // stack-vertical has been removed ( for now )\n                    // it wasn't looking good as a default and was rarely used\n                    /*\n                    // restore all windows to their previous positions\n                    this.windows.forEach((w, i) => {\n                        w.move(this.lastPositionsBeforeArranged[i].x, this.lastPositionsBeforeArranged[i].y);\n                        w.setSize(this.lastPositionsBeforeArranged[i].width + 'px', this.lastPositionsBeforeArranged[i].height + 'px');\n                    });\n                    this.state = 'maximized';\n                    */\n\n                } else if (this.state === 'stacked-horizontal') {\n                    // this.arrangeVerticalStacked();\n                    // this.state = 'stacked-vertical';\n                    // restore all windows to their previous positions\n                    this.windows.forEach((w, i) => {\n                        w.move(this.lastPositionsBeforeArranged[i].x, this.lastPositionsBeforeArranged[i].y);\n                        w.setSize(this.lastPositionsBeforeArranged[i].width + 'px', this.lastPositionsBeforeArranged[i].height + 'px');\n                    });\n                    this.state = 'maximized';\n\n                } else {\n                    this.minimizeAllWindows(true);\n                    this.windows.forEach((w, i) => {\n                        w.move(this.lastPositionsBeforeArranged[i].x, this.lastPositionsBeforeArranged[i].y);\n                        w.setSize(this.lastPositionsBeforeArranged[i].width + 'px', this.lastPositionsBeforeArranged[i].height + 'px');\n                    });\n\n                    this.state = 'minimized';\n\n                }\n\n                // close all windows\n                // this.minimizeAllWindows();\n                // this.windowsClosed = true;\n\n                // hide all legacy BP windows\n                $('.window').hide();\n                $('.window').removeClass('window_stack');\n\n            }\n        });\n\n        if (this.options.hideTaskBar) {\n            this.taskBar.taskBarElement.style.display = 'none';\n        }\n\n        if (this.useKeyboardControls) {\n            window.addEventListener(\"keydown\", (e) => {\n                // alert(this.bp.editingMode);\n                if (e.key === \"Escape\" && !this.bp.ignoreUIControlKeys) {\n                    // alert(\"Escape key pressed\");\n                    // find the window with the highest depth and close it\n\n                    // first check to see if there is a dialog open, close that first\n                    const dialog = document.querySelector('.dialog');\n                    if (dialog) {\n                        dialog.remove();\n                        return;\n                    }\n\n                    const window = this.windows[0]; // no sort needed, windows are already sorted by depth\n                    if (window) {\n                        window.close();\n                    }\n                }\n            });\n        }\n\n    }\n\n    createWindow(options) {\n\n        // check to see if there is previous window data in this._windows\n        // check by id, if found, hydrate the window\n        // This is a temporary solution until full app hydration is back online\n        // This solution will allow for position and size to be saved and restored\n        options = { ...options, ...this.options.window };\n        // console.log('createWindow', options);\n        let previousWindowData = this._windows.find(w => w.id === options.id);\n        if (previousWindowData) {\n            // just merge the previous window data with the new options\n            options = { ...previousWindowData, ...options };\n        }\n\n        // check to see if window already exists with id\n        const existingWindow = this.getWindow(options.id);\n        let window;\n\n        if (existingWindow) {\n            window = existingWindow;\n            this.focusWindow(window); // Focus the newly created window\n            return window;\n        }\n        options.bp = this.bp;\n        window = new Window(options, this);\n\n        window.container.addEventListener(\"mousedown\", () => {\n            this.focusWindow(window);\n        });\n        this.addWindow(window);\n        this.focusWindow(window); // Focus the newly created window\n\n        // when opening a window, automatically add it to the taskbar\n        //alert(window.id)\n        /*\n        this.taskBar.openItem({\n            id: window.app,\n            title: window.title,\n            icon: window.icon,\n            onClick: () => {\n                // toggle window minimize / restore state\n                if (this.isMobile()) {\n                    // this.minimizeAllWindows(true);\n                    this.arrangeVerticalStacked();\n                    // we could minimize all other windows here\n                    // minimizeAllWindows();\n                }\n                if (window.isMinimized) {\n                    window.restore();\n                    window.focus();\n                } else {\n                    window.minimize();\n                }\n            }\n        });\n        */\n\n        return window;\n    }\n\n    isMobile() {\n        return window.innerWidth < 1000;\n    }\n\n    addWindow(window) {\n        this.windows.push(window);\n        this.saveWindowsState(); // Save state when a window is added\n        this.updateFocus();\n    }\n\n    removeWindow(window) {\n        // console.log(\"Removing window\", window);\n        this.windows = this.windows.filter(w => w.id !== window);\n        //console.log(\"Remaining windows\", this.windows);\n        this.saveWindowsState(); // Save state when a window is removed\n        this.updateFocus();\n    }\n\n    focusWindow(window) {\n        // window can be the window instance or the window id\n        if (typeof window === 'string') {\n            window = this.getWindow(window);\n        }\n\n        // console.log(\"Focusing window\", window);\n\n        // TODO: this isn't working consistenly?  there seems to be an issue with index\n        // console.log(\"Focusing window\", window.id);\n        const index = this.windows.indexOf(window);\n        if (index !== -1) {\n            this.windows.splice(index, 1);\n            this.windows.unshift(window);\n            // console.log('Focusing window', window.id, 'at index', index);\n            this.updateFocus();\n            window.focus(false);\n            this.saveWindowsState(); // Save state when focus changes\n        }\n        // iterate through all windows and set isFocused to false\n        // set this window isFocused to true\n        this.windows.forEach(w => {\n            if (w.id !== window) {\n                w.isFocused = false;\n\n            } else {\n                window.isFocused = true;\n\n            }\n        });\n    }\n\n    updateFocus() {\n        // console.log(\"Updating focus\");\n        this.windows.forEach((window, index) => {\n            // console.log(\"Setting depth for window\", window.id, \"to\", 1000 - index);\n            // console.log(\"setting depth for window\", window.id, \"to\", 1000 - index);\n            window.setDepth(1000 - index); // Higher index, higher depth\n        });\n    }\n\n    closeAllWindows() {\n        this.windows.forEach(window => window.close());\n        this.windows = [];\n        this.storage.removeItem(this.storageKey); // Clear storage when all windows are closed\n    }\n\n    minimizeAllWindows(force = false) {\n        if (!this.windowsHiding) {\n            this.windowsHiding = true;\n        } else {\n            this.windowsHiding = false;\n        }\n        this.windows.forEach(window => {\n\n            if (!this.windowsHiding || force) {\n                window.minimize(force);\n            } else {\n                window.restore();\n            }\n        });\n    }\n\n    getWindow(id) {\n        // console.log('searching for', id, 'in', this.windows)\n        return this.windows.find(w => w.id === id);\n    }\n\n    findWindows({ app, type }) {\n        if (!app) {\n            console.warn(\"No app provided to findWindows\");\n            return [];\n        }\n\n        // Normalize app and type to arrays for unified matching\n        const apps = Array.isArray(app) ? app : [app];\n        const types = type ? (Array.isArray(type) ? type : [type]) : null;\n\n        return this.windows.filter(w => {\n            const appMatch = apps.includes(w.app);\n            const typeMatch = types ? types.includes(w.type) : true;\n            return appMatch && typeMatch;\n        });\n    }\n\n    saveWindowsState() {\n        const state = JSON.stringify(this.windows.map(window => window.serialize()));\n        // console.log(\"Saving windows state\", JSON.parse(state));\n        this.storage.setItem(this.storageKey, state);\n    }\n\n    // Remark: This should probably be mostly in settings app or a separate app\n    loadWindows() {\n        const serializedWindows = this.storage.getItem(this.storageKey);\n        if (serializedWindows) {\n            this.restoreWindows(serializedWindows);\n        }\n    }\n\n    arrangeVerticalStacked() {\n        let containerHeight = document.body.clientHeight - 100; // Adjust for container and offset\n        let windowWidth = document.body.clientWidth - 10; // Adjust for container and offset\n        const defaultWindowHeight = containerHeight * 0.8; // Default height for non-minimized windows\n        const minimizedHeight = 120; // Height for minimized windows\n        const gap = 10; // Optional gap between windows for better spacing\n        let totalY = 0; // Initialize Y position\n\n        // console.log('window count', this.windows.length, 'defaultWindowHeight', defaultWindowHeight, 'windowWidth', windowWidth);\n        // console.log(this.windows);\n\n        this.windows.reverse().forEach((window, index) => {\n            // Determine the height for the current window\n            let currentWindowHeight = window.isMinimized ? minimizedHeight : defaultWindowHeight;\n\n            // console.log(\"index\", index, window.title, 'isMinimized', window.isMinimized, 'currentWindowHeight', currentWindowHeight, 'windowWidth', windowWidth);\n\n            // Set window size and position\n            window.setSize(windowWidth + 'px', currentWindowHeight + 'px'); // Set size\n            window.move(0, totalY); // Move to calculated Y position\n\n            // Increment totalY for the next window\n            totalY += currentWindowHeight + gap; // Add current window's height and gap\n\n            // console.log(\"totalY\", totalY, \"currentWindowHeight\", currentWindowHeight, \"windowWidth\", windowWidth);\n        });\n\n        // Position the shortCutsContainer below the last window\n        // console.log('setting shortCutsContainer top to', totalY);\n        if (this.bp.apps.desktop && this.bp.apps.desktop.shortCutsContainer) {\n            this.bp.apps.desktop.shortCutsContainer.style.position = 'absolute';\n            this.bp.apps.desktop.shortCutsContainer.style.left = '0px';\n            this.bp.apps.desktop.shortCutsContainer.style.top = totalY + 'px';\n        }\n    }\n\n    arrangeHorizontalStacked() {\n        const containerWidth = document.body.clientWidth; // Adjust to your specific container if not the body\n        const numWindows = this.windows.length;\n        let windowWidth = containerWidth / numWindows;\n        windowWidth -= 10; // Adjust to your desired offset\n        this.windows.forEach((window, index) => {\n            let xPos = windowWidth * index;\n            xPos += 5;\n            xPos += 10 * index; // Adjust to your desired offset\n            window.setSize(windowWidth + 'px', 'calc(100% - 80px)'); // Assuming you have a resize method\n            window.move(xPos, 30); // Assuming you have a move method\n        });\n\n    }\n\n    arrangeCascadeFromTopLeft() {\n        const offset = 20; // Adjust to your desired offset\n        this.windows.forEach((window, index) => {\n            const xPos = offset * index;\n            const yPos = offset * index;\n            window.move(xPos, yPos); // Assuming you have a move method\n        });\n    }\n\n    // Remark: This should probably be mostly in settings app or a separate app\n    // Restore windows from serialized state\n    restoreWindows(serializedWindows, inflate = false) {\n        const windowsData = JSON.parse(serializedWindows);\n        // console.log(\"Restoring windows\", windowsData);\n        // alert(\"Restoring windows from storage, this will be removed in the future, please use the settings app to manage windows\");\n        this._windows = windowsData;\n\n        if (!inflate) {\n            // for now, probably better suited elsewhere\n            return;\n        }\n        windowsData.forEach(data => {\n            // check to see if window already exists with id\n            const existingWindow = this.getWindow(data.id);\n            if (existingWindow) {\n                console.log(\"WARNING: Window with id\", data.id, \"already exists, hydrating instead of creating new window\");\n                existingWindow.hydrate(data);\n                return;\n            }\n            data.parent = document.querySelector(data.parent);\n            // console.log(\"hydrating window\", data);\n            // this.openWindow(data.app, data);\n            //const window = this.createWindow(data);\n            //window.hydrate(data);\n        });\n    }\n}","export default class CountdownManager {\n    constructor() {\n        this.intervalId = null;\n        this.expiryCallbacks = new WeakMap(); // store per-element callbacks\n    }\n\n    updateCountdowns() {\n        const countdownEls = $('.countdown-date').filter(function () {\n            return $(this).data('expired') !== true;\n        });\n\n        if (countdownEls.length === 0) {\n            if (this.intervalId) {\n                clearInterval(this.intervalId);\n                this.intervalId = null;\n                if (bp?.apps?.ui) {\n                    bp.apps.ui.countdownTimer = null;\n                }\n            }\n            return;\n        }\n\n        countdownEls.each((_, el) => {\n            const $el = $(el);\n\n            const expiry = new Date($el.data('expiry')).getTime();\n            const now = Date.now();\n            const distance = expiry - now;\n\n            if (!$el.data('duration')) {\n                const ctime = $el.data('ctime');\n                if (ctime) {\n                    $el.data('duration', expiry - ctime);\n                }\n            }\n            // console.log('distance for', $el, distance);\n            // distance is going negative? on recurse?\n            if (distance < 0) {\n                $el.data('expired', true);\n\n                const cb = this.expiryCallbacks.get(el);\n                if (typeof cb === 'function') {\n                    cb($el);\n                    this.expiryCallbacks.delete(el); // Cleanup\n                }\n\n                return;\n            }\n\n            const days = Math.floor(distance / (1000 * 60 * 60 * 24));\n            const hours = Math.floor((distance % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60));\n            const minutes = Math.floor((distance % (1000 * 60 * 60)) / (1000 * 60));\n            const seconds = Math.floor((distance % (1000 * 60)) / 1000);\n\n            let prefix = '';\n            let timeParts = [];\n\n            if (days > 0) {\n                prefix = `${days} Day${days > 1 ? 's' : ''} `;\n                timeParts.push(hours.toString().padStart(2, '0'));\n            } else if (hours > 0) {\n                timeParts.push(hours.toString());\n            }\n\n            timeParts.push(minutes.toString().padStart(2, '0'));\n            timeParts.push(seconds.toString().padStart(2, '0'));\n\n            $el.text(prefix + timeParts.join(':'));\n        });\n    }\n\n    /**\n     * Start a countdown on the given jQuery element\n     * @param {jQuery} $el - The element to attach the countdown to\n     * @param {string|Date} expiry - Expiry date/time\n     * @param {function} [onExpire] - Optional callback when countdown expires\n     */\n    startCountdown($el, expiry, onExpire) {\n        const expiryTime = new Date(expiry).getTime();\n        const now = Date.now();\n        const duration = expiryTime - now;\n\n        // console.log('Starting countdown for', $el, expiry);\n\n        $el\n            .data('expiry', expiryTime)\n            .data('ctime', now)\n            .data('duration', duration)\n            .data('expired', false);\n\n        if (typeof onExpire === 'function') {\n            this.expiryCallbacks.set($el[0], onExpire);\n        }\n\n        if (!this.intervalId) {\n            this.intervalId = setInterval(() => this.updateCountdowns(), 1000);\n            if (bp?.apps?.ui) {\n                bp.apps.ui.countdownTimer = this.intervalId;\n            }\n        }\n\n        this.updateCountdowns(); // Immediate update\n    }\n}\n","export default function showLightbox(src) {\n  // Remove any existing overlay\n  $('.buddypond-lightbox-overlay').remove();\n\n  const $overlay = $(`\n    <div class=\"buddypond-lightbox-overlay\" style=\"\n      position: fixed;\n      top: 0; left: 0; right: 0; bottom: 0;\n      background: rgba(0,0,0,0.85);\n      display: flex;\n      justify-content: center;\n      align-items: center;\n      z-index: 999999;\n      cursor: zoom-out;\n      display: none;\n    \"></div>\n  `);\n\n  const $img = $('<img style=\"max-width: 90%; max-height: 90%; box-shadow: 0 0 10px #000;\">');\n  $img.attr('src', src);\n  $overlay.append($img);\n  $('body').append($overlay);\n  bp.ignoreUIControlKeys = true;\n\n  // Show with fade-in\n  $overlay.flexShow().fadeIn(150);\n\n  // ESC key handler\n  const onKeyUp = (e) => {\n    if (e.key === 'Escape') {\n      closeOverlay.call(this);\n    }\n  };\n\n  // Close function with fade-out\n  function closeOverlay() {\n    $(document).off('keyup', onKeyUp); // cleanup key event\n    bp.ignoreUIControlKeys = false;\n\n    $overlay.fadeOut(150, () => $overlay.remove());\n  }\n\n  // Click to close\n  $overlay.on('click', closeOverlay);\n  $(document).on('keyup', onKeyUp);\n}\n","// alert.js - Custom HTML-based alert modal for Discord Activities\n\n// Function to create and show a custom alert modal\nexport default function showAlert(message, options = {}) {\n  // Default options\n  const defaults = {\n    title: 'Alert',\n    buttonText: 'OK',\n    onClose: null, // Optional callback when modal is closed\n  };\n  const config = { ...defaults, ...options };\n\n  if (!window.discordView) {\n    return alert(message); // Fallback to native alert if not in Discord Activities\n  }\n\n  // Create modal container\n  const modal = document.createElement('div');\n  modal.className = 'custom-alert-modal';\n  modal.style.position = 'fixed';\n  modal.style.top = '0';\n  modal.style.left = '0';\n  modal.style.width = '100%';\n  modal.style.height = '100%';\n  modal.style.backgroundColor = 'rgba(0, 0, 0, 0.5)';\n  modal.style.display = 'flex';\n  modal.style.alignItems = 'center';\n  modal.style.justifyContent = 'center';\n  modal.style.zIndex = '1000';\n\n  // Create modal content\n  const modalContent = document.createElement('div');\n  modalContent.style.backgroundColor = '#fff';\n  modalContent.style.padding = '20px';\n  modalContent.style.borderRadius = '8px';\n  modalContent.style.maxWidth = '50vw';\n  modalContent.style.width = '90%';\n  modalContent.style.boxShadow = '0 4px 8px rgba(0, 0, 0, 0.2)';\n  modalContent.style.fontFamily = 'Arial, sans-serif';\n  // align text to center\n  modalContent.style.textAlign = 'center';\n\n  // Add title\n  const title = document.createElement('h2');\n  title.textContent = config.title;\n  title.style.margin = '0 0 10px';\n  title.style.fontSize = '2.5em';\n  title.style.color = '#5865F2'; // Discord-like purple\n  modalContent.appendChild(title);\n\n  // Add message\n  const messageText = document.createElement('p');\n  messageText.textContent = message;\n  messageText.style.margin = '0 0 20px';\n  messageText.style.fontSize = '2em';\n  messageText.style.color = '#333'; // Dark text for readability\n  $(messageText).html(message);\n  modalContent.appendChild(messageText);\n\n  // Add OK button\n  const button = document.createElement('button');\n  button.textContent = config.buttonText;\n  button.style.padding = '8px 16px';\n  button.style.backgroundColor = '#5865F2'; // Discord-like purple\n  button.style.color = '#fff';\n  button.style.border = 'none';\n  button.style.borderRadius = '4px';\n  button.style.cursor = 'pointer';\n  button.style.fontSize = '1em';\n  button.addEventListener('click', () => {\n    modal.remove(); // Remove modal from DOM\n    if (config.onClose && typeof config.onClose === 'function') {\n      config.onClose(); // Call optional callback\n    }\n  });\n  modalContent.appendChild(button);\n\n  // Append modal content to modal\n  modal.appendChild(modalContent);\n\n  // Append modal to document body\n  document.body.appendChild(modal);\n\n  // Focus the button for accessibility\n  button.focus();\n\n  // Allow closing with Enter or Escape keys\n  const handleKeydown = (event) => {\n    if (event.key === 'Enter' || event.key === 'Escape') {\n      modal.remove();\n      if (config.onClose) config.onClose();\n      document.removeEventListener('keydown', handleKeydown);\n    }\n  };\n  document.addEventListener('keydown', handleKeydown);\n}","// Remark: We may be able to remove UI and put all this logic in the desktop app\nimport WindowManager from \"./Window/WindowManager.js\";\nimport CountdownManager from \"../ui/CountdownManager.js\";\nimport LightBox from \"./LightBox.js\";\nimport showAlert from \"./showAlert.js\";\n\nexport default class UI {\n    constructor(bp, options = {}) {\n        this.bp = bp;\n\n        this.bp.alert = showAlert.bind(this);\n        let windowManagerOptions = {};\n        windowManagerOptions.openWindow = this.bp.open.bind(this.bp),\n        windowManagerOptions.window = options.window || {};\n        windowManagerOptions.hideTaskBar = options.hideTaskBar;\n        this.windowManager = new WindowManager(this, windowManagerOptions);\n        this.bp.windows = this.windowManager.windows;\n        // will re-load any previous stored metadata about windows\n        // storage provider is defaulted to localStorage\n        this.windowManager.loadWindows();\n\n        options.parent = options.parent || document.body;\n\n        // options.parent.classList.add('droparea');\n\n        this.options = options;\n\n        if (typeof options.fontAwesome !== 'boolean') {\n            options.fontAwesome = true;\n        }\n\n        this.parent = options.parent;\n\n        this.countdownManager = new CountdownManager(this.bp);\n        // this.countdownManager.updateCountdowns();\n        let that = this;\n        this.bp.window = that.windowManager.createWindow.bind(that.windowManager);\n        // console.log('UI initialized with options:', this.options);\n        function setViewportHeight() {\n            const vh = window.innerHeight * 0.01;\n            document.documentElement.style.setProperty('--vh', `${vh}px`);\n            const vw = window.innerWidth;\n            document.documentElement.style.setProperty('--vw', `${vw}px`);\n        }\n\n        // Run on load and resize\n        window.addEventListener('resize', setViewportHeight);\n        setViewportHeight();\n\n        return this;\n    }\n\n    async init() {\n\n        // base CSS for ui, this can be themed in the future\n        if (!this.options.noCSS) {\n            this.bp.appendCSS('/v5/apps/based/ui/ui.css'); // no need to wait for CSS to load?\n            if (this.bp.mode !== 'prod') {\n                this.bp.appendCSS('/v5/apps/based/ui/mobile.css'); // no need to wait for CSS to load?\n                this.bp.appendCSS('/v5/apps/based/ui/Window/Window.css'); // no need to wait for CSS to load?\n                this.bp.appendCSS('/v5/apps/based/ui/Window/TaskBar.css'); // no need to wait for CSS to load?\n                this.bp.appendCSS('/v5/apps/based/ui/Window/StartPanel.css'); // no need to wait for CSS to load?\n\n            }\n        }\n\n        if (this.options.fontAwesome) {\n            this.bp.appendCSS('/v5/vendor/font-awesome/css/fontawesome.css', false, true);\n            this.bp.appendCSS('/v5/vendor/font-awesome/css/all.min.css', false, true);\n        }\n\n        // TODO: add these lines back after removing v4 completely ( as jQuery is already loaded in v4)\n        if (!this.options.noZepto) {\n            // If you need jQuery or another version of $\n            // we have the ability to not load Zepto as $\n            //await this.bp.appendScript('/v5/vendor/zepto.min.js');\n        } else {\n            //await this.bp.appendScript('/v5/vendor/jquery.min.js');\n\n        }\n\n        // await this.bp.appendScript('/desktop/assets/js/jquery.js');\n\n\n        if (!this.options.noTabs) {\n            // what happened here with config? we shouldn't need to reference host here,\n            // TODO: check implementation of importModule with options\n            let SimpleTabs = await this.bp.importModule(this.bp.config.host + '/v5/apps/based/ui/SimpleTabs.js', {}, false)\n            this.Tabs = SimpleTabs.default;\n\n        }\n\n        await this.bp.appendScript('/v5/vendor/DateFormat.js');\n\n        this.showLightBox = LightBox.bind(this);\n\n        // bind common document events\n        // TODO: move UI events to separate file\n        let d = document;\n\n        $(d).on('click', '.open-app', function (e) {\n            let appName = $(this).data('app');\n            let context = $(e.target).data('context');\n            let type = $(this).data('type');\n            // let output = $(this).data('output');\n\n            console.log('open-app ' + appName);\n            // check to see if legacy app ( for now)\n            bp.open(appName, { context, type });\n\n        });\n\n        $(d).on('click', '.open-link', async function (e) {\n            e.preventDefault();\n            let url = $(this).data('link');\n            if (!url) {\n                // check if tag has href attribute\n                url = $(this).attr('href');\n            }\n            console.log('open-link ' + url);\n            if (window.discordMode) {\n                await window.discordSdk.commands.openExternalLink({\n                    url: url\n                });\n                return;\n            } else {\n                window.open(url, '_blank');\n\n            }\n            return false;\n        });\n\n        return 'loaded ui';\n    }\n\n    async appendToElement(el) {\n        console.log('appendToElement', this);\n        let html = await fetchHTMLFragment('ui.html'); // TODO: might need root\n        console.log(html);\n        el.innerHTML = html;\n        return 'hello ui';\n    }\n\n    async loadDocumentBody() {\n        console.log('loadDocumentBody', this);\n        let html = await this.bp.fetchHTMLFragment('/v5/apps/based/ui/ui.html'); // TODO: might need root\n        console.log(html);\n        $('body').append(html);\n        //document.body.innerHTML = html;\n        return 'hello ui';\n\n    }\n\n    toggleFullScreen() {\n        if (document.fullscreenElement) {\n            document.exitFullscreen();\n        } else {\n            document.documentElement.requestFullscreen();\n        }\n    }\n\n}"],"names":["StartPanel","constructor","onAppLaunch","bp","this","panelElement","open","close","panel","document","createElement","className","style","display","searchInput","id","type","placeholder","autocomplete","recentSection","innerHTML","recentGrid","appendChild","allSection","allGrid","body","$","css","opacity","transform","transition","requestAnimationFrame","window","apps","ui","recentApps","slice","forEach","appData","app","createAppTile","appList","desktop","Object","entries","appName","adminOnly","me","icon","addEventListener","query","value","toLowerCase","length","querySelectorAll","el","label","dataset","name","_app","showResult","includes","categories","some","cat","closeEventHandler","event","target","hasClass","contains","isMobile","focus","$panel","setTimeout","remove","removeEventListener","tile","buddylist","defautSvgAvatar","defaultAvatarSvg","replace","svgContainer","img","src","alt","textContent","onclick","async","context","prototype","enableKeyboardNavigation","currentIndex","appTiles","updateTilesList","Array","from","filter","focusTile","index","console","log","i","classList","toggle","scrollIntoView","block","e","key","preventDefault","nextIndex","prevIndex","Math","min","max","click","TaskBar","homeCallback","taskBarElement","taskbarLeft","taskbarItems","taskbarRight","items","Map","shortcuts","Set","isAtEnd","scrollLeft","clientWidth","scrollWidth","setAttribute","addItem","onClick","startPanel","isShortcut","anchor","stopPropagation","$menu","animate","left","removeClass","addClass","closest","showContextMenu","clientX","clientY","pressTimer","startX","startY","touch","touches","navigator","vibrate","clearTimeout","enableDragAndDrop","x","y","existing","querySelector","item","get","menu","position","visibility","makeOption","handler","option","isOpen","closeItem","openItem","has","delete","removeItem","add","installedTaskBarApps","settings","taskbar_apps","set","menuHeight","offsetHeight","top","removeMenu","once","saveItem","config","ev","itemElement","existingWindow","windowManager","getWindow","isMinimized","restore","minimize","draggable","itemText","title","itemIcon","height","width","call","alertItem","behavior","inline","element","win","warn","parentNode","removeChild","taskBarApps","getItem","dragged","over","children","indexOf","insertBefore","newOrder","map","newTaskBarApps","idCounter","Window","options","content","iframeContent","z","parent","onFocus","onClose","onOpen","onResize","onMessage","onLoad","resizeable","preventOverlap","canBeBackground","getElementById","isMaximized","container","contentValue","isActive","innerWidth","parseInt","innerHeight","windows","saveWindowsState","removeWindow","startDrag","bind","drag","stopDrag","createWindow","initContentArea","onload","iframeDoc","contentDocument","contentWindow","write","setupMessageHandling","iframe","startsWith","discordMode","currentOrigin","location","origin","loaderHolder","script","receiveMessage","sendMessage","message","postMessage","data","handleReceivedMessage","move","serialize","parentXpath","names","unshift","sibling","count","previousSibling","nodeType","tagName","nth","join","fullPath","hydrate","Number","updateWindow","zIndex","setDepth","depth","setAsBackground","isBackground","restoreWindowFromBackground","isDragging","titleBar","cursor","pointerEvents","getEventCoordinates","offsetX","offsetLeft","offsetY","offsetTop","passive","bottomLimit","rightLimit","changedTouches","minimizeAllWindows","propigate","focusWindow","pushStateId","alias","DelayedPushState","push","appId","addResizeHandles","resizeHandle","startResize","setSize","startWidth","offsetWidth","startHeight","onMove","moveEvent","newWidth","newHeight","onUp","resize","isResizing","stopResize","setTitle","titleBarSpan","setContent","maximize","fullWindow","applyMobileStyles","applyDiscordViewStyles","isFullWindow","applyDefaultUnmaximizedStyles","applyMaximizedDiscordViewStyles","applyDefaultMaximizedStyles","pixelOffset","discordView","force","err","error","emit","taskBar","parentElement","firstWindow","screenWidth","screenHeight","adjustedPosition","newWindow","buffer","adjustedX","adjustedY","x1","y1","w1","h1","x2","y2","w2","h2","checkOverlap","adjustPosition","ondblclick","iconTitleBar","controls","minimizeButton","maximizeButton","closeButton","WindowManager","storage","localStorage","storageKey","_windows","useKeyboardControls","hideTaskBar","openWindow","_openWindow","state","lastPositionsBeforeArranged","w","hide","ignoreUIControlKeys","dialog","previousWindowData","find","addWindow","updateFocus","splice","isFocused","closeAllWindows","windowsHiding","findWindows","isArray","types","appMatch","typeMatch","JSON","stringify","setItem","loadWindows","serializedWindows","restoreWindows","arrangeVerticalStacked","containerHeight","clientHeight","windowWidth","defaultWindowHeight","totalY","reverse","currentWindowHeight","shortCutsContainer","arrangeHorizontalStacked","xPos","arrangeCascadeFromTopLeft","yPos","inflate","windowsData","parse","CountdownManager","intervalId","expiryCallbacks","WeakMap","updateCountdowns","countdownEls","each","_","$el","expiry","Date","getTime","distance","now","ctime","cb","days","floor","hours","minutes","seconds","prefix","timeParts","toString","padStart","text","clearInterval","countdownTimer","startCountdown","onExpire","expiryTime","duration","setInterval","showLightbox","$overlay","$img","attr","append","flexShow","fadeIn","onKeyUp","closeOverlay","off","fadeOut","on","showAlert","buttonText","alert","modal","backgroundColor","alignItems","justifyContent","modalContent","padding","borderRadius","maxWidth","boxShadow","fontFamily","textAlign","margin","fontSize","color","messageText","html","button","border","handleKeydown","UI","windowManagerOptions","fontAwesome","countdownManager","setViewportHeight","vh","documentElement","setProperty","vw","init","noCSS","appendCSS","mode","noZepto","noTabs","SimpleTabs","importModule","host","Tabs","default","appendScript","showLightBox","LightBox","d","url","discordSdk","commands","openExternalLink","appendToElement","fetchHTMLFragment","loadDocumentBody","toggleFullScreen","fullscreenElement","exitFullscreen","requestFullscreen"],"mappings":"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"}