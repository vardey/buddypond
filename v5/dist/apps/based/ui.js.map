{"version":3,"file":"ui.js","sources":["../../../apps/based/ui/Window/Window.js","../../../apps/based/ui/Window/lib/maximize.js","../../../apps/based/ui/Window/lib/minimize.js","../../../apps/based/ui/Window/lib/open.js","../../../apps/based/ui/Window/lib/close.js","../../../apps/based/ui/Window/lib/createWindow.js","../../../apps/based/ui/Window/Panel.js","../../../apps/based/ui/Window/WindowManager.js","../../../apps/based/ui/CountdownManager.js","../../../apps/based/ui/LightBox.js","../../../apps/based/ui/showAlert.js","../../../apps/based/ui/ui.js"],"sourcesContent":["// Buddy Pond - Window.js - Marak Squires 2023\n// A simple window class for creating draggable, resizable windows\n// Remark: WindowManager interface is optional and will be stubbed out if not provided\nimport maximize from \"./lib/maximize.js\";\nimport minimize from \"./lib/minimize.js\";\nimport open from \"./lib/open.js\";\nimport close from \"./lib/close.js\";\nimport createWindow from \"./lib/createWindow.js\";\n\nlet idCounter = 0;\n\nclass Window {\n    constructor(options = {}, windowManager) {\n        const {\n            title = \"Window\", // Title of the window\n            width = '400px', // Default width\n            height = '300px', // Default height\n            app = 'default', // default app\n            type = 'singleton', // Default type ( intended to not have siblings )\n            context = 'default', // Default context\n            content = '', // Default content\n            iframeContent = false,\n            position = null,\n            icon = '', // Default icon\n            x = 50, // Default x position\n            y = 50, // Default y position\n            z = 99, // Default z-index\n            parent = window.document.body, // Parent element to append to\n            id = `window-${idCounter}`, // Unique ID for the panel\n            onFocus = () => { }, // Callback when the window is focused\n            onClose = () => { }, // Callback when the window is closed\n            onOpen = () => { }, // Callback when the window is opened\n            onResize = () => { }, // Callback when the window is resized\n            onMessage = () => { }, // Callback when the window receives a message\n            onLoad = () => { }, // Callback when the window is loaded ( remote content )\n            className = '', // Custom classes for styling\n            resizeable = true, // Enable resizable feature\n            preventOverlap = true, // prevents direct overlap with other windows\n            canBeBackground = false // Can be set as background\n        } = options;\n\n        this.windowManager = windowManager;\n\n        // ensure that no other window has the same id\n        // we could check the windowManger.windows array for this\n        // we will check the document ( in case another system has created a window )\n        let existingWindow = document.getElementById(id);\n        if (existingWindow) {\n            console.log('Window with id already exists', id);\n            return existingWindow;\n        }\n\n        this.title = title;\n        this.icon = bp.config.host + '/' + icon;\n        this.width = width;\n        this.height = height;\n\n        if (app !== 'default') {\n            this.app = app;\n        } else {\n            this.app = id;\n        }\n\n\n        this.type = type;\n        this.x = x;\n        this.y = y;\n        this.z = 99;\n        this.context = context;\n        this.parent = parent;\n        this.id = id;\n        this.isMaximized = false;\n        this.isMinimized = false;\n        this.container = null;\n        this.content = null;\n        this.iframeContent = iframeContent;\n        this.contentValue = content;\n        this.isActive = false;\n        this.className = className;\n        this.resizeable = resizeable;\n        this.preventOverlap = preventOverlap;\n        this.canBeBackground = canBeBackground;\n\n\n        // if position is set, override the x and y values\n        if (position === 'center') {\n            this.x = (window.innerWidth - parseInt(this.width)) / 2;\n            this.y = (window.innerHeight - parseInt(this.height)) / 2;\n        }\n\n\n        windowManager = windowManager || {\n            windows: [],\n            saveWindowsState: () => { },\n            removeWindow: () => { },\n\n        };\n\n        this.bp = options.bp;\n\n        this.onFocus = onFocus;\n        this.onClose = onClose;\n        this.onOpen = onOpen;\n        this.onLoad = onLoad;\n        this.onMessage = onMessage;\n\n        this.startDrag = this.startDrag.bind(this);\n        this.drag = this.drag.bind(this);\n        this.stopDrag = this.stopDrag.bind(this);\n\n\n        this.createWindow();\n        this.open();\n\n        return this;\n    }\n\n    initContentArea() {\n        if (typeof this.iframeContent === 'boolean' && this.iframeContent) {\n            this.content = document.createElement(\"iframe\");\n            this.content.classList.add(\"bp-window-content\");\n            document.body.appendChild(this.content);\n            this.content.src = 'about:blank';\n            this.content.onload = () => {\n                let iframeDoc = this.content.contentDocument || this.content.contentWindow.document;\n                iframeDoc.open();\n                iframeDoc.write(this.contentValue);\n                iframeDoc.close();\n                this.setupMessageHandling();\n            };\n        } else if (typeof this.iframeContent === 'string' && this.iframeContent.length) {\n            this.content = document.createElement(\"div\");\n            this.content.classList.add(\"bp-window-content\");\n\n            this.iframe = document.createElement(\"iframe\");\n\n            this.content.appendChild(this.iframe);\n            // by default add allow attributes to the iframe\n            this.iframe.setAttribute(\"allow\", \"autoplay; encrypted-media; fullscreen; clipboard-write; accelerometer; gyroscope; web-share\");\n\n            // if this.iframeContent starts with a '/' it's a local iframe\n            // and if window.discordMode is true, we need to prepend /.proxy/\n            if (this.iframeContent.startsWith('/')) {\n                if (window.discordMode) {\n                    this.iframeContent = `/.proxy${this.iframeContent}`;\n                } else {\n                    this.iframeContent = `${this.bp.config.host}${this.iframeContent}`;\n                }\n            }\n\n            this.iframe.src = this.iframeContent;\n\n            \n\n            // Remark: This is legacy settings for iframe message handling bootstrapping\n            // In more modern applications, we use broadcast channels or other methods\n            // It's important we don't attempt to setup message handling for iframes that are not from the same origin\n            let currentOrigin = bp.config.host;\n            let iframeOrigin = this.iframe.src;\n\n            // check if currentOrigin can be found in iframeOrigin\n            if (iframeOrigin.indexOf(currentOrigin) !== -1) {\n                this.iframe.onload = () => this.setupMessageHandling();\n            } else {\n\n                // hide the iframe\n                this.iframe.style.display = 'none';\n                this.iframe.onload = () => {\n                    // remove loading image\n                    loaderHolder.remove();\n                    // show the iframe\n                    this.iframe.style.display = 'block';\n                }\n\n                // add the loaderHolder\n                let loaderHolder = document.createElement(\"div\");\n                loaderHolder.id = \"loaderHolder\";\n                loaderHolder.innerHTML = `\n                <div id=\"loader\"></div>\n                <p class=\"loaderText\">Loading... ${this.id || this.title || this.label || ''}</p>\n            `;\n                this.content.appendChild(loaderHolder);\n\n                // console.log('not setting up legacy iframe message handling, as the iframe origin does not match current origin');\n            }\n        } else {\n            this.content = document.createElement(\"div\");\n            this.content.classList.add(\"bp-window-content\");\n            if (typeof this.contentValue === 'string') {\n                this.content.innerHTML = this.contentValue;\n            } else {\n                this.content.appendChild(this.contentValue);\n            }\n        }\n    }\n\n    // TODO: migrate away from iframe messages and use BroadcastChannel instead\n    setupMessageHandling() {\n        // iframe is loaded by now\n        this.onLoad(this);\n        const iframeWindow = this.iframe.contentWindow;\n\n        // Inject a script into the iframe to listen for the ESC key\n        const iframeDoc = this.iframe.contentDocument || this.iframe.contentWindow.document;\n        const script = iframeDoc.createElement(\"script\");\n        script.type = \"text/javascript\";\n        script.textContent = `\n            document.addEventListener('keydown', (event) => {\n                if (event.key === 'Escape') {\n                    window.parent.postMessage({ event: 'ESC_KEY_PRESSED' }, '*');\n                }\n            });\n        `;\n        iframeDoc.body.appendChild(script);\n\n        // Set the message event listener on the iframe's window\n        window.addEventListener('message', this.receiveMessage.bind(this), false);\n    }\n\n\n    sendMessage(message) {\n        if (this.iframe && this.iframe.contentWindow) {\n            this.iframe.contentWindow.postMessage(message, '*'); // Consider specifying an origin here instead of '*'\n        }\n    }\n\n    receiveMessage(event) {\n        // Ensure security by checking the event.origin, if possible\n        if (typeof event.data === 'object' && event.data.event) {\n            if (event.data.event === 'ESC_KEY_PRESSED') {\n                console.log('ESC key pressed inside iframe. Closing window...');\n                this.close();\n            } else {\n                this.handleReceivedMessage(event.data);\n            }\n        }\n    }\n\n    handleReceivedMessage(data) {\n        //console.log('Handled Received message:', data, this.onMessage);\n        if (this.onMessage) {\n            this.onMessage(data);\n        }\n    }\n\n\n    move(x, y) {\n        this.x = x;\n        this.y = y;\n        this.container.style.top = `${this.y}px`;\n        this.container.style.left = `${this.x}px`;\n        this.windowManager.saveWindowsState();\n    }\n\n    serialize() {\n\n        // we need an xpath selector for this.parent\n        let parentXpath = getXPathForElement(this.parent);\n        // console.log('parentXpath', parentXpath);\n        return {\n            title: this.title,\n            width: this.width,\n            height: this.height,\n            type: this.type,\n            app: this.app,\n            x: this.x,\n            y: this.y,\n            z: this.z,\n            context: this.context,\n            parent: parentXpath,\n            id: this.id,\n            onClose: this.onClose,\n            onOpen: this.onOpen,\n            className: this.className,\n            resizeable: this.resizeable,\n            canBeBackground: this.canBeBackground\n        };\n    }\n\n    hydrate(data) {\n        console.log('hydrate', data);\n        this.title = data.title;\n        this.width = data.width;\n        this.height = data.height;\n        this.app = data.app;\n        this.type = data.type;\n        this.x = data.x;\n        this.y = data.y;\n        this.z = Number(data.z);\n        this.context = data.context;\n        // TODO: some of these are constructor...maybe all?\n        // this.parent = document.querySelector(data.parent);\n        this.id = data.id;\n        this.onClose = data.onClose;\n        this.onOpen = data.onOpen;\n        this.onMessage = data.onMessage;\n        this.className = data.className;\n        this.resizeable = data.resizeable;\n        this.canBeBackground = data.canBeBackground;\n\n        this.updateWindow();\n    }\n\n    updateWindow() {\n        this.container.style.width = `${this.width}px`;\n        this.container.style.height = `${this.height}px`;\n\n        // top and left values should be relative to the current scroll position of the window\n        let relativeX = this.x + window.scrollX;\n        let relativeY = this.y + window.scrollY;\n        this.container.style.top = `${relativeY}px`;\n        this.container.style.left = `${relativeX}px`;\n        this.container.style.zIndex = this.z;\n        // console.log('updateWindow', this);\n    }\n\n    setDepth(depth) {\n        this.z = depth;\n        this.container.style.zIndex = depth;\n        // console.log('container depth was set to', this.id, depth);\n        this.windowManager.saveWindowsState();\n    }\n\n    setAsBackground() {\n        console.log('setAsBackground', this.windowManager.windows);\n        if (!this.canBeBackground) {\n            console.log('This window cannot be set as background. Try setting canBeBackground:true in the Window declaration');\n            return;\n        }\n        // check other api.ui.windowManager.windows and restore them if isBackground is true\n        this.windowManager.windows.forEach((window) => {\n            if (window.isBackground) {\n                window.restoreWindowFromBackground();\n            }\n        });\n\n        this.container.style.zIndex = -1;\n\n        // make full window size\n        this.container.style.width = \"100%\";\n        this.container.style.height = \"100%\";\n\n        // set top and left to 0\n        this.container.style.top = \"0\";\n        this.container.style.left = \"0\";\n\n        this.isBackground = true;\n        this.isActive = false;\n    }\n\n    restoreWindowFromBackground() {\n\n        this.isBackground = false;\n\n        // reset the z-index\n        this.container.style.zIndex = 11000;\n\n        // reset the window size\n        this.container.style.width = `${this.width}`;\n        this.container.style.height = `${this.height}`;\n\n        // put window back to original position\n        this.container.style.top = `${this.y}px`;\n        this.container.style.left = `${this.x}px`;\n\n        // get the menubar-restore-background-window element and add disabled class\n        let el = document.getElementById('menubar-restore-background-window');\n        if (el) {\n            el.classList.add('disabled');\n        }\n\n    }\n\n    startDrag(e) {\n        this.isDragging = true;\n        this.titleBar.style.cursor = \"grabbing\";\n\n        // Disable pointer events on iframe\n        const iframes = this.container.querySelectorAll('iframe');\n        iframes.forEach(iframe => {\n            iframe.style.pointerEvents = 'none';\n        });\n\n        // Get coordinates from mouse or touch event\n        const { clientX, clientY } = this.getEventCoordinates(e);\n        this.offsetX = clientX - this.container.offsetLeft;\n        this.offsetY = clientY - this.container.offsetTop;\n\n        // Add event listeners for both mouse and touch events\n        document.addEventListener('mousemove', this.drag);\n        document.addEventListener('touchmove', this.drag, { passive: false });\n        document.addEventListener('mouseup', this.stopDrag);\n        document.addEventListener('touchend', this.stopDrag);\n    }\n\n    drag(e) {\n        if (!this.isDragging) return;\n\n        // Prevent default behavior for touchmove to avoid scrolling\n        e.preventDefault();\n\n        // Get coordinates from mouse or touch event\n        const { clientX, clientY } = this.getEventCoordinates(e);\n\n        // Update container position\n        // Ensure window does not drag off the screen\n        let menuBarHeight = 42;\n        let bottomLimit = window.innerHeight - 52; // 50px from bottom\n        if (clientY > menuBarHeight && clientY < bottomLimit) {\n            this.container.style.top = `${clientY - this.offsetY}px`;\n        }\n        let leftLimit = 52; // 0px from left\n        let rightLimit = window.innerWidth - 52; // 0px from right\n        if (clientX > leftLimit && clientX < rightLimit) {\n            this.container.style.left = `${clientX - this.offsetX}px`;\n        }\n    }\n\n    stopDrag() {\n        this.isDragging = false;\n        this.titleBar.style.cursor = \"grab\";\n\n        // Restore pointer events on iframe\n        const iframes = this.container.querySelectorAll('iframe');\n        iframes.forEach(iframe => {\n            iframe.style.pointerEvents = 'auto';\n        });\n\n        // Remove event listeners\n        document.removeEventListener('mousemove', this.drag);\n        document.removeEventListener('touchmove', this.drag);\n        document.removeEventListener('mouseup', this.stopDrag);\n        document.removeEventListener('touchend', this.stopDrag);\n\n        // Save window state\n        this.x = this.container.offsetLeft;\n        this.y = this.container.offsetTop;\n        this.z = Number(this.container.style.zIndex);\n        if (this.windowManager) {\n            this.windowManager.saveWindowsState();\n        } else {\n            console.warn('windowManager is not defined');\n        }\n    }\n\n    getEventCoordinates(e) {\n        let clientX, clientY;\n        if (e.type.startsWith('touch')) {\n            // Use the first touch point for dragging\n            const touch = e.touches[0] || e.changedTouches[0];\n            clientX = touch.clientX;\n            clientY = touch.clientY;\n        } else {\n            // Mouse event\n            clientX = e.clientX;\n            clientY = e.clientY;\n        }\n        return { clientX, clientY };\n    }\n\n    // Restore the window\n    restore() {\n        // console.log('restore', this)\n        // Restore the window's content and original size\n\n        if (this.bp.isMobile()) {\n            this.windowManager.minimizeAllWindows(true);\n        }\n\n        if (window.discordView) {\n            // this.windowManager.minimizeAllWindows(true);\n        }\n\n        this.container.style.display = \"flex\";\n\n        //this.container.style.top = this.y + 'px';\n        //this.container.style.left = this.x + 'px';\n\n        // Mark as not minimized\n        this.isMinimized = false;\n        // TODO: save the window state\n\n    }\n\n    focus(propigate = true) {\n        // console.log('on focus called from Window.js')\n        if (propigate) {\n            this.windowManager.focusWindow(this);\n        }\n\n        // check if window is minimized, if so, restore it\n        if (this.isMinimized) {\n            this.restore();\n        }\n\n        this.onFocus(this);\n\n        if (this.bp.apps.desktop && this.bp.apps.list) {\n          let appData = this.bp.apps.list[this.id];\n          let pushStateId = this.id;\n          if (appData && appData.alias) {\n              // get the first entry in the alias array\n              let alias = appData.alias[0];\n              pushStateId = alias; // use the id if it exists, otherwise use the alias string\n          }\n\n          let pushUrl = `/app/${pushStateId}`;\n          // console.log('focus pushUrl', pushUrl, this.context);\n          if (this.context && this.context !== 'default' && this.context !== 'all') {\n            // don't double append context if it's already ending with it\n            // TODO: should fix this upstream, better URL push state routing\n            if (!pushUrl.endsWith(`/${this.context}`)) {\n              pushUrl += `/${this.context}`;\n            }\n          }\n\n          // history.pushState({ appId: pushStateId }, this.title, `/app/${pushStateId}`);\n          DelayedPushState.push({ appId: pushStateId }, this.title, pushUrl);\n        }\n\n    }\n\n\n    addResizeHandles() {\n        const resizeHandle = document.createElement(\"div\");\n        resizeHandle.classList.add(\"resize-handle\");\n        this.container.appendChild(resizeHandle);\n        resizeHandle.addEventListener(\"mousedown\", (e) => this.startResize(e), { passive: false });\n        resizeHandle.addEventListener(\"touchstart\", (e) => {\n            e.preventDefault(); // Prevent default touch behavior\n            this.startResize(e.touches[0]);\n        }, { passive: false });\n    }\n\n    setSize(width, height) {\n        this.width = width;\n        this.height = height;\n        this.container.style.width = `${this.width}`;\n        this.container.style.height = `${this.height}`;\n        // save the window state\n        this.windowManager.saveWindowsState();\n    }\n\n    startResize(e) {\n        // alert('start resize')\n        const container = this.container;\n        const startX = e.clientX;\n        const startY = e.clientY;\n        const startWidth = container.offsetWidth;\n        const startHeight = container.offsetHeight;\n\n        const onMove = (moveEvent) => {\n            const clientX = moveEvent.clientX || moveEvent.touches[0].clientX;\n            const clientY = moveEvent.clientY || moveEvent.touches[0].clientY;\n            const newWidth = startWidth + (clientX - startX);\n            const newHeight = startHeight + (clientY - startY);\n\n            // Apply new dimensions, respecting min/max constraints\n            container.style.width = `${Math.max(100, newWidth)}px`; // Example min-width\n            container.style.height = `${Math.max(100, newHeight)}px`; // Example min-height\n        };\n\n        const onUp = () => {\n            document.removeEventListener(\"mousemove\", onMove);\n            document.removeEventListener(\"mouseup\", onUp);\n            document.removeEventListener(\"touchmove\", onMove);\n            document.removeEventListener(\"touchend\", onUp);\n        };\n\n        document.addEventListener(\"mousemove\", onMove);\n        document.addEventListener(\"mouseup\", onUp);\n        document.addEventListener(\"touchmove\", onMove, { passive: false });\n        document.addEventListener(\"touchend\", onUp);\n\n        // Disable pointer events on iframe\n        const iframes = this.container.querySelectorAll('iframe');\n        console.log('Disabling pointer events on iframes during resize', iframes);\n        iframes.forEach(iframe => {\n            iframe.style.pointerEvents = 'none';\n        });\n\n\n    }\n\n    resize(e) {\n        if (!this.isResizing) return;\n        const newWidth = this.startWidth + (e.clientX - this.startX);\n        const newHeight = this.startHeight + (e.clientY - this.startY);\n\n        this.container.style.width = `${newWidth}px`;\n        this.container.style.height = `${newHeight}px`;\n\n        if (this.onResize) {\n            this.onResize(newWidth, newHeight);\n        }\n\n    }\n\n    stopResize() {\n        this.isResizing = false;\n        // Restore pointer events on iframe\n        const iframes = this.container.querySelectorAll('iframe');\n        iframes.forEach(iframe => {\n            iframe.style.pointerEvents = 'auto';\n        });\n        // TODO: save the window state\n\n    }\n\n    setTitle(title) {\n        this.title = title;\n        this.titleBarSpan.textContent = title;\n        // save the window state\n        this.windowManager.saveWindowsState();\n    }\n\n    setContent(content) {\n        this.contentValue = content;\n        this.content.innerHTML = content;\n        // save the window state\n        this.windowManager.saveWindowsState();\n    }\n}\n\nexport default Window;\n\n\nfunction getXPathForElement(element) {\n    const fullPath = (el) => {\n        let names = [];\n        while (el.parentNode) {\n            if (el.id) { // If the element has an ID, use it as a unique identifier\n                names.unshift('#' + el.id);\n                break;\n            } else {\n                let e = el, sibling, count = 1;\n                while (sibling = e.previousSibling) {\n                    if (sibling.nodeType === 1 && sibling.tagName === e.tagName) { count++; }\n                    e = sibling;\n                }\n                const tagName = el.tagName.toLowerCase();\n                const nth = count > 1 ? `:nth-of-type(${count})` : '';\n                names.unshift(`${tagName}${nth}`);\n                el = el.parentNode;\n            }\n        }\n        return names.length ? names.join(' > ') : null;\n    };\n    return fullPath(element);\n}\n\nWindow.prototype.maximize = maximize;\nWindow.prototype.minimize = minimize;\nWindow.prototype.open = open;\nWindow.prototype.close = close;\nWindow.prototype.createWindow = createWindow;","export default function maximize({ fullWindow = false } = {}) {\n  const getMenuBarOffset = () => {\n    const normalMenuBarHeight = 21;\n    const currentMenuBarHeight = $('.desktop-menu-bar').height() || normalMenuBarHeight;\n    const diff = currentMenuBarHeight - normalMenuBarHeight + (normalMenuBarHeight + 2); // add 2px for border\n    return diff;\n  };\n\n  const applyMobileStyles = () => {\n    this.container.style.width = \"100vw\";\n    this.container.style.height = 'calc(var(--vh) * 90)';\n    let relativeTop = window.scrollY;\n    let relativeLeft = window.scrollX;\n    this.container.style.top = `${relativeTop}px`;\n    this.container.style.left = `${relativeLeft}px`;\n  };\n\n  const applyDiscordViewStyles = (isFullWindow) => {\n    if (isFullWindow) {\n      this.container.style.width = \"calc(100vw - 75px)\";\n      this.container.style.height = 'calc(var(--vh) * 95)';\n      this.container.style.top = \"20px\";\n      this.container.style.left = \"75px\";\n    } else {\n      this.container.style.width = \"90vw\";\n      this.container.style.height = 'calc(var(--vh) * 90)';\n      this.container.style.top = \"0\";\n      this.container.style.left = \"75px\";\n    }\n  };\n\n  const applyDefaultUnmaximizedStyles = () => {\n    this.container.style.width = `${this.width}px`;\n    this.container.style.height = `${this.height}px`;\n\n    // top and left values should be relative to the current scroll position of the window\n    let relativeTop = 50 + window.scrollY;\n    let relativeLeft = 50 + window.scrollX;\n    this.container.style.top = `${relativeTop}px`;\n    this.container.style.left = `${relativeLeft}px`;\n    this.isMaximized = false;\n  };\n\n  const applyMaximizedDiscordViewStyles = (isFullWindow) => {\n    if (isFullWindow) {\n      this.container.style.width = \"100vw\";\n      this.container.style.height = 'calc(var(--vh) * 95)';\n      this.container.style.top = \"20px\";\n      this.container.style.left = \"0\";\n    } else {\n      this.container.style.width = \"calc(var(--vw) - 72px)\";\n      this.container.style.height = 'calc(var(--vh) * 100)';\n      this.container.style.top = \"20px\";\n      this.container.style.left = \"72px\";\n    }\n  };\n\n  const applyDefaultMaximizedStyles = () => {\n    const pixelOffset = getMenuBarOffset();\n    this.container.style.width = \"100vw\";\n    this.container.style.height = \"calc(100vh - 104px)\";\n\n    // Adjust top position based on menu bar height\n    let relativeTop = parseInt(pixelOffset, 10) + window.scrollY;\n    let relativeLeft = 0 + window.scrollX;\n    this.container.style.top = `${relativeTop}px`;\n    this.container.style.left = `${relativeLeft}px`;\n    this.isMaximized = true;\n  };\n\n  // Main logic\n  if (this.isMaximized) {\n    if (this.bp.isMobile()) {\n      applyMobileStyles();\n    } else if (window.discordView) {\n      applyDiscordViewStyles(fullWindow);\n    } else {\n      applyDefaultUnmaximizedStyles();\n    }\n  } else {\n    if (this.bp.isMobile()) {\n      applyMobileStyles();\n    } else if (window.discordView) {\n      applyMaximizedDiscordViewStyles(fullWindow);\n    } else {\n      applyDefaultMaximizedStyles();\n    }\n  }\n\n  // TODO: save the window state\n}"," export default function minimize(force = false) {\n        // console.log('minimize', this.isMinimized);\n\n        if (false && this.bp.isMobile()) {\n\n            if (this.isMinimized && !force) {\n                this.restore();\n                // this.content.style.display = \"block\"; // Show content area\n            } else {\n                // Minimize the window\n                // this.container.style.display = \"none\";  // Hide content area\n                // hides the `bp-window-content` area\n                //this.content.style.display = \"none\";  // Hide content area\n                // set the window-container height to 50px\n                this.container.style.height = \"120px\"; // Set height to 50px\n\n                this.isMinimized = true;\n            }\n\n            // this.windowManager.arrangeVerticalStacked();\n\n        } else {\n            if (this.isMinimized && !force) {\n                this.restore();\n            } else {\n                // Minimize the window\n                this.container.style.display = \"none\";  // Hide content area\n                this.isMinimized = true;\n            }\n        }\n        // TODO: save the window state\n    }","export default function open() {\n    console.log('Window open:', this.id, this.title, this.app, this.type, this.context);\n    // set focus to this window ( first )\n    this.focus();\n\n    try {\n        // onOpen may have additional focus events\n        this.onOpen(this);\n    } catch (err) {\n        console.error(err);\n    }\n\n    // TODO: save the window state ???\n\n    if (this.bp.isMobile()) {\n        this.windowManager.minimizeAllWindows(true);\n        this.maximize();\n    }\n\n    if (window.discordView) {\n        // this.windowManager.minimizeAllWindows(true);\n        this.maximize();\n    }\n\n    this.bp.emit('window::open', this);\n\n    // console.log('Window opened:', this);\n    let _app = {\n        id: this.id,\n        app: this.app,\n        label: this.title,\n        icon: this.icon,\n        // app: this.app,\n        type: this.type,\n        context: this.context\n    };\n    // console.log('openWindow openItem', _app);\n    this.bp.apps.taskbar.taskBar.openItem(_app);\n\n    // add the items to this.bp.apps.ui.recentApps\n    this.bp.apps.ui.recentApps = this.bp.apps.ui.recentApps || this.bp.settings.recentApps || [];\n\n    // remove items with the same id if already exists\n    this.bp.apps.ui.recentApps = this.bp.apps.ui.recentApps.filter(app => app.id !== this.id);\n\n    this.bp.apps.ui.recentApps.unshift({\n        id: this.id,\n        app: this.app,\n        label: this.label || this.title,\n        icon: this.icon,\n        type: this.type\n    });\n\n    // update the recentApps localStorage\n    this.bp.apps.ui.recentApps = this.bp.apps.ui.recentApps.slice(0, 10); // keep only the first 10 items\n    this.bp.set('recentApps', this.bp.apps.ui.recentApps);\n\n    // update the url bar push state with app id\n    // modify the url to include the app id\n    // load app data to find any aliases\n    if (this.bp.apps.list) {\n\n        let appData = this.bp.apps.list[this.id];\n        let pushStateId = this.id;\n        if (appData && appData.alias) {\n            // get the first entry in the alias array\n            let alias = appData.alias[0];\n            pushStateId = alias; // use the id if it exists, otherwise use the alias string\n        }\n\n        let pushUrl = `/app/${pushStateId}`;\n        /*\n        if (this.context && this.context !== 'default' && this.context !== 'all') {\n            pushUrl += `/${this.context}`;\n        }\n        */\n        if (typeof DelayedPushState !== 'undefined') {\n            DelayedPushState.push({ appId: pushStateId }, this.title, pushUrl);\n        }\n    }\n\n}\n","export default function close() {\n\n    if (this.parent) {\n        // check first to see if child is in parent\n        if (this.container.parentElement && this.container.parentElement === this.parent) {\n            this.parent.removeChild(this.container);\n        }\n    } else {\n        this.container.parentElement.removeChild(this.container);\n    }\n\n    // check to see if this is an iframe and remove event listener\n    if (this.content && this.content.contentWindow) {\n        this.content.contentWindow.removeEventListener('message', this.receiveMessage.bind(this), false);\n    }\n    if (this.content) {\n        if (this.content.parentNode) {\n            this.content.parentNode.removeChild(this.content);\n        }\n        this.content = null;\n    }\n\n    // check to see if no more windows\n    // TODO: remove this code from Window.js class ( it should not know about menubar )\n    // if window count is 0 get the menubar-set-window-as-background element and add disabled class\n    let windowCount = this.windowManager.windows.length;\n    if (windowCount === 0) {\n        let el = document.getElementById('menubar-set-window-as-background');\n        if (el) {\n            el.classList.add('disabled');\n        }\n    }\n    // console.log('removeWindow', this.id);\n    this.windowManager.removeWindow(this.id);\n\n\n    if (this.windowManager.taskBar) {\n        // remove the chat window from the taskbar\n        this.windowManager.taskBar.closeItem(this.id);\n    }\n\n    // TODO: save the window state ??? removeWindow could do it..?\n\n    this.onClose(this);\n    this.bp.emit('window::close', this);\n\n    if (this.bp.isMobile()) {\n        // this.minimizeAllWindows(true);\n        //this.windowManager.arrangeVerticalStacked();\n        setTimeout(() => {\n            // this.windowManager.arrangeVerticalStacked();\n        }, 100);\n    }\n\n    // clear the current pushState\n    // history.pushState({}, '', '/');\n    if (typeof DelayedPushState !== 'undefined') {\n      DelayedPushState.push({}, '', '/');\n    }\n\n    if (this.bp.isMobile()) {\n        // if mobile, check to see if there are any other windows open\n        // if so, restore the first one\n        if (this.windowManager.windows.length > 0) {\n            let firstWindow = this.windowManager.windows[0];\n            if (firstWindow) {\n                firstWindow.restore();\n            }\n        }\n    }\n\n}\n","export default function createWindow() {\n    // Create the main window container\n    this.container = document.createElement(\"div\");\n    this.container.classList.add(\"window-container\");\n\n    // add dataset for app, type, context\n    this.container.dataset.app = this.app;\n    this.container.dataset.type = this.type;\n    this.container.dataset.context = this.context;\n\n    if (this.className) {\n        this.container.classList.add(this.className);\n    }\n\n    if (!this.resizeable) {\n        this.container.classList.add(\"window-not-resizeable\");\n    }\n\n\n    // Helper function to check if two rectangles overlap\n    function checkOverlap(x1, y1, w1, h1, x2, y2, w2, h2, buffer = 10) {\n        // console.log('checkOverlap', x1, y1, w1, h1, x2, y2, w2, h2, buffer);\n        w1 = parseInt(w1);\n        h1 = parseInt(h1);\n        w2 = parseInt(w2);\n        h2 = parseInt(h2);\n        return (\n            x1 < x2 + w2 + buffer &&\n            x1 + w1 + buffer > x2 &&\n            y1 < y2 + h2 + buffer &&\n            y1 + h1 + buffer > y2\n        );\n    }\n\n    // Function to adjust position to prevent overlap\n    function adjustPosition(newWindow, windows, screenWidth, screenHeight, buffer = 10) {\n        let adjustedX = newWindow.x;\n        let adjustedY = newWindow.y;\n\n        // Check overlap with other windows\n        windows.forEach((win) => {\n            if (checkOverlap(adjustedX, adjustedY, newWindow.width, newWindow.height, win.x, win.y, win.width, win.height, buffer)) {\n                // console.log('OVERLAP DETECTED');\n                adjustedX += buffer; // Move slightly to the right\n                // adjustedY += buffer; // Move slightly down\n            }\n        });\n\n        // Check screen boundaries\n        if (adjustedX + newWindow.width + buffer > screenWidth) {\n            adjustedX = screenWidth - newWindow.width - buffer; // Move to the left\n        }\n        if (adjustedY + newWindow.height + buffer > screenHeight) {\n            adjustedY = screenHeight - newWindow.height - buffer; // Move up\n        }\n        if (adjustedX < buffer) {\n            adjustedX = buffer; // Move to the right\n        }\n        if (adjustedY < buffer) {\n            adjustedY = buffer; // Move down\n        }\n\n        return { x: adjustedX, y: adjustedY };\n    }\n\n    // Main Window Creation Logic\n    this.container.id = this.id;\n    this.container.style.width = `${this.width}px`;\n    this.container.style.height = `${this.height}px`;\n    this.container.style.position = \"absolute\";\n\n    // Assume screen dimensions\n    const screenWidth = window.innerWidth;\n    const screenHeight = window.innerHeight;\n\n    /*\n    // Remark: We could perform a general zoom scale for mobile devices\n    if (screenWidth <= 980) {\n        // this.container.style.zoom = 1.5; // Adjust zoom for mobile\n    } else {\n        // do nothing\n    }\n    */\n\n    // Adjust position to prevent overlap\n    let adjustedPosition = {\n        x: this.x,\n        y: this.y,\n    };\n\n    if (this.preventOverlap) {\n        adjustedPosition = adjustPosition(\n            { x: this.x, y: this.y, width: this.width, height: this.height },\n            this.windowManager.windows,\n            screenWidth,\n            screenHeight,\n            32\n        );\n    }\n\n    // adjust the position to be relative to the current scroll position of the window\n    adjustedPosition.x += window.scrollX;\n    adjustedPosition.y += window.scrollY;\n\n    // Apply adjusted position\n    this.x = adjustedPosition.x;\n    this.y = adjustedPosition.y;\n\n    this.container.style.top = `${this.y}px`;\n    this.container.style.left = `${this.x}px`;\n\n    this.container.style.zIndex = 99;\n\n    // add a mousedown handler to container itself to set 'window-active' status\n    this.container.addEventListener('mousedown', () => {\n        // set all windows to inactive\n        document.querySelectorAll('.window-container').forEach((window) => {\n            window.classList.remove('window-active');\n            window.isActive = false;\n        });\n        // set this window to active\n        this.container.classList.add('window-active');\n        this.isActive = true;\n    });\n\n    // same for touchstart\n    this.container.addEventListener('touchstart', () => {\n        // set all windows to inactive\n        document.querySelectorAll('.window-container').forEach((window) => {\n            window.classList.remove('window-active');\n            window.isActive = false;\n        });\n        // set this window to active\n        this.container.classList.add('window-active');\n        this.isActive = true;\n    });\n\n    // Create the title bar\n    this.titleBar = document.createElement(\"div\");\n    this.titleBar.classList.add(\"window-title-bar\");\n\n    if (this.bp.isMobile()) {\n        this.titleBar.onclick = () => {\n            console.log('titleBar clicked on mobile');\n            this.minimize();\n            return;\n            if (!this.isMinimized) {\n                this.minimize(true); // force minimize on mobile\n            } else {\n                this.restore(); // restore on mobile\n            }\n        }\n    }\n\n    // on double click maximize\n    if (window.discordView) {\n        this.titleBar.ondblclick = () => this.maximize({ fullWindow: true });\n    } else {\n        this.titleBar.ondblclick = () => this.maximize();\n    }\n\n    if (this.icon) {\n        let iconTitleBar = document.createElement(\"img\");\n        iconTitleBar.src = this.icon;\n        iconTitleBar.classList.add(\"window-icon\");\n        this.titleBar.appendChild(iconTitleBar);\n    }\n\n    let titleBarSpan = document.createElement(\"span\");\n    titleBarSpan.classList.add(\"window-title-text\");\n    titleBarSpan.textContent = this.title;\n    this.titleBarSpan = titleBarSpan;\n\n    // Drag functionality\n    // Add mouse and touch event listeners to the titleBar\n    this.titleBar.addEventListener('mousedown', this.startDrag);\n    this.titleBar.addEventListener('touchstart', this.startDrag, { passive: false });\n\n    // Touch events for mobile\n\n\n    // Create control buttons (Minimize, Maximize, Close)\n    const controls = document.createElement(\"div\");\n    controls.classList.add(\"window-controls\");\n\n    if (!this.bp.isMobile()) {\n        this.minimizeButton = document.createElement(\"button\");\n        this.minimizeButton.innerHTML = \"&#x1F7E1;\"; // Yellow circle\n        this.minimizeButton.classList.add(\"minimize-button\");\n        this.minimizeButton.title = \"Minimize\";\n        this.minimizeButton.onclick = () => this.minimize();\n\n        controls.appendChild(this.minimizeButton);\n\n\n    }\n\n\n    this.maximizeButton = document.createElement(\"button\");\n    this.maximizeButton.innerHTML = \"&#x1F7E2;\"; // Green circle\n    this.maximizeButton.classList.add(\"maximize-button\");\n    this.maximizeButton.title = \"Maximize\";\n    this.maximizeButton.onclick = () => this.maximize();\n\n    controls.appendChild(this.maximizeButton);\n\n\n    this.closeButton = document.createElement(\"button\");\n    this.closeButton.innerHTML = \"&#x1F534;\"; // Red circle\n    this.closeButton.classList.add(\"close-button\");\n    this.closeButton.title = \"Close\";\n    this.closeButton.onclick = () => this.close();\n\n    controls.appendChild(this.closeButton);\n\n    this.titleBar.appendChild(titleBarSpan);\n    this.titleBar.appendChild(controls);\n\n    this.initContentArea();\n\n    // Append components\n    this.container.appendChild(this.titleBar);\n    this.container.appendChild(this.content);\n\n    if (this.parent) {\n      if (typeof this.parent === 'string'){\n        $(this.parent).append(this.container);\n      } else {\n        this.parent.appendChild(this.container);\n      }\n    }\n\n    // Resizing\n    if (this.resizeable) {\n        this.addResizeHandles();\n    }\n\n    if (this.canBeBackground) {\n        // get the menubar-set-window-as-background element and remove disabled class\n        let el = document.getElementById('menubar-set-window-as-background');\n        if (el) {\n            el.classList.remove('disabled');\n        }\n    }\n\n\n    return this.container;\n}\n\n","class Panel {\n  constructor(options = {}, windowManager) {\n    const {\n      id = 'panel',\n      title = 'Panel',\n      icon = null,\n      position = 'bottom', // 'top', 'left', 'right', 'bottom'\n      panel = 'body',\n      width = 300,\n      height = 200,\n      iframeContent = false,\n      content = '',\n      resizable = false,\n      closable = false,\n      minimizable = false,\n      maximizable = false,\n      focusable = false,\n      maximized = false,\n      minimized = false,\n      onClose = null,\n      onMinimize = null,\n      onMaximize = null,\n      onFocus = null,\n      onBlur = null\n    } = options;\n    this.windowManager = windowManager;\n    this.bp = this.windowManager.bp;\n    this.id = id;\n    this.title = title;\n    // create new DOM element for this.container\n    this.container = document.createElement('div');\n    this.content = null;\n    this.iframeContent = iframeContent;\n    this.contentValue = content;\n    this.parent = panel;\n    this.width = '100%';\n    this.height = '100%';\n\n    console.log('Panel options', options);\n    this.initContentArea();\n\n    // append the content to the container\n    this.container.appendChild(this.content);\n    this.container.classList.add('bp-panel');\n    this.container.style.overflow = 'hidden';\n    // alert(this.width)\n    this.container.style.width = `${this.width}`;\n    this.container.style.height = `${this.height}`;\n\n    this.content.style.width = '100%';\n    this.content.style.height = '100%';\n    // append the container to the parent\n    $(this.parent).append(this.container);\n\n\n  }  // methods for Panel can be added here\n\n}\n\n\nPanel.prototype.initContentArea = function () {\n  if (typeof this.iframeContent === 'boolean' && this.iframeContent) {\n    this.content = document.createElement(\"iframe\");\n    this.content.classList.add(\"bp-panel-content\");\n    document.body.appendChild(this.content);\n    this.content.src = 'about:blank';\n    this.content.onload = () => {\n      let iframeDoc = this.content.contentDocument || this.content.contentWindow.document;\n      iframeDoc.open();\n      iframeDoc.write(this.contentValue);\n      iframeDoc.close();\n      // this.setupMessageHandling();\n    };\n  } else if (typeof this.iframeContent === 'string' && this.iframeContent.length) {\n    this.content = document.createElement(\"div\");\n    this.content.classList.add(\"bp-panel-content\");\n\n    this.iframe = document.createElement(\"iframe\");\n\n    this.content.appendChild(this.iframe);\n    // by default add allow attributes to the iframe\n    this.iframe.setAttribute(\"allow\", \"autoplay; encrypted-media; fullscreen; clipboard-write; accelerometer; gyroscope; web-share\");\n\n    // if this.iframeContent starts with a '/' it's a local iframe\n    // and if window.discordMode is true, we need to prepend /.proxy/\n    if (this.iframeContent.startsWith('/')) {\n      if (window.discordMode) {\n        this.iframeContent = `/.proxy${this.iframeContent}`;\n      } else {\n        this.iframeContent = `${this.bp.config.host}${this.iframeContent}`;\n      }\n    }\n\n    this.iframe.src = this.iframeContent;\n\n    // Remark: This is legacy settings for iframe message handling bootstrapping\n    // In more modern applications, we use broadcast channels or other methods\n    // It's important we don't attempt to setup message handling for iframes that are not from the same origin\n    let currentOrigin = bp.config.host;\n    let iframeOrigin = this.iframe.src;\n\n    // check if currentOrigin can be found in iframeOrigin\n    if (iframeOrigin.indexOf(currentOrigin) !== -1) {\n      // this.iframe.onload = () => this.setupMessageHandling();\n    } else {\n\n      // hide the iframe\n      this.iframe.style.display = 'none';\n      this.iframe.onload = () => {\n        // remove loading image\n        loaderHolder.remove();\n        // show the iframe\n        this.iframe.style.display = 'block';\n      }\n\n      // add the loaderHolder\n      let loaderHolder = document.createElement(\"div\");\n      loaderHolder.id = \"loaderHolder\";\n      loaderHolder.innerHTML = `\n                <div id=\"loader\"></div>\n                <p class=\"loaderText\">Loading... ${this.id || this.title || this.label || ''}</p>\n            `;\n      this.content.appendChild(loaderHolder);\n\n      // console.log('not setting up legacy iframe message handling, as the iframe origin does not match current origin');\n    }\n  } else {\n    this.content = document.createElement(\"div\");\n    this.content.classList.add(\"bp-panel-content\");\n    console.log('content', this.content);\n    console.log('contentValue', this.contentValue);\n    if (typeof this.contentValue === 'string') {\n      this.content.innerHTML = this.contentValue;\n    } else {\n      this.content.appendChild(this.contentValue);\n    }\n  }\n    this.content.style.padding = '0px !important';\n  this.content.style.margin = '0px !important';\n\n}\n\nPanel.prototype.setContent = function (content) {\n  this.contentValue = content;\n  this.content.innerHTML = content;\n  // save the window state\n  this.windowManager.saveWindowsState();\n}\n\n\nPanel.prototype.serialize = function () {\n  return {\n    id: this.id,\n    title: this.title,\n    icon: this.icon,\n    position: this.position,\n    width: this.width,\n    height: this.height,\n    resizable: this.resizable,\n    closable: this.closable,\n    minimizable: this.minimizable,\n    maximizable: this.maximizable,\n    focusable: this.focusable,\n    maximized: this.maximized,\n    minimized: this.minimized\n  };\n};\n\nPanel.prototype.setDepth = function (zIndex) {\n  //this.container.style.zIndex = zIndex;\n  //this.zIndex = zIndex;\n};\n\nPanel.prototype.minimize = function (zIndex) {\n};\n\nPanel.prototype.restore = function (zIndex) {\n};\n\nPanel.prototype.focus = function () {\n  if (this.focusable) {\n    this.container.classList.add('focused');\n    if (this.onFocus) {\n      this.onFocus(this);\n    }\n    // scroll the document to the container\n    this.bp.emit('window::focus', this);\n  }\n  // TODO: we may need better logic for auto-scrolling to panels on open/focus\n  // Remark: Might be better to make this an option, or to modify bp.open() to accept a scrollIntoView option\n  // Prior behavior was catering to Windows, not Panels\n  this.container.scrollIntoView({ behavior: 'smooth', block: 'end' });\n};\n\nPanel.prototype.close = function () {\n  if (this.onClose) {\n    this.onClose(this);\n  }\n  this.container.remove();\n  this.bp.emit('window::close', this);\n  // remove the window from the window manager\n  this.windowManager.removeWindow(this.id);\n  // save the window state\n  this.windowManager.saveWindowsState();\n};\nexport default Panel;\n","/* Buddy Pond - WindowManager.js - Marak Squires 2023 */\nimport TaskBar from './TaskBar.js';\nimport Window from \"./Window.js\";\nimport Panel from \"./Panel.js\"\n\nexport default class WindowManager {\n    constructor(ui, options = {}) {\n        this.storage = options.storage || localStorage; // Use localStorage by default\n        this.storageKey = options.storageKey || 'windowsState'; // Key for storing data\n        this.windows = [];\n        this._windows = [];\n        this.options = options;\n\n        this.bp = ui.bp;\n\n        this.useKeyboardControls = true;\n\n        if (typeof options.useKeyboardControls === \"boolean\") {\n            this.useKeyboardControls = options.useKeyboardControls;\n        }\n\n        if (typeof options.hideTaskBar === \"boolean\") {\n            this.hideTaskBar = options.hideTaskBar;\n        }\n\n        if (typeof options.openWindow === \"function\") {\n            this._openWindow = options.openWindow;\n        } else {\n            this._openWindow = function (name, config) {\n                if (options.panel) {\n                    config = { ...config, panel: true };\n                }\n                const window = this.createWindow(config);\n                window.hydrate(config);\n            }\n        }\n\n        // Remark: Why is TaskBar in the WindowManager?\n        // shouldn't this be in the UI class?\n        /*\n        this.taskBar = new TaskBar({\n            bp: this.bp,\n            homeCallback: () => {\n\t\n            if (!this.state) {\n                // save current window positions\n                this.lastPositionsBeforeArranged = this.windows.map(w => {\n                return {\n                    x: w.x,\n                    y: w.y,\n                    height: w.height,\n                    width: w.width\n                }\n                });\n                // console.log('lastPositionsBeforeArranged', this.lastPositionsBeforeArranged);\n                this.state = 'maximized';\n            }\n\t\n\t\n            if (this.state === 'minimized') {\n                this.minimizeAllWindows();\n                // this.arrangeHorizontalStacked();\n                this.state = 'maximized';\n\t\n            } else if (this.state === 'stacked-vertical') {\n                // stack-vertical has been removed ( for now )\n                // it wasn't looking good as a default and was rarely used\n         \n\t\n            } else if (this.state === 'stacked-horizontal') {\n                // this.arrangeVerticalStacked();\n                // this.state = 'stacked-vertical';\n                // restore all windows to their previous positions\n                this.windows.forEach((w, i) => {\n                w.move(this.lastPositionsBeforeArranged[i].x, this.lastPositionsBeforeArranged[i].y);\n                w.setSize(this.lastPositionsBeforeArranged[i].width + 'px', this.lastPositionsBeforeArranged[i].height + 'px');\n                });\n                this.state = 'maximized';\n\t\n            } else {\n                this.minimizeAllWindows(true);\n                this.windows.forEach((w, i) => {\n                w.move(this.lastPositionsBeforeArranged[i].x, this.lastPositionsBeforeArranged[i].y);\n                w.setSize(this.lastPositionsBeforeArranged[i].width + 'px', this.lastPositionsBeforeArranged[i].height + 'px');\n                });\n\t\n                this.state = 'minimized';\n\t\n            }\n\t\n            // close all windows\n            // this.minimizeAllWindows();\n            // this.windowsClosed = true;\n\t\n            // hide all legacy BP windows\n            $('.window').hide();\n            $('.window').removeClass('window_stack');\n\t\n            }\n        });\n        */\n\n        if (this.options.hideTaskBar) {\n            this.taskBar.taskBarElement.style.display = 'none';\n        }\n\n        if (this.useKeyboardControls) {\n            window.addEventListener(\"keydown\", (e) => {\n                // alert(this.bp.editingMode);\n                if (e.key === \"Escape\" && !this.bp.ignoreUIControlKeys) {\n                    // alert(\"Escape key pressed\");\n                    // find the window with the highest depth and close it\n\n                    // first check to see if there is a dialog open, close that first\n                    const dialog = document.querySelector('.dialog');\n                    if (dialog) {\n                        dialog.remove();\n                        return;\n                    }\n\n                    const window = this.windows[0]; // no sort needed, windows are already sorted by depth\n                    if (window) {\n                        window.close();\n                    }\n                }\n            });\n        }\n\n    }\n\n    createWindow(options) {\n\n        // check to see if there is previous window data in this._windows\n        // check by id, if found, hydrate the window\n        // This is a temporary solution until full app hydration is back online\n        // This solution will allow for position and size to be saved and restored\n        options = { ...options, ...this.options.window };\n        // console.log('createWindow', options);\n        let previousWindowData = this._windows.find(w => w.id === options.id);\n        if (previousWindowData) {\n            // just merge the previous window data with the new options\n            options = { ...previousWindowData, ...options };\n        }\n\n        // check to see if window already exists with id\n        const existingWindow = this.getWindow(options.id);\n        let window;\n\n        if (existingWindow) {\n            window = existingWindow;\n            this.focusWindow(window); // Focus the newly created window\n            return window;\n        }\n        options.bp = this.bp;\n        if (!options.panel) {\n            window = new Window(options, this);\n        } else {\n            window = new Panel(options, this);\n        }\n\n\n        window.container.addEventListener(\"mousedown\", () => {\n            this.focusWindow(window);\n        });\n        this.addWindow(window);\n        if (!options.panel) {\n          this.focusWindow(window); // Focus the newly created window\n        }\n\n        // when opening a window, automatically add it to the taskbar\n        //alert(window.id)\n        /*\n        this.taskBar.openItem({\n            id: window.app,\n            title: window.title,\n            icon: window.icon,\n            onClick: () => {\n                // toggle window minimize / restore state\n                if (this.isMobile()) {\n                    // this.minimizeAllWindows(true);\n                    this.arrangeVerticalStacked();\n                    // we could minimize all other windows here\n                    // minimizeAllWindows();\n                }\n                if (window.isMinimized) {\n                    window.restore();\n                    window.focus();\n                } else {\n                    window.minimize();\n                }\n            }\n        });\n        */\n\n        return window;\n    }\n\n    isMobile() {\n        return window.innerWidth < 1000;\n    }\n\n    addWindow(window) {\n        this.windows.push(window);\n        this.saveWindowsState(); // Save state when a window is added\n        this.updateFocus();\n    }\n\n    removeWindow(window) {\n        // console.log(\"Removing window\", window);\n        this.windows = this.windows.filter(w => w.id !== window);\n        //console.log(\"Remaining windows\", this.windows);\n        this.saveWindowsState(); // Save state when a window is removed\n        this.updateFocus();\n    }\n\n    focusWindow(window) {\n        // window can be the window instance or the window id\n        if (typeof window === 'string') {\n            window = this.getWindow(window);\n        }\n\n        // console.log(\"Focusing window\", window);\n\n        // TODO: this isn't working consistenly?  there seems to be an issue with index\n        // console.log(\"Focusing window\", window.id);\n        const index = this.windows.indexOf(window);\n        if (index !== -1) {\n            this.windows.splice(index, 1);\n            this.windows.unshift(window);\n            // console.log('Focusing window', window.id, 'at index', index);\n            this.updateFocus();\n            window.focus(false);\n            this.saveWindowsState(); // Save state when focus changes\n        }\n        // iterate through all windows and set isFocused to false\n        // set this window isFocused to true\n        this.windows.forEach(w => {\n            if (w.id !== window) {\n                w.isFocused = false;\n\n            } else {\n                window.isFocused = true;\n\n            }\n        });\n    }\n\n    updateFocus() {\n        // console.log(\"Updating focus\");\n        this.windows.forEach((window, index) => {\n            // console.log(\"Setting depth for window\", window.id, \"to\", 1000 - index);\n            // console.log(\"setting depth for window\", window.id, \"to\", 1000 - index);\n            window.setDepth(1000 - index); // Higher index, higher depth\n        });\n    }\n\n    closeAllWindows() {\n        this.windows.forEach(window => window.close());\n        this.windows = [];\n        this.storage.removeItem(this.storageKey); // Clear storage when all windows are closed\n    }\n\n    minimizeAllWindows(force = false) {\n        if (!this.windowsHiding) {\n            this.windowsHiding = true;\n        } else {\n            this.windowsHiding = false;\n        }\n        this.windows.forEach(window => {\n\n            if ((!this.windowsHiding || force) && typeof window.minimize === 'function') {\n                window.minimize(force);\n            } else {\n                window.restore();\n            }\n        });\n    }\n\n    getWindow(id) {\n        // console.log('searching for', id, 'in', this.windows)\n        return this.windows.find(w => w.id === id);\n    }\n\n    findWindows({ app, type }) {\n        if (!app) {\n            console.warn(\"No app provided to findWindows\");\n            return [];\n        }\n\n        // Normalize app and type to arrays for unified matching\n        const apps = Array.isArray(app) ? app : [app];\n        const types = type ? (Array.isArray(type) ? type : [type]) : null;\n\n        return this.windows.filter(w => {\n            const appMatch = apps.includes(w.app);\n            const typeMatch = types ? types.includes(w.type) : true;\n            return appMatch && typeMatch;\n        });\n    }\n\n    saveWindowsState() {\n        const state = JSON.stringify(this.windows.map(window => window.serialize()));\n        // console.log(\"Saving windows state\", JSON.parse(state));\n        this.storage.setItem(this.storageKey, state);\n    }\n\n    // Remark: This should probably be mostly in settings app or a separate app\n    loadWindows() {\n        const serializedWindows = this.storage.getItem(this.storageKey);\n        if (serializedWindows) {\n            this.restoreWindows(serializedWindows);\n        }\n    }\n\n    arrangeVerticalStacked() {\n        let containerHeight = document.body.clientHeight - 100; // Adjust for container and offset\n        let windowWidth = document.body.clientWidth - 10; // Adjust for container and offset\n        const defaultWindowHeight = containerHeight * 0.8; // Default height for non-minimized windows\n        const minimizedHeight = 120; // Height for minimized windows\n        const gap = 10; // Optional gap between windows for better spacing\n        let totalY = 0; // Initialize Y position\n\n        // console.log('window count', this.windows.length, 'defaultWindowHeight', defaultWindowHeight, 'windowWidth', windowWidth);\n        // console.log(this.windows);\n\n        this.windows.reverse().forEach((window, index) => {\n            // Determine the height for the current window\n            let currentWindowHeight = window.isMinimized ? minimizedHeight : defaultWindowHeight;\n\n            // console.log(\"index\", index, window.title, 'isMinimized', window.isMinimized, 'currentWindowHeight', currentWindowHeight, 'windowWidth', windowWidth);\n\n            // Set window size and position\n            window.setSize(windowWidth + 'px', currentWindowHeight + 'px'); // Set size\n            window.move(0, totalY); // Move to calculated Y position\n\n            // Increment totalY for the next window\n            totalY += currentWindowHeight + gap; // Add current window's height and gap\n\n            // console.log(\"totalY\", totalY, \"currentWindowHeight\", currentWindowHeight, \"windowWidth\", windowWidth);\n        });\n\n        // Position the shortCutsContainer below the last window\n        // console.log('setting shortCutsContainer top to', totalY);\n        if (this.bp.apps.desktop && this.bp.apps.desktop.shortCutsContainer) {\n            this.bp.apps.desktop.shortCutsContainer.style.position = 'absolute';\n            this.bp.apps.desktop.shortCutsContainer.style.left = '0px';\n            this.bp.apps.desktop.shortCutsContainer.style.top = totalY + 'px';\n        }\n    }\n\n    arrangeHorizontalStacked() {\n        const containerWidth = document.body.clientWidth; // Adjust to your specific container if not the body\n        const numWindows = this.windows.length;\n        let windowWidth = containerWidth / numWindows;\n        windowWidth -= 10; // Adjust to your desired offset\n        this.windows.forEach((window, index) => {\n            let xPos = windowWidth * index;\n            xPos += 5;\n            xPos += 10 * index; // Adjust to your desired offset\n            window.setSize(windowWidth + 'px', 'calc(100% - 80px)'); // Assuming you have a resize method\n            window.move(xPos, 30); // Assuming you have a move method\n        });\n\n    }\n\n    arrangeCascadeFromTopLeft() {\n        const offset = 20; // Adjust to your desired offset\n        this.windows.forEach((window, index) => {\n            const xPos = offset * index;\n            const yPos = offset * index;\n            window.move(xPos, yPos); // Assuming you have a move method\n        });\n    }\n\n    // Remark: This should probably be mostly in settings app or a separate app\n    // Restore windows from serialized state\n    restoreWindows(serializedWindows, inflate = false) {\n        const windowsData = JSON.parse(serializedWindows);\n        // console.log(\"Restoring windows\", windowsData);\n        // alert(\"Restoring windows from storage, this will be removed in the future, please use the settings app to manage windows\");\n        this._windows = windowsData;\n\n        if (!inflate) {\n            // for now, probably better suited elsewhere\n            return;\n        }\n        windowsData.forEach(data => {\n            // check to see if window already exists with id\n            const existingWindow = this.getWindow(data.id);\n            if (existingWindow) {\n                console.log(\"WARNING: Window with id\", data.id, \"already exists, hydrating instead of creating new window\");\n                existingWindow.hydrate(data);\n                return;\n            }\n            data.parent = document.querySelector(data.parent);\n            // console.log(\"hydrating window\", data);\n            // this.openWindow(data.app, data);\n            //const window = this.createWindow(data);\n            //window.hydrate(data);\n        });\n    }\n}","export default class CountdownManager {\n    constructor() {\n        this.intervalId = null;\n        this.expiryCallbacks = new WeakMap(); // store per-element callbacks\n    }\n\n    updateCountdowns() {\n        const countdownEls = $('.countdown-date').filter(function () {\n            return $(this).data('expired') !== true;\n        });\n\n        if (countdownEls.length === 0) {\n            if (this.intervalId) {\n                clearInterval(this.intervalId);\n                this.intervalId = null;\n                if (bp?.apps?.ui) {\n                    bp.apps.ui.countdownTimer = null;\n                }\n            }\n            return;\n        }\n\n        countdownEls.each((_, el) => {\n            const $el = $(el);\n\n            const expiry = new Date($el.data('expiry')).getTime();\n            const now = Date.now();\n            const distance = expiry - now;\n\n            if (!$el.data('duration')) {\n                const ctime = $el.data('ctime');\n                if (ctime) {\n                    $el.data('duration', expiry - ctime);\n                }\n            }\n            // console.log('distance for', $el, distance);\n            // distance is going negative? on recurse?\n            if (distance < 0) {\n                $el.data('expired', true);\n\n                const cb = this.expiryCallbacks.get(el);\n                if (typeof cb === 'function') {\n                    cb($el);\n                    this.expiryCallbacks.delete(el); // Cleanup\n                }\n\n                return;\n            }\n\n            const days = Math.floor(distance / (1000 * 60 * 60 * 24));\n            const hours = Math.floor((distance % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60));\n            const minutes = Math.floor((distance % (1000 * 60 * 60)) / (1000 * 60));\n            const seconds = Math.floor((distance % (1000 * 60)) / 1000);\n\n            let prefix = '';\n            let timeParts = [];\n\n            if (days > 0) {\n                prefix = `${days} Day${days > 1 ? 's' : ''} `;\n                timeParts.push(hours.toString().padStart(2, '0'));\n            } else if (hours > 0) {\n                timeParts.push(hours.toString());\n            }\n\n            timeParts.push(minutes.toString().padStart(2, '0'));\n            timeParts.push(seconds.toString().padStart(2, '0'));\n\n            $el.text(prefix + timeParts.join(':'));\n        });\n    }\n\n    /**\n     * Start a countdown on the given jQuery element\n     * @param {jQuery} $el - The element to attach the countdown to\n     * @param {string|Date} expiry - Expiry date/time\n     * @param {function} [onExpire] - Optional callback when countdown expires\n     */\n    startCountdown($el, expiry, onExpire) {\n        const expiryTime = new Date(expiry).getTime();\n        const now = Date.now();\n        const duration = expiryTime - now;\n\n        // console.log('Starting countdown for', $el, expiry);\n\n        $el\n            .data('expiry', expiryTime)\n            .data('ctime', now)\n            .data('duration', duration)\n            .data('expired', false);\n\n        if (typeof onExpire === 'function') {\n            this.expiryCallbacks.set($el[0], onExpire);\n        }\n\n        if (!this.intervalId) {\n            this.intervalId = setInterval(() => this.updateCountdowns(), 1000);\n            if (bp?.apps?.ui) {\n                bp.apps.ui.countdownTimer = this.intervalId;\n            }\n        }\n\n        this.updateCountdowns(); // Immediate update\n    }\n}\n","export default function showLightbox(src) {\n  // Remove any existing overlay\n  $('.buddypond-lightbox-overlay').remove();\n\n  const $overlay = $(`\n    <div class=\"buddypond-lightbox-overlay\" style=\"\n      position: fixed;\n      top: 0; left: 0; right: 0; bottom: 0;\n      background: rgba(0,0,0,0.85);\n      display: flex;\n      justify-content: center;\n      align-items: center;\n      z-index: 999999;\n      cursor: zoom-out;\n      display: none;\n    \"></div>\n  `);\n\n  const $img = $('<img style=\"max-width: 90%; max-height: 90%; box-shadow: 0 0 10px #000;\">');\n  $img.attr('src', src);\n  $overlay.append($img);\n  $('body').append($overlay);\n  bp.ignoreUIControlKeys = true;\n\n  // Show with fade-in\n  $overlay.flexShow().fadeIn(150);\n\n  // ESC key handler\n  const onKeyUp = (e) => {\n    if (e.key === 'Escape') {\n      closeOverlay.call(this);\n    }\n  };\n\n  // Close function with fade-out\n  function closeOverlay() {\n    $(document).off('keyup', onKeyUp); // cleanup key event\n    bp.ignoreUIControlKeys = false;\n\n    $overlay.fadeOut(150, () => $overlay.remove());\n  }\n\n  // Click to close\n  $overlay.on('click', closeOverlay);\n  $(document).on('keyup', onKeyUp);\n}\n","// alert.js - Custom HTML-based alert modal for Discord Activities\n\n// Function to create and show a custom alert modal\nexport default function showAlert(message, options = {}) {\n  // Default options\n  const defaults = {\n    title: 'Alert',\n    buttonText: 'OK',\n    onClose: null, // Optional callback when modal is closed\n  };\n  const config = { ...defaults, ...options };\n\n  if (!window.discordView) {\n    return alert(message); // Fallback to native alert if not in Discord Activities\n  }\n\n  // Create modal container\n  const modal = document.createElement('div');\n  modal.className = 'custom-alert-modal';\n  modal.style.position = 'fixed';\n  modal.style.top = '0';\n  modal.style.left = '0';\n  modal.style.width = '100%';\n  modal.style.height = '100%';\n  modal.style.backgroundColor = 'rgba(0, 0, 0, 0.5)';\n  modal.style.display = 'flex';\n  modal.style.alignItems = 'center';\n  modal.style.justifyContent = 'center';\n  modal.style.zIndex = '1000';\n\n  // Create modal content\n  const modalContent = document.createElement('div');\n  modalContent.style.backgroundColor = '#fff';\n  modalContent.style.padding = '20px';\n  modalContent.style.borderRadius = '8px';\n  modalContent.style.maxWidth = '60vw';\n  modalContent.style.width = '90%';\n  modalContent.style.boxShadow = '0 4px 8px rgba(0, 0, 0, 0.2)';\n  modalContent.style.fontFamily = 'Arial, sans-serif';\n  // align text to center\n  modalContent.style.textAlign = 'center';\n\n  // Add title\n  const title = document.createElement('h2');\n  title.textContent = config.title;\n  title.style.margin = '0 0 10px';\n  title.style.fontSize = '2.5em';\n  title.style.color = '#5865F2'; // Discord-like purple\n  modalContent.appendChild(title);\n\n  // Add message\n  const messageText = document.createElement('p');\n  messageText.textContent = message;\n  messageText.style.margin = '0 0 20px';\n  messageText.style.fontSize = '2em';\n  messageText.style.color = '#333'; // Dark text for readability\n  $(messageText).html(message);\n  modalContent.appendChild(messageText);\n\n  // Add OK button\n  const button = document.createElement('button');\n  button.textContent = config.buttonText;\n  button.style.padding = '8px 16px';\n  button.style.backgroundColor = '#5865F2'; // Discord-like purple\n  button.style.color = '#fff';\n  button.style.border = 'none';\n  button.style.borderRadius = '4px';\n  button.style.cursor = 'pointer';\n  button.style.fontSize = '1em';\n  button.addEventListener('click', () => {\n    modal.remove(); // Remove modal from DOM\n    if (config.onClose && typeof config.onClose === 'function') {\n      config.onClose(); // Call optional callback\n    }\n  });\n  modalContent.appendChild(button);\n\n  // Append modal content to modal\n  modal.appendChild(modalContent);\n\n  // Append modal to document body\n  document.body.appendChild(modal);\n\n  // Focus the button for accessibility\n  button.focus();\n\n  // Allow closing with Enter or Escape keys\n  const handleKeydown = (event) => {\n    if (event.key === 'Enter' || event.key === 'Escape') {\n      modal.remove();\n      if (config.onClose) config.onClose();\n      document.removeEventListener('keydown', handleKeydown);\n    }\n  };\n  document.addEventListener('keydown', handleKeydown);\n}","// Remark: We may be able to remove UI and put all this logic in the desktop app\nimport WindowManager from \"./Window/WindowManager.js\";\nimport CountdownManager from \"../ui/CountdownManager.js\";\nimport LightBox from \"./LightBox.js\";\nimport showAlert from \"./showAlert.js\";\n\nexport default class UI {\n    constructor(bp, options = {}) {\n        this.bp = bp;\n\n        this.bp.alert = showAlert.bind(this);\n        let windowManagerOptions = {};\n        windowManagerOptions.openWindow = this.bp.open.bind(this.bp),\n        windowManagerOptions.window = options.window || {};\n        windowManagerOptions.hideTaskBar = options.hideTaskBar;\n        this.windowManager = new WindowManager(this, windowManagerOptions);\n        this.bp.windows = this.windowManager.windows;\n        // will re-load any previous stored metadata about windows\n        // storage provider is defaulted to localStorage\n        this.windowManager.loadWindows();\n\n        options.parent = options.parent || document.body;\n\n        // options.parent.classList.add('droparea');\n\n        this.options = options;\n\n        if (typeof options.fontAwesome !== 'boolean') {\n            options.fontAwesome = true;\n        }\n\n        this.parent = options.parent;\n\n        this.countdownManager = new CountdownManager(this.bp);\n        // this.countdownManager.updateCountdowns();\n        let that = this;\n        this.bp.window = that.windowManager.createWindow.bind(that.windowManager);\n        // console.log('UI initialized with options:', this.options);\n        function setViewportHeight() {\n            const vh = window.innerHeight * 0.01;\n            document.documentElement.style.setProperty('--vh', `${vh}px`);\n            const vw = window.innerWidth;\n            document.documentElement.style.setProperty('--vw', `${vw}px`);\n        }\n\n        // Run on load and resize\n        window.addEventListener('resize', setViewportHeight);\n        setViewportHeight();\n\n        return this;\n    }\n\n    async init() {\n\n        // base CSS for ui, this can be themed in the future\n        if (!this.options.noCSS) {\n            this.bp.appendCSS('/v5/apps/based/ui/ui.css'); // no need to wait for CSS to load?\n            if (this.bp.mode !== 'prod') {\n                this.bp.appendCSS('/v5/apps/based/ui/mobile.css'); // no need to wait for CSS to load?\n                this.bp.appendCSS('/v5/apps/based/ui/Window/Window.css'); // no need to wait for CSS to load?\n                this.bp.appendCSS('/v5/apps/based/ui/Window/TaskBar.css'); // no need to wait for CSS to load?\n                this.bp.appendCSS('/v5/apps/based/ui/Window/StartPanel.css'); // no need to wait for CSS to load?\n\n            }\n        }\n\n        if (this.options.fontAwesome) {\n            this.bp.appendCSS('/v5/vendor/font-awesome/css/fontawesome.css', false, true);\n            this.bp.appendCSS('/v5/vendor/font-awesome/css/all.min.css', false, true);\n        }\n\n        // TODO: add these lines back after removing v4 completely ( as jQuery is already loaded in v4)\n        if (!this.options.noZepto) {\n            // If you need jQuery or another version of $\n            // we have the ability to not load Zepto as $\n            //await this.bp.appendScript('/v5/vendor/zepto.min.js');\n        } else {\n            //await this.bp.appendScript('/v5/vendor/jquery.min.js');\n\n        }\n\n        // await this.bp.appendScript('/desktop/assets/js/jquery.js');\n\n\n        if (!this.options.noTabs) {\n            // what happened here with config? we shouldn't need to reference host here,\n            // TODO: check implementation of importModule with options\n            let SimpleTabs = await this.bp.importModule('/v5/apps/based/ui/SimpleTabs.js', {}, false)\n            this.Tabs = SimpleTabs.default;\n\n        }\n\n        await this.bp.appendScript('/v5/vendor/DateFormat.js');\n\n        this.showLightBox = LightBox.bind(this);\n\n        // bind common document events\n        // TODO: move UI events to separate file\n        let d = document;\n\n        $(d).on('click', '.open-app', function (e) {\n            e.preventDefault();\n            let appName = $(this).data('app');\n            let context = $(this).data('context');\n            let type = $(this).data('type');\n            // let output = $(this).data('output');\n            // check to see if legacy app ( for now)\n            bp.open(appName, { context, type });\n\n        });\n\n         $(d).on('click', function (e) {\n            // console.log('document click', e);\n            // if the click is outside of a lightbox, close it\n         });\n\n        $(d).on('click', '.open-link', async function (e) {\n            e.preventDefault();\n            let url = $(this).data('link');\n            if (!url) {\n                // check if tag has href attribute\n                url = $(this).attr('href');\n            }\n            console.log('open-link ' + url);\n            if (window.discordMode) {\n                await window.discordSdk.commands.openExternalLink({\n                    url: url\n                });\n                return;\n            } else {\n                window.open(url, '_blank');\n            }\n            return false;\n        });\n\n        return 'loaded ui';\n    }\n\n    async appendToElement(el) {\n        console.log('appendToElement', this);\n        let html = await fetchHTMLFragment('ui.html'); // TODO: might need root\n        console.log(html);\n        el.innerHTML = html;\n        return 'hello ui';\n    }\n\n    async loadDocumentBody() {\n        console.log('loadDocumentBody', this);\n        let html = await this.bp.fetchHTMLFragment('/v5/apps/based/ui/ui.html'); // TODO: might need root\n        console.log(html);\n        $('body').append(html);\n        //document.body.innerHTML = html;\n        return 'hello ui';\n\n    }\n\n    toggleFullScreen() {\n        if (document.fullscreenElement) {\n            document.exitFullscreen();\n        } else {\n            document.documentElement.requestFullscreen();\n        }\n    }\n\n}"],"names":["idCounter","Window","constructor","options","windowManager","title","width","height","app","type","context","content","iframeContent","position","icon","x","y","z","parent","window","document","body","id","onFocus","onClose","onOpen","onResize","onMessage","onLoad","className","resizeable","preventOverlap","canBeBackground","this","existingWindow","getElementById","console","log","bp","config","host","isMaximized","isMinimized","container","contentValue","isActive","innerWidth","parseInt","innerHeight","windows","saveWindowsState","removeWindow","startDrag","bind","drag","stopDrag","createWindow","open","initContentArea","createElement","classList","add","appendChild","src","onload","iframeDoc","contentDocument","contentWindow","write","close","setupMessageHandling","length","iframe","setAttribute","startsWith","discordMode","currentOrigin","indexOf","style","display","loaderHolder","remove","innerHTML","label","script","textContent","addEventListener","receiveMessage","sendMessage","message","postMessage","event","data","handleReceivedMessage","move","top","left","serialize","parentXpath","el","names","parentNode","unshift","sibling","e","count","previousSibling","nodeType","tagName","toLowerCase","nth","join","fullPath","hydrate","Number","updateWindow","relativeX","scrollX","relativeY","scrollY","zIndex","setDepth","depth","setAsBackground","forEach","isBackground","restoreWindowFromBackground","isDragging","titleBar","cursor","querySelectorAll","pointerEvents","clientX","clientY","getEventCoordinates","offsetX","offsetLeft","offsetY","offsetTop","passive","preventDefault","bottomLimit","rightLimit","removeEventListener","warn","touch","touches","changedTouches","restore","isMobile","minimizeAllWindows","focus","propigate","focusWindow","apps","desktop","list","appData","pushStateId","alias","pushUrl","endsWith","DelayedPushState","push","appId","addResizeHandles","resizeHandle","startResize","setSize","startX","startY","startWidth","offsetWidth","startHeight","offsetHeight","onMove","moveEvent","newWidth","newHeight","Math","max","onUp","iframes","resize","isResizing","stopResize","setTitle","titleBarSpan","setContent","prototype","maximize","fullWindow","applyMobileStyles","relativeTop","relativeLeft","applyDiscordViewStyles","isFullWindow","applyDefaultUnmaximizedStyles","applyMaximizedDiscordViewStyles","applyDefaultMaximizedStyles","pixelOffset","$","discordView","minimize","force","err","error","emit","_app","taskbar","taskBar","openItem","ui","recentApps","settings","filter","slice","set","parentElement","removeChild","closeItem","setTimeout","firstWindow","dataset","screenWidth","screenHeight","adjustedPosition","newWindow","buffer","adjustedX","adjustedY","win","x1","y1","w1","h1","x2","y2","w2","h2","checkOverlap","adjustPosition","onclick","ondblclick","iconTitleBar","controls","minimizeButton","maximizeButton","closeButton","append","Panel","panel","resizable","closable","minimizable","maximizable","focusable","maximized","minimized","onMinimize","onMaximize","onBlur","overflow","padding","margin","scrollIntoView","behavior","block","WindowManager","storage","localStorage","storageKey","_windows","useKeyboardControls","hideTaskBar","openWindow","_openWindow","name","taskBarElement","key","ignoreUIControlKeys","dialog","querySelector","previousWindowData","find","w","getWindow","addWindow","updateFocus","index","splice","isFocused","closeAllWindows","removeItem","windowsHiding","findWindows","Array","isArray","types","appMatch","includes","typeMatch","state","JSON","stringify","map","setItem","loadWindows","serializedWindows","getItem","restoreWindows","arrangeVerticalStacked","containerHeight","clientHeight","windowWidth","clientWidth","defaultWindowHeight","totalY","reverse","currentWindowHeight","shortCutsContainer","arrangeHorizontalStacked","xPos","arrangeCascadeFromTopLeft","yPos","inflate","windowsData","parse","CountdownManager","intervalId","expiryCallbacks","WeakMap","updateCountdowns","countdownEls","each","_","$el","expiry","Date","getTime","distance","now","ctime","cb","get","delete","days","floor","hours","minutes","seconds","prefix","timeParts","toString","padStart","text","clearInterval","countdownTimer","startCountdown","onExpire","expiryTime","duration","setInterval","showLightbox","$overlay","$img","attr","flexShow","fadeIn","onKeyUp","closeOverlay","call","off","fadeOut","on","showAlert","buttonText","alert","modal","backgroundColor","alignItems","justifyContent","modalContent","borderRadius","maxWidth","boxShadow","fontFamily","textAlign","fontSize","color","messageText","html","button","border","handleKeydown","UI","windowManagerOptions","fontAwesome","countdownManager","setViewportHeight","vh","documentElement","setProperty","vw","init","noCSS","appendCSS","mode","noZepto","noTabs","SimpleTabs","importModule","Tabs","default","appendScript","showLightBox","LightBox","d","appName","async","url","discordSdk","commands","openExternalLink","appendToElement","fetchHTMLFragment","loadDocumentBody","toggleFullScreen","fullscreenElement","exitFullscreen","requestFullscreen"],"mappings":"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"}