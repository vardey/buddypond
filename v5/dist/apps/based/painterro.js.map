{"version":3,"file":"painterro.js","sources":["../../../apps/based/painterro/painterro.js"],"sourcesContent":["export default class Painterro {\n  constructor(bp, options = {}) {\n    this.bp = bp;\n    this.options = options;\n    return this;\n  }\n\n  async init() {\n    return 'loaded Painterro';\n  }\n\n  async open(options = {}) {\n\n    if (options.src) {\n      this.src = options.src;\n    }\n\n    if (options.output) {\n      this.output = options.output;\n    } else {\n      this.output = 'localhost';\n    }\n\n    if (options.context) {\n      this.context = options.context;\n    } else {\n      this.context = 'file-system';\n    }\n\n\n    this.win = this.bp.window(this.window());\n    return this.win;\n  }\n\n\n  broadcastChannel() {\n\n\n    this.receiver = new BroadcastChannel(\"buddypond-painterro\");\n    // creates a new BroadcastChannel for the desktop\n    this.bc = new BroadcastChannel(\"buddypond-desktop\");\n    // Listen for messages on the desktop channel\n    this.bc.onmessage = async (event) => {\n      // console.log('BroadcastChannel message received:', event.data);\n      let app = event.data.app;\n\n      // console.log(`received message from app: ${app}`);\n\n      if (event.data.app === 'painterro' && event.data.action === 'save') {\n        console.log('BroadcastChannel save action received', event.data);\n\n        let dataURL = event.data.image; // Remark: this was sent over a broadcast channel\n        // console.log('Data URL received:', dataURL);\n        let fileName = event.data.fileName || buddypond.generateSafeFilename('png');\n        let filePath = `paints/${fileName}`;\n\n        function srcToFile(src, fileName, mimeType) {\n          return (fetch(src)\n            .then(function (res) { return res.arrayBuffer(); })\n            .then(function (buf) { return new File([buf], fileName, { type: mimeType }); })\n          );\n        }\n\n        srcToFile(dataURL, fileName, 'image/png').then(async (file) => {\n\n          // Create File from Blob\n          //const file = new File([blob], fileName, { type: blob.type });\n          file.filePath = filePath;\n          console.log('File created:', file, file instanceof File);\n\n          // Test image display\n          const testImage = document.createElement('img');\n\n          // if we have no context or output, save the file locally\n          if (!this.context || !this.output) {\n            console.warn('No context or output specified, saving file locally.');\n            // Save the file locally\n            let link = document.createElement('a');\n            link.href = URL.createObjectURL(file);\n            link.download = fileName;\n            document.body.appendChild(link);\n            link.click();\n            document.body.removeChild(link);\n            return;\n          }\n\n          let onProgress = (progress) => {\n            console.log(`Upload progress: ${progress}%`);\n          };\n\n          // âœ… Upload via buddypond API\n          try {\n            let resultingUrl = await buddypond.uploadFile(file, onProgress);\n            console.log('Upload successful:', resultingUrl);\n            let message = {\n              to: this.context,\n              from: bp.me,\n              type: this.output,\n              text: resultingUrl\n            };\n            console.log(\"sending multimedia message\", message);\n            bp.emit('buddy::sendMessage', message);\n            // now take this image and send it to the chat window as url message\n            this.close();\n          } catch (err) {\n            console.error('Upload failed:', err);\n          }\n        });\n      }\n\n    }\n  }\n\n  window() {\n    return {\n      id: 'painterro',\n      title: 'Painterro',\n      icon: 'desktop/assets/images/icons/icon_painterro_64.webp',\n      x: 250,\n      y: 75,\n      width: 880,\n      height: 400,\n      parent: $('#desktop')[0],\n      iframeContent: '/v5/apps/based/painterro/vendor/painterro.html?context=' + this.context + '&output=' + this.output,\n      resizable: true,\n      minimizable: true,\n      maximizable: true,\n      closable: true,\n      focusable: true,\n      maximized: false,\n      minimized: false,\n      onLoad: () => {\n        if (this.src) {\n          // send message to broadcast channel to load this image\n          console.log('requesting painterro to load image', this.src);\n          this.receiver.postMessage({ type: \"app\", app: \"painterro\", action: \"load\", src: this.src });\n        }\n      },\n      onOpen: () => {\n        this.broadcastChannel();\n      },\n      onClose: () => {\n      }\n    }\n  }\n\n  close() {\n    if (this.win) {\n      this.win.close();\n      this.win = null;\n    }\n    // cleanup broadcast channel\n    if (this.bc) {\n      this.bc.close();\n      this.bc = null;\n    }\n    if (this.receiver) {\n      this.receiver.close();\n      this.receiver = null;\n    } \n  }\n\n}"],"names":["Painterro","constructor","bp","options","this","init","open","src","output","context","win","window","broadcastChannel","receiver","BroadcastChannel","bc","onmessage","async","event","data","app","action","console","log","dataURL","image","fileName","buddypond","generateSafeFilename","filePath","srcToFile","mimeType","fetch","then","res","arrayBuffer","buf","File","type","file","document","createElement","warn","link","href","URL","createObjectURL","download","body","appendChild","click","removeChild","onProgress","progress","resultingUrl","uploadFile","message","to","from","me","text","emit","close","err","error","id","title","icon","x","y","width","height","parent","$","iframeContent","resizable","minimizable","maximizable","closable","focusable","maximized","minimized","onLoad","postMessage","onOpen","onClose"],"mappings":"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"}