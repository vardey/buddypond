{"version":3,"file":"tweets.js","sources":["../../../apps/based/tweets/lib/client.js","../../../apps/based/tweets/lib/wsclient.js","../../../apps/based/buddylist/lib/message/parseMarkdownWithoutPTags.js","../../../apps/based/tweets/tweets.js","../../../apps/based/tweets/lib/eventBind.js","../../../apps/based/tweets/lib/render.js","../../../apps/based/tweets/lib/renderTweet.js"],"sourcesContent":["const client = {};\n\n// client.endpoint = buddypond.adminEndpoint;\nclient.endpoint = 'http://192.168.200.59:9020';\n\nclient.apiRequest = async (uri, method = 'GET', data = null) => {\n\n    const options = {\n        method: method\n    };\n\n    let headers = {\n        \"Accept\": \"application/json\",\n        \"Content-Type\": \"application/json; charset=utf-8\",\n        \"X-Me\": buddypond.me\n      };\n      if (buddypond.qtokenid) {\n        headers[\"Authorization\"] = `Bearer ${buddypond.qtokenid}`; // ‚úÖ Use Authorization header\n      }\n\n\n    if (data) {\n        options.body = JSON.stringify(data);\n    }\n\n    options.headers = headers;\n\n    let url = `${client.endpoint}${uri}`;\n    console.log('tweets client making api request', url, options);\n \n\n    try {\n        const response = await fetch(url, options);\n        if (!response.ok) {\n          console.log('rrrr', response)\n          // get text from response\n          const errorText = await response.text();\n          throw new Error(errorText || response.statusText || 'API request failed');\n            //throw new Error(response.statusText || 'API request failed');\n        }\n        return await response.json();\n    } catch (error) {\n        console.error('Error in API request:', error);\n        throw error;\n    }\n\n};\n\nexport default client;","export default class TweetsWebSocketClient {\n  constructor({ endpoint, bp }) {\n    this.endpoint = buddypond.tweetsWsEndpoint;\n    this.bp = bp;\n\n    this.ws = null;\n    this.reconnectAttempts = 0;\n    this.maxReconnectAttempts = 5;\n    this.maxBackoffDelay = 10000; // 10 seconds\n    this.isIntentionallyClosed = false;\n  }\n\n  async connect() {\n    const url = `${this.endpoint}?me=${buddypond.me}&qtokenid=${buddypond.qtokenid}`;\n    console.log(`üîå Connecting to Tweets...`);\n\n    return new Promise((resolve, reject) => {\n      const ws = new WebSocket(url);\n\n      const onOpen = () => {\n        console.log('‚úÖ WebSocket connected to Tweets');\n        this.reconnectAttempts = 0;\n        this.ws = ws;\n\n        this.bp?.emit('tweets::connected');\n        resolve(this);\n      };\n\n      const onMessage = (event) => {\n        let data;\n        try {\n          data = JSON.parse(event.data);\n        } catch (err) {\n          console.error('‚ùå Failed to parse message:', event.data);\n          this.bp?.emit('tweets::error', { error: 'Invalid JSON', raw: event.data });\n          return;\n        }\n\n        // üîß Add support for custom actions later\n        console.log('üì¨ Message received from Tweets:', data);\n\n        let action = data.action;\n        let error = data.error;\n        if (error) {\n          console.error('‚ùå Error from Tweets:', error);\n          this.bp?.emit('tweets::error', { error });\n          return;\n        }\n\n        switch (action) {\n            case 'tweetsFeed':\n                console.log('Tweets feed received:', data.tweets);\n                this.bp?.emit('tweets::feed', data.tweets);\n                break;\n\n                case 'removedTweet':\n                  console.log('Tweet removed:', data.postId);\n                  this.bp?.emit('tweets::removed', data.postId);\n                  break;\n        }\n\n        // this.bp?.emit('tweets::message', { pondId: this.pondId, message: data });\n      };\n\n      const onClose = (event) => {\n        console.warn(`‚ö†Ô∏è WebSocket closed [${event.code}]: ${event.reason}`);\n\n        this.bp?.emit('tweets::disconnected', {\n          pondId: this.pondId,\n          code: event.code,\n          reason: event.reason,\n        });\n\n        if (!this.isIntentionallyClosed && this.reconnectAttempts < this.maxReconnectAttempts) {\n          const delay = Math.min(\n            200 * Math.pow(2, this.reconnectAttempts) * (1 + 0.1 * Math.random()),\n            this.maxBackoffDelay\n          );\n          console.log(`‚è≥ Reconnecting in ${Math.floor(delay)}ms...`);\n          setTimeout(() => {\n            this.reconnectAttempts++;\n            this.connect().catch(() => {});\n            this.bp?.emit('tweets::reconnecting', { attempt: this.reconnectAttempts });\n          }, delay);\n        } else {\n          if (this.reconnectAttempts >= this.maxReconnectAttempts) {\n            console.error('‚ùå Max reconnect attempts reached. Giving up.');\n            this.bp?.emit('tweets::reconnect_failed', { pondId: this.pondId });\n          }\n        }\n      };\n\n      const onError = (event) => {\n        console.error('‚ùå WebSocket error:', event);\n        this.bp?.emit('tweets::error', { error: 'WebSocket error', event });\n        ws.close(1000, 'Error occurred');\n        reject(new Error('WebSocket connection failed'));\n      };\n\n      // Attach handlers\n      ws.addEventListener('open', onOpen);\n      ws.addEventListener('message', onMessage);\n      ws.addEventListener('close', onClose);\n      ws.addEventListener('error', onError);\n\n      // Store methods for teardown\n      this._teardown = () => {\n        ws.removeEventListener('open', onOpen);\n        ws.removeEventListener('message', onMessage);\n        ws.removeEventListener('close', onClose);\n        ws.removeEventListener('error', onError);\n      };\n    });\n  }\n\n  disconnect() {\n    if (this.ws) {\n      this.isIntentionallyClosed = true;\n      this._teardown?.();\n      this.ws.close(1000, 'Normal closure');\n      this.bp?.emit('tweets::closed', { pondId: this.pondId });\n      this.ws = null;\n      console.log('üõë WebSocket disconnected from Tweets');\n    }\n  }\n\n  send(data) {\n    if (this.ws && this.ws.readyState === WebSocket.OPEN) {\n      const msg = typeof data === 'string' ? data : JSON.stringify(data);\n      this.ws.send(msg);\n    } else {\n      console.warn('‚ö†Ô∏è Tried to send message but WebSocket is not open');\n    }\n  }\n\n\n  async fetchTweets (context) {\n    console.log('Requesting tweets feed from server...', context);\n     // sends a listActivePonds action message to the server\n    if (this.ws && this.ws.readyState === WebSocket.OPEN) {\n      this.send({ action: 'fetchTweets', authorId: context });\n    } else {\n      console.warn('‚ö†Ô∏è Tried to get tweets feed but WebSocket is not open');\n    }\n\n  }\n\n  async postTweet ({ content }) {\n    console.log('Posting new tweet to server...');\n     // sends a listActivePonds action message to the server\n    if (this.ws && this.ws.readyState === WebSocket.OPEN) {\n      this.send({ action: 'postTweet', content });\n    } else {\n      console.warn('‚ö†Ô∏è Tried to post tweet but WebSocket is not open');\n    }\n  }\n\n  async likeTweet ({ tweetId }) {\n    console.log('Liking tweet on server...');\n     // sends a listActivePonds action message to the server\n    if (this.ws && this.ws.readyState === WebSocket.OPEN) {\n      this.send({ action: 'likeTweet', tweetId });\n    } else {\n      console.warn('‚ö†Ô∏è Tried to like tweet but WebSocket is not open');\n    }\n  }\n\n  async deleteTweet (tweetId) {\n    if (this.ws && this.ws.readyState === WebSocket.OPEN) {\n      this.send({ action: 'deleteTweet', tweetId });\n    } else {\n      console.warn('‚ö†Ô∏è Tried to delete tweet but WebSocket is not open');\n    }\n  }\n\n\n}","// Function to remove outer <p> tags\nexport default function parseMarkdownWithoutPTags(markdown) {\n  if (!markdown) return ''; // empty text\n\n\n  if (isEmojiOnly(markdown)) {\n    return renderBigEmojiHTML(markdown);\n  }\n\n  // Supported colors and styles\n  const supportedColors = ['red', 'blue', 'green', 'yellow', 'purple', 'orange', 'black', 'white', 'gray', 'cyan', 'magenta', 'pink'];\n  const supportedStyles = ['bold', 'italic', 'underline', 'strike', 'blink', 'reverse', 'hidden', 'dim', 'rainbow'];\n\n  // Custom renderer for links to add target=\"_blank\"\n  const linkExtension = {\n    name: 'link',\n    level: 'inline',\n    renderer(token) {\n      // Ensure href is properly encoded\n      const href = token.href.replace(/\"/g, '&quot;');\n      // Add target=\"_blank\" and rel=\"noopener\" for security\n      return `<a href=\"${href}\" target=\"_blank\" rel=\"noopener\">${this.parser.parseInline(token.tokens)}</a>`;\n    }\n  };\n\n  const styleExtension = {\n    name: 'style',\n    level: 'inline',\n\n    tokenizer(src) {\n      const match = /^((?:\\w+\\.)*\\w+)\\(\\s*([\\s\\S]+?)\\s*\\)/.exec(src);\n      if (match) {\n        const raw = match[0];\n        const modifiers = match[1].split('.');\n        const text = match[2];\n\n        const isValid = modifiers.every(mod => supportedColors.includes(mod) || supportedStyles.includes(mod));\n        if (!isValid) return;\n\n        return {\n          type: 'style',\n          raw,\n          modifiers,\n          text,\n          tokens: this.lexer.inlineTokens(text)\n        };\n      }\n    },\n    renderer(token) {\n      let content = this.parser.parseInline(token.tokens);\n\n      // Apply modifiers in reverse order to maintain proper nesting\n      token.modifiers.reverse().forEach(mod => {\n        if (supportedColors.includes(mod)) {\n          content = `<span class=\"message-decoration-color-${mod}\">${content}</span>`;\n        } else if (mod === 'bold') {\n          content = `<strong class=\"message-decoration-bold\">${content}</strong>`;\n        } else if (mod === 'italic') {\n          content = `<em class=\"message-decoration-italic\">${content}</em>`;\n        } else if (mod === 'underline') {\n          content = `<u class=\"message-decoration-underline\">${content}</u>`;\n        } else if (mod === 'strike') {\n          content = `<s class=\"message-decoration-strike\">${content}</s>`;\n        } else if (mod === 'blink') {\n          content = `<span class=\"message-decoration-blink\">${content}</span>`;\n        } else if (mod === 'reverse') {\n          content = content.split('').reverse().join('');\n        } else if (mod === 'hidden') {\n          content = `<span class=\"message-decoration-hidden\">${content}</span>`;\n        } else if (mod === 'dim') {\n          content = `<span class=\"message-decoration-dim\">${content}</span>`;\n        } else if (mod === 'rainbow') {\n          content = `<span class=\"message-decoration-rainbow\">${content}</span>`;\n        }\n      });\n\n      return content;\n    },\n\n\n    walkTokens(token) {\n      if (token.type === 'style') {\n        console.log(`Detected style token: ${token.modifiers.join('.')}`);\n      }\n    }\n  };\n\n  marked.use({ extensions: [styleExtension, linkExtension] });\n\n  let html;\n  try {\n    html = marked.parse(markdown);\n  } catch (error) {\n    html = markdown;\n  }\n\n  // register the hook once at module init\n  if (!DOMPurify.__added_anchor_hook) {\n    DOMPurify.addHook('afterSanitizeAttributes', function (node) {\n      // only run for <a>\n      if (node.tagName && node.tagName.toLowerCase() === 'a') {\n        const href = node.getAttribute('href') || '';\n\n        // Validate URL scheme (same rules as ALLOWED_URI_REGEXP)\n        try {\n          const url = new URL(href, 'https://example.com'); // base for relative URLs\n          if (!/^(https?:|mailto:|tel:)/i.test(url.protocol)) {\n            // Disallow link entirely (or remove href)\n            node.removeAttribute('href');\n            node.removeAttribute('target');\n            node.removeAttribute('rel');\n            return;\n          }\n        } catch (e) {\n          // malformed -> remove\n          node.removeAttribute('href');\n          node.removeAttribute('target');\n          node.removeAttribute('rel');\n          return;\n        }\n\n        // Ensure anchors open safely in a new tab\n        // We force _blank and ensure rel contains noopener noreferrer\n        node.setAttribute('target', '_blank');\n\n        const existing = (node.getAttribute('rel') || '').split(/\\s+/).filter(Boolean);\n        if (!existing.includes('noopener')) existing.push('noopener');\n        if (!existing.includes('noreferrer')) existing.push('noreferrer');\n        node.setAttribute('rel', existing.join(' '));\n      }\n    });\n    DOMPurify.__added_anchor_hook = true;\n  }\n\n  // sanitize: allow the tags/attrs you need, and restrict allowed URI schemes\n  const clean = DOMPurify.sanitize(html, {\n    ALLOWED_TAGS: [\n      'a', 'span', 'strong', 'em', 'u', 's', 'div', 'br', 'p', 'h1', 'h2', 'h3', 'h4', 'h5', 'h6',\n      'ul', 'ol', 'li', 'code', 'pre', 'blockquote', 'img'\n    ],\n    ALLOWED_ATTR: [\n      'href', 'target', 'rel', 'class', 'data-char-index', 'src'\n    ],\n    FORCE_BODY: true,\n    KEEP_CONTENT: true,\n    SANITIZE_DOM: true,\n    // RETURN_TRUSTED_TYPE: true, // progressive support for supporting Trusted Types, works when available\n    // this will return DOM if supported, otherwise returns string, TODO: would need to handle both cases\n    // allow only http(s), mailto, tel for href/src\n    ALLOWED_URI_REGEXP: /^(?:(https?|mailto|tel):|\\/)/i\n  });\n\n  return clean.replace(/^<p>(.*?)<\\/p>\\s*$/s, '$1');\n  // Explanation:\n  // ^<p>       ‚Üí Matches the opening <p> at the start\n  // (.*?)      ‚Üí Captures the content inside (non-greedy)\n  // <\\/p>\\s*$  ‚Üí Matches the closing </p> with optional trailing whitespace\n  // $1         ‚Üí Returns only the captured content\n}\n\n// Shared helper: Split emoji-aware graphemes\nfunction splitEmojiGraphemes(text) {\n  const splitter = new GraphemeSplitter();\n  return splitter.splitGraphemes(text.trim());\n}\n\n// Strip variation selector (U+FE0F) for matching against EMOJIS\nfunction normalizeEmoji(str) {\n  return str.replace(/\\uFE0F/g, '');\n}\n\nfunction isEmojiOnly(text) {\n  if (!text) return false;\n\n  // if text is longer than 7 length, return false immediately\n  if (text.length > 7) return false;\n\n  const graphemes = splitEmojiGraphemes(text);\n  const emojiList = new Set(Object.keys(EMOJIS));\n\n  const emojis = graphemes.filter(g =>\n    emojiList.has(g) || emojiList.has(normalizeEmoji(g))\n  );\n\n  return emojis.length > 0 &&\n    emojis.length <= 7 &&\n    emojis.join('') === text.trim();\n}\n\n// Render big emoji HTML\nfunction renderBigEmojiHTML(text) {\n  const graphemes = splitEmojiGraphemes(text);\n  return `<div class=\"emoji-only\">` +\n    graphemes.map(g => `<span class=\"big-emoji\">${g}</span>`).join('') +\n    `</div>`;\n}","/* Tweets.js - Marak Squires 2025 - BuddyPond */\nimport client from './lib/client.js';\nimport wsClient from './lib/wsclient.js';\nimport eventBind from './lib/eventBind.js';\nimport render from './lib/render.js';\nimport renderTweet from './lib/renderTweet.js';\n\nexport default class Tweets {\n  constructor(bp, options = {}) {\n    this.bp = bp;\n    this.icon = 'desktop/assets/images/icons/icon_tweets_64.png';\n    return this;\n  }\n\n  async init() {\n    this.html = await this.bp.load('/v5/apps/based/tweets/tweets.html');\n    await this.bp.load('/v5/apps/based/tweets/tweets.css');\n    return 'loaded tweets app';\n  }\n\n  async open(options = {}) {\n\n    if (!this.tweetsWindow) {\n      this.tweetsWindow = this.bp.apps.ui.windowManager.createWindow({\n        id: 'tweets',\n        title: 'Tweets',\n        icon: this.icon,\n        x: 250,\n        y: 75,\n        width: 800,\n        height: 400,\n        minWidth: 200,\n        minHeight: 200,\n        parent: $('#desktop')[0],\n        content: '',\n        resizable: true,\n        minimizable: true,\n        maximizable: true,\n        closable: true,\n        focusable: true,\n        maximized: false,\n        minimized: false,\n        onClose: () => {\n          if (this.wsClient) {\n            this.wsClient.disconnect();\n            this.wsClient = null;\n          }\n          // remove all event listeners\n          this.bp.off('tweets::connected', 'fetch-tweets-feed');\n          this.bp.off('tweets::feed', 'render-tweets-feed');\n          this.bp.off('tweets::removed', 'remove-tweet');\n          this.bp.off('tweets::error', 'tweets-error');\n          this.tweetsWindow = null\n          // remove tweets-reply-modal if exists\n          $('.tweets-reply-modal').remove();\n        }\n      });\n      this.tweetsWindow.loggedIn = true;\n    }\n\n    if (options.context === 'default' || !options.context || options.context === 'undefined') {\n      options.context = 'all';\n    }\n\n    let renderType = 'author';\n    if (options.type === 'post') {\n      renderType = 'post';\n    }\n\n    this.tweetsWindow.context = options.context || 'all';\n\n    if (!this.wsClient) {\n\n      this.wsClient = new wsClient({ bp: this.bp });\n      this.bp.on('tweets::connected', 'fetch-tweets-feed', (data) => {\n        console.log('Tweets WebSocket connected event received in Tweets app', data);\n        console.log('Tweets WebSocket connected');\n        this.wsClient.fetchTweets(this.tweetsWindow.context);\n      });\n\n      this.bp.on('tweets::feed', 'render-tweets-feed', (tweets) => {\n        console.log('Tweets feed event received in Tweets app', tweets);\n        if (this.tweetsWindow) {\n          this.render(tweets, this.tweetsWindow.context, 'author', this.tweetsWindow);\n        }\n      });\n\n      this.bp.on('tweets::removed', 'remove-tweet', (tweetId) => {\n        console.log('Tweet removed event received in Tweets app', tweetId);\n        if (this.tweetsWindow) {\n          // find the tweet by tweetId and remove\n          $(`[data-tweet=\"${tweetId}\"]`, this.tweetsWindow.content).remove();\n          console.log('remove the tweet', tweetId);\n        }\n      });\n\n      this.bp.on('tweets::error', 'tweets-error', (error) => {\n        console.error('Tweets error event received in Tweets app', error);\n        if (this.tweetsWindow) {\n          const errorDiv = $('.tweets-error', this.tweetsWindow.content);\n          if (errorDiv) {\n            errorDiv.html(`<div class=\"error\">Error: ${error.error}</div>`);\n            setTimeout(() => {\n              errorDiv.html('');\n            }, 5000);\n          }\n        }\n      });\n\n      console.log('Connecting to Tweets WebSocket...');\n      await this.wsClient.connect();\n\n    } else {\n      // fetch tweets feed for current context\n      this.wsClient.fetchTweets(this.tweetsWindow.context);\n    }\n\n\n    $(this.tweetsWindow.content).html(this.html);\n\n    this.eventBind(options.context, renderType, this.tweetsWindow);\n\n    return this.tweetsWindow;\n  }\n\n}\n\nTweets.prototype.client = client;\nTweets.prototype.eventBind = eventBind;\nTweets.prototype.render = render;\nTweets.prototype.renderTweet = renderTweet;","// eventBind.js\nexport default function eventBind(context, renderType, tweetsWindow) {\n  const MAX_CHARS = 280;\n  const holder = $('.tweets-holder', tweetsWindow.content);\n\n  // --- Circular character counter setup ---\n  function setupCharCounter(inputEl, container) {\n    if (container.find('.tweets-char-count').length === 0) {\n      container.prepend(`\n        <div class=\"tweets-char-count\" title=\"Character count\">\n          <svg width=\"40\" height=\"40\">\n            <circle class=\"bg\" r=\"18\" cx=\"20\" cy=\"20\" stroke=\"#eee\" stroke-width=\"3\" fill=\"none\"/>\n            <circle class=\"progress\" r=\"18\" cx=\"20\" cy=\"20\" stroke=\"#1DA1F2\" stroke-width=\"3\" fill=\"none\"\n              stroke-dasharray=\"${2 * Math.PI * 18}\" stroke-dashoffset=\"${2 * Math.PI * 18}\"\n              stroke-linecap=\"round\"/>\n          </svg>\n        </div>\n      `);\n    }\n\n    const circle = container.find('.progress');\n    const radius = 18;\n    const circumference = 2 * Math.PI * radius;\n\n    inputEl.on('input', () => {\n      const len = inputEl.val().length;\n      const percent = Math.min(len / MAX_CHARS, 1);\n      const offset = circumference - percent * circumference;\n\n      circle.css('stroke-dashoffset', offset);\n      circle.css('stroke', len > MAX_CHARS ? 'red' : '#1DA1F2');\n    });\n  }\n\n  // --- Helpers ---\n  async function handleCreatePost({ client, tweetsWindow, renderType }) {\n    const input = $('.tweets-input', tweetsWindow.content);\n    const errorEl = $('.tweets-error', tweetsWindow.content);\n    const content = input.val();\n\n    errorEl.text('');\n\n    if (content.length > MAX_CHARS) {\n      errorEl.text(`Post too long! Max ${MAX_CHARS} characters.`);\n      return;\n    }\n    this.wsClient.postTweet({\n      content\n    });\n    input.val('');\n    /*\n    try {\n      await client.apiRequest('/posts', 'POST', {\n        userId: buddypond.me,\n        content\n      });\n      input.val('');\n      await this.render(context, renderType, tweetsWindow);\n    } catch (err) {\n      console.error('Error creating post:', err);\n      errorEl.text(`Error: ${err.message}`);\n    }\n      */\n  }\n\n  async function createReplyPost({ client, tweetsWindow, renderType, tweetId, content }) {\n    if (!content) return;\n    if (content.length > MAX_CHARS) throw new Error(`Reply too long! Max ${MAX_CHARS} characters.`);\n\n    this.wsClient.send({ action: 'postReply', parentId: tweetId, content });\n\n    /*\n    await client.apiRequest(`/posts/${tweetId}/replies`, 'POST', {\n      userId: buddypond.me,\n      content\n    });\n    await this.render(context, renderType, tweetsWindow);\n    */\n  }\n\n  // --- Delegated events from .tweets-holder ---\n  holder.on('click', '.tweets-button', async (e) => {\n    e.preventDefault();\n    await handleCreatePost.call(this, { client: this.client, tweetsWindow, renderType });\n  });\n\n  holder.on('keypress', '.tweets-input', async (e) => {\n    if (e.key === 'Enter' && !e.shiftKey) {\n      e.preventDefault();\n      await handleCreatePost.call(this, { client: this.client, tweetsWindow, renderType });\n    }\n  });\n\n  holder.on('click', '.tweets-delete', async (e) => {\n    e.preventDefault();\n    if (!confirm('Are you sure you want to delete this tweet?')) return;\n\n    const tweetId = $(e.target).data('id');\n    //await this.client.apiRequest(`/posts/${tweetId}`, 'DELETE');\n    this.wsClient.deleteTweet(tweetId);\n    // remove the tweet from the DOM immediately\n    $(`[data-tweet=\"${tweetId}\"]`, tweetsWindow.content).remove();\n    //await this.render(buddypond.me, renderType, tweetsWindow);\n  });\n\n  holder.on('click', '.tweets-like', async (e) => {\n    e.preventDefault();\n    const tweetId = $(e.target).data('id');\n    this.wsClient.send({ action: 'likeTweet', tweetId });\n    //await this.client.apiRequest(`/posts/${tweetId}/likes`, 'POST', { userId: buddypond.me });\n    //await this.render(context, renderType, tweetsWindow);\n  });\n\n  /*\n  holder.on('click', '.tweets-retweet', async (e) => {\n    e.preventDefault();\n    const tweetId = $(e.target).data('id');\n    await this.client.apiRequest(`/posts/${tweetId}/repost`, 'POST', { userId: buddypond.me });\n    await this.render(buddypond.me, renderType, tweetsWindow);\n  });\n  */\n\n  holder.on('click', '.tweets-reply', async (e) => {\n    e.preventDefault();\n    const tweetId = $(e.target).data('id');\n\n    $('.tweets-reply-modal').remove();\n\n    //const tweetData = await this.client.apiRequest(`/posts/${tweetId}?reply_count=1`);\n    //const originalPostHtml = this.renderTweet(tweetData, tweetsWindow, { noToolbar: true, noRender: true });\n    // <div class=\"tweets-reply-modal-original\">${originalPostHtml}</div>\n\n    const modal = $(`\n      <div class=\"tweets-reply-modal\">\n        <div class=\"tweets-reply-modal-content desktop-section\">\n          <div class=\"tweets-reply-modal-header\">\n            <h3>Reply</h3>\n            <span class=\"tweets-reply-modal-close\">&times;</span>\n          </div>\n          <textarea class=\"tweets-reply-modal-input\" placeholder=\"Write your reply...\"></textarea>\n          <div class=\"tweets-error\"></div>\n          <div class=\"tweets-composer-controls\">\n            <div class=\"tweets-char-counter\"></div>\n            <button class=\"tweets-reply-modal-submit\">Reply</button>\n          </div>\n        </div>\n      </div>\n    `);\n\n    $('body').append(modal);\n    const input = modal.find('.tweets-reply-modal-input');\n    input.focus();\n\n    // setup counter for reply\n    setupCharCounter(input, modal.find('.tweets-char-counter'));\n\n    modal.find('.tweets-reply-modal-close').on('click', () => modal.remove());\n\n    async function submitReply() {\n      const replyContent = input.val().trim();\n      if (!replyContent) return;\n\n      const errorEl = modal.find('.tweets-error');\n      errorEl.text('');\n\n      try {\n        await createReplyPost.call(this, {\n          client: this.client,\n          tweetsWindow,\n          renderType,\n          tweetId,\n          content: replyContent\n        });\n        modal.remove();\n      } catch (err) {\n        errorEl.text(`Error: ${err.message}`);\n      }\n    }\n\n    modal.find('.tweets-reply-modal-submit').on('click', submitReply.bind(this));\n    input.on('keypress', (e) => {\n      if (e.key === 'Enter' && !e.shiftKey) {\n        e.preventDefault();\n        submitReply.call(this);\n      }\n    });\n  });\n\n  // --- Setup main composer counter once ---\n  setupCharCounter($('.tweets-input', tweetsWindow.content), $('.tweets-composer-controls', tweetsWindow.content));\n}\n","export default async function render(tweets, context, type = 'author', tweetsWindow) {\n  if (this.bp.me === 'Guest' || !this.bp.me) {\n    $('.loggedIn', this.tweetsWindow.content).hide();\n    $('.loggedOut', this.tweetsWindow.content).show();\n  } else {\n    $('.loggedIn', this.tweetsWindow.content).show();\n    $('.loggedOut', this.tweetsWindow.content).hide();\n  }\n  /*\n  let tweets;\n\n  if (type === 'post' && context) {\n    // fetch single tweet with replies from the backend\n    tweets = await this.client.apiRequest(`/posts/${context}`);\n    tweets = [tweets]; // wrap in array for uniform processing\n  } else {\n    // fetch tweets from the backend\n    if (context !== 'all') {\n      // clear all tweets\n      // $('.tweets-timeline', tweetsWindow.content).empty();\n      tweets = await this.client.apiRequest(`/feed/${context}`);\n    } else {\n      tweets = await this.client.apiRequest('/feed');\n    }\n\n  }\n  */\n\n  // console.log('Fetched tweets:', tweets);\n\n  const tweetList = $('.tweets-timeline', tweetsWindow.content);\n  // tweetList.empty();\n  tweets.forEach(tweet => {\n    tweetList.prepend(this.renderTweet(tweet, tweetsWindow))\n  })\n\n}\n","import parseMarkdownWithoutPTags from '../../buddylist/lib/message/parseMarkdownWithoutPTags.js';\n\nexport default function renderTweet(tweet, tweetsWindow, options = {}) {\n  let showReplyButton = true;\n  let replyButton = ``;\n  let deleteButton = ``;\n  let likeButton = `<a href=\"#\" class=\"tweets-like\" data-id=\"${tweet.id}\">Like (${tweet.like_count || 0})</a>`;\n\n  // TODO: we need to check if the tweet.parent_id exists in the DOM, if so, we need to nest this tweet under that parent as a reply\n\n  // Check if tweet already exists in DOM\n  let existingTweet = $(`[data-tweet=\"${tweet.id}\"]`, tweetsWindow.content);\n  if (options.noRender !== true && existingTweet.length > 0) {\n    // --- Differential update ---\n    existingTweet.attr('data-likes', tweet.like_count || 0);\n    existingTweet.attr('data-replies', tweet.reply_count || 0);\n\n    $('.tweets-like', existingTweet).html(`Like (${tweet.like_count || 0})`);\n    $('.tweets-reply', existingTweet).html(`Reply (${tweet.reply_count || 0})`);\n\n    tweet.content = parseMarkdownWithoutPTags(tweet.content);\n\n    // update content in case it changed (edits)\n    $('.tweets-content', existingTweet).html(tweet.content);\n    $('.tweets-meta', existingTweet).html(new Date(tweet.ctime).toLocaleString());\n\n    // --- Handle replies differential update ---\n    if (options.noRender !== true && tweet.replies && tweet.replies.length > 0) {\n      let repliesContainer = existingTweet.children('.tweets-replies');\n      if (repliesContainer.length === 0) {\n        repliesContainer = $('<div class=\"tweets-replies\"></div>');\n        existingTweet.append(repliesContainer);\n      }\n\n      // Render replies\n      const seenReplies = new Set();\n      tweet.replies.forEach(reply => {\n        seenReplies.add(reply.id);\n        const replyHtml = this.renderTweet(reply, tweetsWindow, options);\n        if (replyHtml) {\n          repliesContainer.append(replyHtml);\n        }\n      });\n\n      // Remove replies that no longer exist\n      repliesContainer.children('[data-tweet]').each((_, el) => {\n        const replyId = $(el).attr('data-tweet');\n        if (!seenReplies.has(replyId)) {\n          $(el).remove();\n        }\n      });\n    }\n\n    return ''; // stop here, already updated DOM\n  }\n\n  // --- New Tweet ---\n  if (!tweet.parent_id) {\n    replyButton = `<a href=\"#\" class=\"tweets-reply\" data-id=\"${tweet.id}\">Reply (${tweet.reply_count || 0})</a>`;\n  }\n\n  if (tweet.author === this.bp.me || this.bp.me === 'Marak') {\n    deleteButton = `<a href=\"#\" class=\"tweets-delete\" data-id=\"${tweet.id}\">Delete</a>`;\n  }\n\n  if (options.noToolbar) {\n    replyButton = ``;\n    deleteButton = ``;\n    likeButton = ``;\n  }\n\n  let $tweet = $(`\n  <div class=\"tweets-post desktop-section\" data-tweet=\"${tweet.id}\" data-likes=\"${tweet.like_count || 0}\" data-replies=\"${tweet.reply_count || 0}\">\n    <div class=\"tweets-author\">\n      <a href=\"#\" class=\"open-app\" data-app=\"tweets\" data-context=\"${tweet.author}\">\n        @${tweet.author}\n      </a>\n    </div>\n    <div class=\"tweets-content\"></div>\n    <div class=\"tweets-meta\"></div>\n    <div class=\"tweets-toolbar\">\n      ${likeButton}\n      ${replyButton}\n      ${deleteButton}\n    </div>\n  </div>\n`);\n\n  // safely insert user content\n  // this will render through the markdown parser + DOMPurify code path\n  // TODO: add ability for \"cards\" same as chat messages\n  tweet.content = parseMarkdownWithoutPTags(tweet.content);\n\n  console.log('Rendering tweet:', tweet);\n\n  $('.tweets-content', $tweet).html(tweet.content);\n  $('.tweets-meta', $tweet).text(new Date(tweet.ctime).toLocaleString());\n\n  // append replies if any\n  if (options.noRender !== true && tweet.replies && tweet.replies.length > 0) {\n    let $replies = $('<div class=\"tweets-replies\"></div>');\n    tweet.replies.forEach(reply => {\n      $replies.append(this.renderTweet(reply, tweetsWindow, options));\n    });\n    $tweet.append($replies);\n  }\n\n  return $tweet;\n\n}\n"],"names":["client","async","uri","method","data","options","headers","Accept","buddypond","me","qtokenid","body","JSON","stringify","url","endpoint","console","log","response","fetch","ok","errorText","text","Error","statusText","json","error","TweetsWebSocketClient","constructor","bp","this","tweetsWsEndpoint","ws","reconnectAttempts","maxReconnectAttempts","maxBackoffDelay","isIntentionallyClosed","connect","Promise","resolve","reject","WebSocket","onOpen","emit","onMessage","event","parse","err","raw","action","tweets","postId","onClose","warn","code","reason","pondId","delay","Math","min","pow","random","floor","setTimeout","catch","attempt","onError","close","addEventListener","_teardown","removeEventListener","disconnect","send","readyState","OPEN","msg","fetchTweets","context","authorId","postTweet","content","likeTweet","tweetId","deleteTweet","parseMarkdownWithoutPTags","markdown","length","graphemes","splitEmojiGraphemes","emojiList","Set","Object","keys","EMOJIS","emojis","filter","g","has","replace","join","trim","isEmojiOnly","map","supportedColors","supportedStyles","linkExtension","name","level","renderer","token","href","parser","parseInline","tokens","styleExtension","tokenizer","src","match","exec","modifiers","split","every","mod","includes","type","lexer","inlineTokens","reverse","forEach","walkTokens","html","marked","use","extensions","DOMPurify","__added_anchor_hook","addHook","node","tagName","toLowerCase","getAttribute","URL","test","protocol","removeAttribute","e","setAttribute","existing","Boolean","push","sanitize","ALLOWED_TAGS","ALLOWED_ATTR","FORCE_BODY","KEEP_CONTENT","SANITIZE_DOM","ALLOWED_URI_REGEXP","GraphemeSplitter","splitGraphemes","Tweets","icon","init","load","open","tweetsWindow","apps","ui","windowManager","createWindow","id","title","x","y","width","height","minWidth","minHeight","parent","$","resizable","minimizable","maximizable","closable","focusable","maximized","minimized","wsClient","off","remove","loggedIn","renderType","on","render","errorDiv","eventBind","prototype","MAX_CHARS","holder","setupCharCounter","inputEl","container","find","prepend","PI","circle","circumference","len","val","percent","offset","css","handleCreatePost","input","errorEl","createReplyPost","parentId","preventDefault","call","key","shiftKey","confirm","target","modal","append","submitReply","replyContent","message","focus","bind","show","hide","tweetList","tweet","renderTweet","replyButton","deleteButton","likeButton","like_count","existingTweet","noRender","attr","reply_count","Date","ctime","toLocaleString","replies","repliesContainer","children","seenReplies","reply","add","replyHtml","each","_","el","replyId","parent_id","author","noToolbar","$tweet","$replies"],"mappings":"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"}