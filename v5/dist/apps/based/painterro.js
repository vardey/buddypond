class e{constructor(e,t={}){return this.bp=e,this.options=t,this}async init(){return"loaded Painterro"}async open(e={}){return e.src&&(this.src=e.src),e.output?this.output=e.output:this.output="localhost",e.context?this.context=e.context:this.context="file-system",this.win=this.bp.window(this.window()),this.win}broadcastChannel(){this.receiver=new BroadcastChannel("buddypond-painterro"),this.bc=new BroadcastChannel("buddypond-desktop"),this.bc.onmessage=async e=>{if(e.data.app,"painterro"===e.data.app&&"save"===e.data.action){console.log("BroadcastChannel save action received",e.data);let t=e.data.image,o=e.data.fileName||buddypond.generateSafeFilename("png"),i=`paints/${o}`;function n(e,t,o){return fetch(e).then((function(e){return e.arrayBuffer()})).then((function(e){return new File([e],t,{type:o})}))}n(t,o,"image/png").then((async e=>{if(e.filePath=i,console.log("File created:",e,e instanceof File),document.createElement("img"),!this.context||!this.output){console.warn("No context or output specified, saving file locally.");let t=document.createElement("a");return t.href=URL.createObjectURL(e),t.download=o,document.body.appendChild(t),t.click(),void document.body.removeChild(t)}let t=e=>{console.log(`Upload progress: ${e}%`)};try{let o=await buddypond.uploadFile(e,t);console.log("Upload successful:",o);let i={to:this.context,from:bp.me,type:this.output,text:o};console.log("sending multimedia message",i),bp.emit("buddy::sendMessage",i),this.close()}catch(e){console.error("Upload failed:",e)}}))}}}window(){return{id:"painterro",title:"Painterro",icon:"desktop/assets/images/icons/icon_painterro_64.webp",x:250,y:75,width:880,height:400,parent:$("#desktop")[0],iframeContent:"/v5/apps/based/painterro/vendor/painterro.html?context="+this.context+"&output="+this.output,resizable:!0,minimizable:!0,maximizable:!0,closable:!0,focusable:!0,maximized:!1,minimized:!1,onLoad:()=>{this.src&&(console.log("requesting painterro to load image",this.src),this.receiver.postMessage({type:"app",app:"painterro",action:"load",src:this.src}))},onOpen:()=>{this.broadcastChannel()},onClose:()=>{}}}close(){this.win&&(this.win.close(),this.win=null),this.bc&&(this.bc.close(),this.bc=null),this.receiver&&(this.receiver.close(),this.receiver=null)}}export{e as default};
//# sourceMappingURL=painterro.js.map
