{"version":3,"file":"buddylist.js","sources":["../../../apps/based/buddylist/lib/renderOrUpdateBuddyInBuddyList.js","../../../apps/based/buddylist/lib/message/parseMarkdownWithoutPTags.js","../../../apps/based/buddylist/lib/message/createChatMessageElement.js","../../../apps/based/buddylist/lib/forbiddenNotes.js","../../../apps/based/buddylist/lib/message/checkForLinksInMessage.js","../../../apps/based/buddylist/lib/message/isValidUrl.js","../../../apps/based/buddylist/lib/message/isValidYoutubeLink.js","../../../apps/based/buddylist/lib/message/isValidGithubLink.js","../../../apps/based/buddylist/lib/message/setupInputEvents.js","../../../apps/based/buddylist/lib/message/setupAutocomplete.js","../../../apps/based/buddylist/lib/ChatWindowButtonBar.js","../../../apps/based/buddylist/lib/message/setupChatWindowButtons.js","../../../apps/based/buddylist/lib/message/populateRoomList.js","../../../apps/based/buddylist/lib/openChatWindow.js","../../../apps/based/buddylist/lib/defaultProfileFiles.js","../../../apps/based/buddylist/lib/generateDefaultProfile.js","../../../apps/based/buddylist/lib/message/bindMessageContextMenu.js","../../../apps/based/buddylist/lib/registerEventHandlers.js","../../../apps/based/buddylist/lib/ws/Client.js","../../../apps/based/buddylist/buddylist.js","../../../apps/based/buddylist/lib/ws/createWebSocketClient.js","../../../apps/based/buddylist/lib/defaultChatWindowButtons.js","../../../apps/based/buddylist/lib/message/renderGeoFlag.js","../../../apps/based/buddylist/lib/message/renderChatMessage.js","../../../apps/based/buddylist/lib/renderBuddyRequests.js","../../../apps/based/buddylist/lib/processProfile.js","../../../apps/based/buddylist/lib/buddylistUIEvents.js","../../../apps/based/buddylist/lib/requestDefaultCoinAllocations.js","../../../apps/based/buddylist/lib/sortBuddyList.js","../../../apps/based/buddylist/lib/showContextMenu.js","../../../apps/based/buddylist/lib/message/createMessageContextMenu.js","../../../apps/based/buddylist/lib/loadUserApps.js","../../../apps/based/buddylist/lib/message/sendMessageHandler.js","../../../apps/based/buddylist/lib/message/showCard.js","../../../apps/based/buddylist/lib/message/scrollToBottom.js","../../../apps/based/buddylist/lib/buddy/defaultAvatarSvg.js","../../../apps/based/buddylist/lib/createBuddyListWindow.js","../../../apps/based/buddylist/lib/logout.js"],"sourcesContent":["// Timeout is for legacy API before websocket connections\n// We should now have a reliable way to track buddy status via websocket disconnect events\n// 15 minute hard-code timeout ( if setStatus() was missed )\nlet buddyTimeoutsInterval = 1000 * 60 * 60 * 5; // 5 hours, shoudn't be needed unless unknown error on server\n\nexport default function renderOrUpdateBuddyInBuddyList(data) {\n  let bp = this.bp;\n  let buddyname = data.name;\n  let buddydata = data.profile;\n\n  this.bp.buddyTimeouts = this.bp.buddyTimeouts || {};\n\n  // console.log('renderOrUpdateBuddyInBuddyList', buddyname, buddydata);\n\n  // Track previous connection status to detect changes\n  let buddyListItems = document.querySelectorAll('.buddylist li');\n  let existingBuddy = Array.from(buddyListItems).find(el => el.dataset.buddy === buddyname);\n  let wasConnected = existingBuddy ? existingBuddy.querySelector('.buddy-status').textContent.includes('🟢') : false;\n\n  // Handle status update only if status field is present\n  if (buddydata.hasOwnProperty('status')) {\n    if (buddydata.status === 'online') {\n      buddydata.isConnected = true;\n    } else {\n      buddydata.isConnected = false;\n    }\n\n    // console.log('isConnected', buddydata.isConnected, buddyname, buddydata.status);\n\n    // Clear the timeout if it exists\n    if (this.bp.buddyTimeouts[buddyname]) {\n      clearTimeout(this.bp.buddyTimeouts[buddyname]);\n      delete this.bp.buddyTimeouts[buddyname];\n    }\n\n    // Remark: Added 5/18/2025: Adds check if user hasn't been online for a while ( this is needed for legacy API )\n    // This may still stay in as CF worker could miss disconnect events\n    // TODO: consider re-implementing a keepAlive ping each 30 minutes\n    let now = new Date().getTime();\n    //console.log('BuddyList: buddydata.utime', buddyname, buddydata.utime, 'now', now);\n    let diff = now - buddydata.utime;\n    //console.log('BuddyList: diff', buddyname, buddydata.utime, diff, buddyTimeoutsInterval);  \n    // console.log('buddydata.utime', buddydata.utime, 'now', now, 'diff', diff);\n    // console.log('BuddyList: diff', buddyname, buddydata.utime, diff, buddyTimeoutsInterval);\n    // If buddy hasn't been online for a while, set them to offline\n    if (buddydata.isConnected && diff > buddyTimeoutsInterval) {\n      // console.log('Setting offline due to timeout', buddyname, buddydata.utime, diff);\n      // TODO: add this back in?\n      buddydata.isConnected = false;\n    }\n\n    /*\n    Remark: Removed 5/17/2025, no longer depending on utime / keepAlives\n    let now = new Date().getTime();\n    let diff = now - buddydata.utime;\n    if (now - buddydata.utime > buddyTimeoutsInterval) {\n      // console.log('Setting offline due to timeout', buddyname, buddydata.utime, diff);\n      buddydata.isConnected = false;\n    }\n    */\n    // Remark: Removed 5/17/2025, no longer depending on utime / keepAlives\n    // We may need to add this back in the future for cases when CF worker abruptly disconnects\n    // This would rely on a ping mechanism to keep the connection alive and update the utime\n    // Set a timeout to mark buddy as offline if they are currently connected\n    /*\n    if (buddydata.isConnected) {\n      this.bp.buddyTimeouts[buddyname] = setTimeout(() => {\n        let _data = {\n          name: buddyname,\n          profile: {\n            buddyname: buddyname,\n            isConnected: false,\n            status: 'offline',\n            utime: new Date().getTime(),\n            dtime: new Date().getTime(),\n            newMessages: false\n          }\n        };\n        renderOrUpdateBuddyInBuddyList.call(this, _data, false);\n      }, buddyTimeoutsInterval * 1.5);\n    }\n    */\n\n    // Play sound based on status change\n    // Don't play sound if buddy is me\n    if (buddyname !== this.bp.me) {\n      if (buddydata.isConnected && !wasConnected) {\n        // compare now time with buddydata.utime\n        // if less than 5 seconds, don't play sound\n        let now = new Date().getTime();\n        let diff = now - buddydata.utime;\n        if (diff > 300) {\n          bp.play('desktop/assets/audio/BUDDY-IN.mp3'); // Buddy comes online\n        }\n      } else if (!buddydata.isConnected && wasConnected) {\n        // Remark: Removed the signout sound as it was too loud / jarring\n        // bp.play('desktop/assets/audio/BUDDY-OUT.wav'); // Buddy goes offline\n      }\n    }\n  }\n\n  // Use existing isConnected if available, otherwise derive from DOM state\n  let isConnected = buddydata.hasOwnProperty('isConnected') ? buddydata.isConnected : wasConnected;\n  // console.log(buddydata);\n  if (buddydata.newMessages && buddydata.newMessages) {\n    isConnected = true;\n    this.bp.apps.buddylist.openChatWindow({ context: buddyname, type: 'buddy' });\n  }\n\n  let connectedStatusIcon = isConnected ? '🟢' : '🟠';\n  let isCalling = buddydata.isCalling ? '<span>📞</span>' : '';\n  let newMessages = buddydata.newMessages ? '<span>💬</span>' : '';\n\n  let lastSeen = buddydata.utime ? buddydata.utime : 0;\n  let lastSeenDate = new Date(lastSeen);\n  let lastSeenString = '';\n\n  try {\n    lastSeenString = 'Last seen: ' + lastSeenDate.toLocaleString('en-US', {\n      year: 'numeric',\n      month: '2-digit',\n      day: '2-digit',\n      hour: '2-digit',\n      minute: '2-digit',\n      second: '2-digit',\n      hour12: true\n    });\n  } catch (err) {\n    console.log('Error formatting last seen date', err);\n  }\n\n  // Update or create buddy list item\n  let buddyListItemEl;\n  if (existingBuddy) {\n    // Update existing element to prevent flicker\n    buddyListItemEl = existingBuddy;\n    buddyListItemEl.dataset.utime = buddydata.utime;\n    buddyListItemEl.title = lastSeenString;\n    buddyListItemEl.querySelector('.buddy-status').innerHTML = `${newMessages}${connectedStatusIcon}${isCalling}`;\n    buddyListItemEl.querySelector('.message-buddy').textContent = buddyname;\n    buddyListItemEl.style.display = buddydata.status === 'hidden' ? 'none' : '';\n  } else {\n    // Create new element if buddy doesn't exist\n    let buddyListItem = `<li data-buddy=\"${buddyname}\" data-utime=\"${buddydata.utime}\" class=\"buddy-message-sender\" title=\"${lastSeenString}\">\n                          <span class=\"buddy-status\">${newMessages}${connectedStatusIcon}${isCalling}</span> \n                          <span data-buddy=\"${buddyname}\" class=\"message-buddy\" href=\"#\" draggable=\"false\">${buddyname}</span>\n                        </li>`;\n    buddyListItemEl = document.createElement('div');\n    buddyListItemEl.innerHTML = buddyListItem;\n    buddyListItemEl = buddyListItemEl.firstChild;\n\n    if (buddydata.status === 'hidden') {\n      buddyListItemEl.style.display = 'none';\n    }\n  }\n\n  if (buddydata.utime) {\n    let formattedDate = DateFormat.format.date(buddydata.utime, 'E MMMM dd, hh:mm:ss a');\n    $(buddyListItemEl).find('.buddy-status').attr('title', formattedDate);\n  }\n\n  // Append new buddy or ensure existing one is in the list\n  if (!existingBuddy) {\n    $('.buddylist').append(buddyListItemEl);\n  }\n\n  // Re-sort the entire buddy list\n  this.sortBuddyList();\n\n  // Add context menu functionality\n  attachContextMenu.call(this, buddyListItemEl);\n}\n\nfunction attachContextMenu(buddyElement) {\n  $(buddyElement).on('contextmenu', (e) => {\n    e.preventDefault();\n    let buddyName = e.target.closest('li').dataset.buddy;\n    this.showContextMenu(e.pageX, e.pageY, buddyName);\n  });\n}","// Function to remove outer <p> tags\nexport default function parseMarkdownWithoutPTags(markdown) {\n  if (!markdown) return ''; // empty text\n\n\n  if (isEmojiOnly(markdown)) {\n    return renderBigEmojiHTML(markdown);\n  }\n\n  // Supported colors and styles\n  const supportedColors = ['red', 'blue', 'green', 'yellow', 'purple', 'orange', 'black', 'white', 'gray', 'cyan', 'magenta', 'pink'];\n  const supportedStyles = ['bold', 'italic', 'underline', 'strike', 'blink', 'reverse', 'hidden', 'dim', 'rainbow'];\n\n  // Custom renderer for links to add target=\"_blank\"\n  const linkExtension = {\n    name: 'link',\n    level: 'inline',\n    renderer(token) {\n      // Ensure href is properly encoded\n      const href = token.href.replace(/\"/g, '&quot;');\n      // Add target=\"_blank\" and rel=\"noopener\" for security\n      return `<a href=\"${href}\" target=\"_blank\" rel=\"noopener\">${this.parser.parseInline(token.tokens)}</a>`;\n    }\n  };\n\n\n  const styleExtension = {\n    name: 'style',\n    level: 'inline',\n\n    tokenizer(src) {\n      const match = /^((?:\\w+\\.)*\\w+)\\(\\s*([\\s\\S]+?)\\s*\\)/.exec(src);\n      if (match) {\n        const raw = match[0];\n        const modifiers = match[1].split('.');\n        const text = match[2];\n\n        const isValid = modifiers.every(mod => supportedColors.includes(mod) || supportedStyles.includes(mod));\n        if (!isValid) return;\n\n        return {\n          type: 'style',\n          raw,\n          modifiers,\n          text,\n          tokens: this.lexer.inlineTokens(text)\n        };\n      }\n    },\n\n    renderer(token) {\n      let content = this.parser.parseInline(token.tokens);\n\n      // Apply modifiers in reverse order to maintain proper nesting\n      token.modifiers.reverse().forEach(mod => {\n        if (supportedColors.includes(mod)) {\n          content = `<span style=\"color: ${mod};\">${content}</span>`;\n        } else if (mod === 'bold') {\n          content = `<strong>${content}</strong>`;\n        } else if (mod === 'italic') {\n          content = `<em>${content}</em>`;\n        } else if (mod === 'underline') {\n          content = `<u>${content}</u>`;\n        } else if (mod === 'strike') {\n          content = `<s>${content}</s>`;\n        } else if (mod === 'blink') {\n          // Using CSS animation instead of deprecated <blink> tag\n          content = `<span style=\"animation: blink 1s step-start infinite;\">${content}</span>`;\n        } else if (mod === 'reverse') {\n          content = content.split('').reverse().join('');\n        } else if (mod === 'hidden') {\n          content = `<span style=\"visibility: hidden;\" onmouseover=\"this.style.visibility='visible'\" onmouseout=\"this.style.visibility='hidden'\">${content}</span>`;\n        } else if (mod === 'dim') {\n          content = `<span style=\"opacity: 0.5;\">${content}</span>`;\n        } else if (mod === 'rainbow') {\n          content = content\n            .split('')\n            .map((char, i) => `<span style=\"color: hsl(${(i * 360) / content.length}, 100%, 50%);\">${char}</span>`)\n            .join('');\n        }\n      });\n\n      return content;\n    },\n\n    walkTokens(token) {\n      if (token.type === 'style') {\n        console.log(`Detected style token: ${token.modifiers.join('.')}`);\n      }\n    }\n  };\n\n  marked.use({ extensions: [styleExtension, linkExtension] });\n\n  let html;\n  try {\n    html = marked.parse(markdown);\n  } catch (error) {\n    html = markdown;\n  }\n\n  return html.replace(/^<p>(.*?)<\\/p>\\s*$/s, '$1');\n  // Explanation:\n  // ^<p>       → Matches the opening <p> at the start\n  // (.*?)      → Captures the content inside (non-greedy)\n  // <\\/p>\\s*$  → Matches the closing </p> with optional trailing whitespace\n  // $1         → Returns only the captured content\n}\n\n// Shared helper: Split emoji-aware graphemes\nfunction splitEmojiGraphemes(text) {\n  const splitter = new GraphemeSplitter();\n  return splitter.splitGraphemes(text.trim());\n}\n\n// Strip variation selector (U+FE0F) for matching against EMOJIS\nfunction normalizeEmoji(str) {\n  return str.replace(/\\uFE0F/g, '');\n}\n\nfunction isEmojiOnly(text) {\n  if (!text) return false;\n\n  // if text is longer than 7 length, return false immediately\n  if (text.length > 7) return false;\n\n  const graphemes = splitEmojiGraphemes(text);\n  const emojiList = new Set(Object.keys(EMOJIS));\n\n  const emojis = graphemes.filter(g => \n    emojiList.has(g) || emojiList.has(normalizeEmoji(g))\n  );\n\n  return emojis.length > 0 &&\n    emojis.length <= 7 &&\n    emojis.join('') === text.trim();\n}\n\n// Render big emoji HTML\nfunction renderBigEmojiHTML(text) {\n  const graphemes = splitEmojiGraphemes(text);\n  return `<div class=\"emoji-only\">` +\n    graphemes.map(g => `<span class=\"big-emoji\">${g}</span>`).join('') +\n    `</div>`;\n}","import renderGeoFlag from './renderGeoFlag.js';\nimport parseMarkdownWithoutPTags from './parseMarkdownWithoutPTags.js';\n\n// Configuration\nconst config = {\n  useMarkdown: true,\n  allowHTML: true,\n};\n\n// New function to create hover menu\n// TODO: remove buttons, just use icons\n// TODO: update bindMessageContextMenu() method to bind to the icons instead of buttons\nfunction createHoverMenu(message) {\n  const hoverMenu = document.createElement('div');\n  hoverMenu.className = \n  'aim-hover-menu';\n\n  const menuItems = [];\n\n  if (message.from === this.bp.me || this.bp.me === 'Marak') { // TODO: admin rbac\n    menuItems.push({ text: 'Edit Message', action: 'edit-message',  icon: 'fa-duotone fa-regular fa-pencil' });\n  }\n\n  menuItems.push({ text: 'Reply Message', action: 'reply-message', icon: 'fa-duotone fa-regular fa-reply' });\n  menuItems.push({ text: '...', action: 'more-options', icon: 'fa-solid fa-regular fa-ellipsis' });\n\n\n  menuItems.forEach(item => {\n    const button = document.createElement('button');\n    button.setAttribute('data-action', item.action);\n    button.className = 'aim-hover-menu-item';\n\n    if (item.icon) {\n      const icon = document.createElement('i');\n      icon.className = item.icon;\n      button.appendChild(icon);\n      button.appendChild(document.createTextNode(' ')); // Add space between icon and text\n    } else {\n      button.appendChild(document.createTextNode(item.text));\n    }\n    // set title hint with item.text  \n    button.setAttribute('title', item.text);\n    hoverMenu.appendChild(button);\n  });\n\n  return hoverMenu;\n}\n\nexport default function createChatMessageElement(message, messageTime, chatWindow, container) {\n  // Create main message container\n  const chatMessage = document.createElement('div');\n  chatMessage.className = 'aim-chat-message';\n  chatMessage.setAttribute('data-id', message.id);\n  chatMessage.setAttribute('data-from', message.from);\n  chatMessage.setAttribute('data-to', message.to);\n  chatMessage.setAttribute('data-type', message.type);\n  chatMessage.setAttribute('data-uuid', message.uuid);\n  chatMessage.setAttribute('data-chat-id', message.chatId);\n\n  // Profile picture (SVG)\n  const profilePicture = document.createElement('div');\n  profilePicture.className = 'aim-profile-picture';\n\n  if (!message.profilePicture) {\n    // check if we happen to have a profilePicture in local cache\n    // this may happen if Randolph or other admin is sending messages on behalf of a user\n    // TODO: better way to do this...\n    if (\n      this.bp.apps.buddylist.data.profileState &&\n      this.bp.apps.buddylist.data.profileState.buddylist &&\n      this.bp.apps.buddylist.data.profileState.buddylist[message.from] && \n      this.bp.apps.buddylist.data.profileState.buddylist[message.from].profile_picture) {\n      message.profilePicture = this.bp.apps.buddylist.data.profileState.buddylist[message.from].profile_picture;\n    }\n\n  }\n\n  if (message.profilePicture) {\n    // use url as profile picture src\n    const img = document.createElement('img');\n    if (window.discordMode) {\n       message.profilePicture =  message.profilePicture.replace('https://files.buddypond.com', bp.config.cdn);\n    }\n    img.src = message.profilePicture;\n    img.alt = `${message.from}'s avatar`;\n    img.className = 'aim-chat-message-profile-picture-img';\n    profilePicture.appendChild(img);\n  } else {\n    const defaultAvatar = this.defaultAvatarSvg(message.from);\n    profilePicture.innerHTML = defaultAvatar;\n  }\n\n  // console.log('profilePicture', profilePicture);\n  profilePicture.alt = `${message.from}'s avatar`;\n\n  // Message content wrapper\n  const contentWrapper = document.createElement('div');\n  contentWrapper.className = 'aim-content-wrapper';\n\n  // Message header (sender + timestamp)\n  const messageHeader = document.createElement('div');\n  messageHeader.className = 'aim-message-header';\n\n  const sender = document.createElement('span');\n  sender.className = 'aim-sender';\n  sender.textContent = message.from === 'anonymous'\n    ? `Anonymous (${message.tripcode || 'tr1pc0d3'})`\n    : message.from;\n\n  const timestamp = document.createElement('span');\n  timestamp.className = 'aim-timestamp';\n  timestamp.textContent = messageTime;\n\n  // Message meta (geoflag + badges placeholder)\n  const messageMeta = document.createElement('div');\n  messageMeta.className = 'aim-message-meta';\n\n  const geoFlag = renderGeoFlag(message);\n  const badgesContainer = document.createElement('span');\n  badgesContainer.className = 'aim-badges';\n\n  messageMeta.appendChild(geoFlag);\n  messageMeta.appendChild(badgesContainer);\n\n  messageHeader.appendChild(sender);\n  messageHeader.appendChild(messageMeta);\n  messageHeader.appendChild(timestamp);\n\n  // Reply indicator (if message is a reply)\n  let replyIndicator = null;\n  if (message.replyto) {\n    const repliedMessage = chatWindow.content.querySelector(\n      `.aim-chat-message[data-uuid=\"${message.replyto}\"]`\n    );\n    if (repliedMessage) {\n      const repliedSender = repliedMessage.querySelector('.aim-sender')?.textContent || 'Unknown';\n      const repliedText = repliedMessage.querySelector('.aim-message-content')?.innerText || '';\n\n      replyIndicator = document.createElement('div');\n      replyIndicator.className = 'aim-reply-indicator';\n      replyIndicator.innerHTML = `\n        <span class=\"aim-reply-sender\">${repliedSender}</span>\n        <span class=\"aim-reply-content\">${repliedText}</span>\n      `;\n\n      // Add click handler to scroll to the replied message\n      const replySender = replyIndicator.querySelector('.aim-reply-sender');\n      replySender.addEventListener('click', () => {\n        repliedMessage.scrollIntoView({ behavior: 'smooth', block: 'center' });\n        repliedMessage.classList.add('aim-highlight');\n        setTimeout(() => repliedMessage.classList.remove('aim-highlight'), 2000);\n      });\n    }\n  }\n\n  // Message content\n  const messageContent = document.createElement('div');\n  messageContent.className = 'aim-message-content';\n\n  const processedText = config.useMarkdown\n    ? parseMarkdownWithoutPTags(message.text)\n    : message.text;\n\n  if (config.allowHTML) {\n    messageContent.innerHTML = processedText;\n  } else {\n    messageContent.textContent = processedText;\n  }\n\n  // Hover menu\n  const hoverMenu = createHoverMenu.call(this, message)\n\n  // Assemble message\n  contentWrapper.appendChild(messageHeader);\n  if (replyIndicator) {\n    contentWrapper.appendChild(replyIndicator);\n  }\n  contentWrapper.appendChild(messageContent);\n  contentWrapper.appendChild(hoverMenu);\n\n  chatMessage.appendChild(profilePicture);\n  chatMessage.appendChild(contentWrapper);\n\n  if (container) { // card container?\n    contentWrapper.appendChild(container);\n  }\n\n  // Image load handler\n  chatMessage.querySelectorAll('img').forEach(img => {\n    img.addEventListener('load', () => {\n      // Implement scrollToBottom when ready\n    });\n  });\n\n  insertChatMessage(chatWindow, message, chatMessage);\n  return chatMessage;\n}\n\n// Remark: Origina unoptimized version, left here for reference\n// TODO: remove this after new code path has been verified in production for some time\n/*\nfunction insertChatMessageLegacy(chatWindow, message, chatMessage) {\n  // console.log('insertChatMessage', chatWindow, message, chatMessage);\n  let aimMessages = chatWindow.content.querySelector('.aim-messages');\n\n  if (message.type === 'pond') {\n    // console.log('Inserting message into pond chat window', message);\n    aimMessages = chatWindow.content.querySelector(`.aim-messages-container[data-context=\"${message.to}\"] .aim-messages`);\n    // console.log('Pond messages container found:', aimMessages);\n  }\n\n  if (!aimMessages) {\n    // TODO: this case should never be hit? investigate why it is being hit sometimes\n    console.log('aim-messages not found. chat window is not yet ready...');\n    return;\n  }\n\n  const allMessages = Array.from(aimMessages.querySelectorAll('.aim-chat-message'));\n  let inserted = false;\n\n  for (const existingMessage of allMessages) {\n    const existingId = parseInt(existingMessage.getAttribute('data-id'), 10);\n    if (message.id < existingId) {\n      // Remark: insertBefore is taking up a lot of CPU time when loading large chat histories\n      aimMessages.insertBefore(chatMessage, existingMessage);\n      inserted = true;\n      break;\n    }\n  }\n\n  if (!inserted) {\n    aimMessages.appendChild(chatMessage);\n  }\n\n  return chatMessage;\n}\n*/\n\n// Remark: new optimized version using binary search, may be able to optimize further\nfunction insertChatMessage(chatWindow, message, chatMessage) {\n  let aimMessages = chatWindow.content.querySelector('.aim-messages');\n\n  if (message.type === 'pond') {\n    aimMessages = chatWindow.content.querySelector(\n      `.aim-messages-container[data-context=\"${message.to}\"] .aim-messages`\n    );\n  }\n\n  if (!aimMessages) {\n    console.log('aim-messages not found. chat window is not yet ready...');\n    return;\n  }\n\n  const children = aimMessages.children;\n  const count = children.length;\n\n  // ✅ Fast path: append if empty or greater than last message ID\n  if (\n    count === 0 ||\n    message.id > parseInt(children[count - 1].getAttribute('data-id'), 10)\n  ) {\n    aimMessages.appendChild(chatMessage);\n    return chatMessage;\n  }\n\n  // ✅ Binary search for insertion point\n  let low = 0;\n  let high = count - 1;\n  let insertBeforeNode = null;\n\n  while (low <= high) {\n    const mid = (low + high) >> 1;\n    const midId = parseInt(children[mid].getAttribute('data-id'), 10);\n\n    if (isNaN(midId)) {\n      console.warn(`Invalid data-id on message node:`, children[mid]);\n      low = mid + 1;\n      continue;\n    }\n\n    if (message.id < midId) {\n      insertBeforeNode = children[mid];\n      high = mid - 1;\n    } else {\n      low = mid + 1;\n    }\n  }\n\n  if (insertBeforeNode) {\n    aimMessages.insertBefore(chatMessage, insertBeforeNode);\n  } else {\n    // fallback, though fast path usually covers this\n    aimMessages.appendChild(chatMessage);\n  }\n\n  return chatMessage;\n}","// contains list of bad words we dont't want the Desktop to render\n// these are stored as Base64 so we don't have to see them introduced into the codebase\n// if you wish to view the list simply run: \"console.log(atob(forbiddenNotes.base64))\" in console\n\nlet forbiddenNotes = {\n  \"base64\": \"WyI0cjVlIiwiNWgxdCIsIjVoaXQiLCJhNTUiLCJhbmFsIiwiYW51cyIsImFyNWUiLCJhcnJzZSIsImFyc2UiLCJhc3MiLCJhc3MtZnVja2VyIiwiYXNzZXMiLCJhc3NmdWNrZXIiLCJhc3NmdWtrYSIsImFzc2hvbGUiLCJhc3Nob2xlcyIsImFzc3dob2xlIiwiYV9zX3MiLCJiIXRjaCIsImIwMGJzIiwiYjE3Y2giLCJiMXRjaCIsImJhbGxiYWciLCJiYWxscyIsImJhbGxzYWNrIiwiYmFzdGFyZCIsImJlYXN0aWFsIiwiYmVhc3RpYWxpdHkiLCJiZWxsZW5kIiwiYmVzdGlhbCIsImJlc3RpYWxpdHkiLCJiaStjaCIsImJpYXRjaCIsImJpdGNoIiwiYml0Y2hlciIsImJpdGNoZXJzIiwiYml0Y2hlcyIsImJpdGNoaW4iLCJiaXRjaGluZyIsImJsb29keSIsImJsb3cgam9iIiwiYmxvd2pvYiIsImJsb3dqb2JzIiwiYm9pb2xhcyIsImJvbGxvY2siLCJib2xsb2siLCJib25lciIsImJvb2IiLCJib29icyIsImJvb29icyIsImJvb29vYnMiLCJib29vb29icyIsImJvb29vb29vYnMiLCJicmVhc3RzIiwiYnVjZXRhIiwiYnVnZ2VyIiwiYnVtIiwiYnVubnkgZnVja2VyIiwiYnV0dCIsImJ1dHRob2xlIiwiYnV0dG11bmNoIiwiYnV0dHBsdWciLCJjMGNrIiwiYzBja3N1Y2tlciIsImNhcnBldCBtdW5jaGVyIiwiY2F3ayIsImNoaW5rIiwiY2lwYSIsImNsMXQiLCJjbGl0IiwiY2xpdG9yaXMiLCJjbGl0cyIsImNudXQiLCJjb2NrIiwiY29jay1zdWNrZXIiLCJjb2NrZmFjZSIsImNvY2toZWFkIiwiY29ja211bmNoIiwiY29ja211bmNoZXIiLCJjb2NrcyIsImNvY2tzdWNrICIsImNvY2tzdWNrZWQgIiwiY29ja3N1Y2tlciIsImNvY2tzdWNraW5nIiwiY29ja3N1Y2tzICIsImNvY2tzdWthIiwiY29ja3N1a2thIiwiY29rIiwiY29rbXVuY2hlciIsImNva3N1Y2thIiwiY29vbiIsImNveCIsImNyYXAiLCJjdW0iLCJjdW1tZXIiLCJjdW1taW5nIiwiY3VtcyIsImN1bXNob3QiLCJjdW5pbGluZ3VzIiwiY3VuaWxsaW5ndXMiLCJjdW5uaWxpbmd1cyIsImN1bnQiLCJjdW50bGljayAiLCJjdW50bGlja2VyICIsImN1bnRsaWNraW5nICIsImN1bnRzIiwiY3lhbGlzIiwiY3liZXJmdWMiLCJjeWJlcmZ1Y2sgIiwiY3liZXJmdWNrZWQgIiwiY3liZXJmdWNrZXIiLCJjeWJlcmZ1Y2tlcnMiLCJjeWJlcmZ1Y2tpbmcgIiwiZDFjayIsImRhbW4iLCJkaWNrIiwiZGlja2hlYWQiLCJkaWxkbyIsImRpbGRvcyIsImRpbmsiLCJkaW5rcyIsImRpcnNhIiwiZGxjayIsImRvZy1mdWNrZXIiLCJkb2dnaW4iLCJkb2dnaW5nIiwiZG9ua2V5cmliYmVyIiwiZG9vc2giLCJkdWNoZSIsImR5a2UiLCJlamFjdWxhdGUiLCJlamFjdWxhdGVkIiwiZWphY3VsYXRlcyAiLCJlamFjdWxhdGluZyAiLCJlamFjdWxhdGluZ3MiLCJlamFjdWxhdGlvbiIsImVqYWt1bGF0ZSIsImYgdSBjIGsiLCJmIHUgYyBrIGUgciIsImY0bm55IiwiZmFnIiwiZmFnZ2luZyIsImZhZ2dpdHQiLCJmYWdnb3QiLCJmYWdncyIsImZhZ290IiwiZmFnb3RzIiwiZmFncyIsImZhbm55IiwiZmFubnlmbGFwcyIsImZhbm55ZnVja2VyIiwiZmFueXkiLCJmYXRhc3MiLCJmY3VrIiwiZmN1a2VyIiwiZmN1a2luZyIsImZlY2siLCJmZWNrZXIiLCJmZWxjaGluZyIsImZlbGxhdGUiLCJmZWxsYXRpbyIsImZpbmdlcmZ1Y2sgIiwiZmluZ2VyZnVja2VkICIsImZpbmdlcmZ1Y2tlciAiLCJmaW5nZXJmdWNrZXJzIiwiZmluZ2VyZnVja2luZyAiLCJmaW5nZXJmdWNrcyAiLCJmaXN0ZnVjayIsImZpc3RmdWNrZWQgIiwiZmlzdGZ1Y2tlciAiLCJmaXN0ZnVja2VycyAiLCJmaXN0ZnVja2luZyAiLCJmaXN0ZnVja2luZ3MgIiwiZmlzdGZ1Y2tzICIsImZsYW5nZSIsImZvb2siLCJmb29rZXIiLCJmdWNrIiwiZnVja2EiLCJmdWNrZWQiLCJmdWNrZXIiLCJmdWNrZXJzIiwiZnVja2hlYWQiLCJmdWNraGVhZHMiLCJmdWNraW4iLCJmdWNraW5nIiwiZnVja2luZ3MiLCJmdWNraW5nc2hpdG1vdGhlcmZ1Y2tlciIsImZ1Y2ttZSAiLCJmdWNrcyIsImZ1Y2t3aGl0IiwiZnVja3dpdCIsImZ1ZGdlIHBhY2tlciIsImZ1ZGdlcGFja2VyIiwiZnVrIiwiZnVrZXIiLCJmdWtrZXIiLCJmdWtraW4iLCJmdWtzIiwiZnVrd2hpdCIsImZ1a3dpdCIsImZ1eCIsImZ1eDByIiwiZl91X2NfayIsImdhbmdiYW5nIiwiZ2FuZ2JhbmdlZCAiLCJnYW5nYmFuZ3MgIiwiZ2F5bG9yZCIsImdheXNleCIsImdvYXRzZSIsImdvZC1kYW0iLCJnb2QtZGFtbmVkIiwiZ29kZGFtbiIsImdvZGRhbW5lZCIsImhhcmRjb3Jlc2V4ICIsImhlbGwiLCJoZXNoZSIsImhvYXIiLCJob2FyZSIsImhvZXIiLCJob21vIiwiaG9yZSIsImhvcm5pZXN0IiwiaG9ybnkiLCJob3RzZXgiLCJqYWNrLW9mZiAiLCJqYWNrb2ZmIiwiamFwIiwiamVyay1vZmYgIiwiamlzbSIsImppeiAiLCJqaXptICIsImppenoiLCJrYXdrIiwia25vYiIsImtub2JlYWQiLCJrbm9iZWQiLCJrbm9iZW5kIiwia25vYmhlYWQiLCJrbm9iam9ja3kiLCJrbm9iam9rZXkiLCJrb2NrIiwia29uZHVtIiwia29uZHVtcyIsImt1bSIsImt1bW1lciIsImt1bW1pbmciLCJrdW1zIiwia3VuaWxpbmd1cyIsImtpdW50IiwibDNpK2NoIiwibDNpdGNoIiwibGFiaWEiLCJsbWZhbyIsImx1c3QiLCJsdXN0aW5nIiwibTBmMCIsIm0wZm8iLCJtNDV0ZXJiYXRlIiwibWE1dGVyYjgiLCJtYTV0ZXJiYXRlIiwibWFzb2NoaXN0IiwibWFzdGVyLWJhdGUiLCJtYXN0ZXJiOCIsIm1hc3RlcmJhdCoiLCJtYXN0ZXJiYXQzIiwibWFzdGVyYmF0ZSIsIm1hc3RlcmJhdGlvbiIsIm1hc3RlcmJhdGlvbnMiLCJtYXN0dXJiYXRlIiwibW8tZm8iLCJtb2YwIiwibW9mbyIsIm1vdGhhZnVjayIsIm1vdGhhZnVja2EiLCJtb3RoYWZ1Y2thcyIsIm1vdGhhZnVja2F6IiwibW90aGFmdWNrZWQgIiwibW90aGFmdWNrZXIiLCJtb3RoYWZ1Y2tlcnMiLCJtb3RoYWZ1Y2tpbiIsIm1vdGhhZnVja2luZyAiLCJtb3RoYWZ1Y2tpbmdzIiwibW90aGFmdWNrcyIsIm1vdGhlciBmdWNrZXIiLCJtb3RoZXJmdWNrIiwibW90aGVyZnVja2VkIiwibW90aGVyZnVja2VyIiwibW90aGVyZnVja2VycyIsIm1vdGhlcmZ1Y2tpbiIsIm1vdGhlcmZ1Y2tpbmciLCJtb3RoZXJmdWNraW5ncyIsIm1vdGhlcmZ1Y2trYSIsIm1vdGhlcmZ1Y2tzIiwibXVmZiIsIm11dGhhIiwibXV0aGFmZWNrZXIiLCJtdXRoYWZ1Y2trZXIiLCJtdXRoZXIiLCJtdXRoZXJmdWNrZXIiLCJuMWdnYSIsIm4xZ2dlciIsIm5hemkiLCJuaWdnM3IiLCJuaWdnNGgiLCJuaWdnYSIsIm5pZ2dhaCIsIm5pZ2dhcyIsIm5pZ2dheiIsIm5pZ2dlciIsIm5pZ2dlcnMiLCJub2IiLCJub2Igam9rZXkiLCJub2JoZWFkIiwibm9iam9ja3kiLCJub2Jqb2tleSIsIm51bWJudXRzIiwibnV0c2FjayIsIm9yZ2FzaW0gIiwib3JnYXNpbXMgIiwib3JnYXNtIiwib3JnYXNtcyAiLCJwMHJuIiwicGF3biIsInBlY2tlciIsInBlbmlzIiwicGVuaXNmdWNrZXIiLCJwaG9uZXNleCIsInBodWNrIiwicGh1ayIsInBodWtlZCIsInBodWtpbmciLCJwaHVra2VkIiwicGh1a2tpbmciLCJwaHVrcyIsInBodXEiLCJwaWdmdWNrZXIiLCJwaW1waXMiLCJwaXNzIiwicGlzc2VkIiwicGlzc2VyIiwicGlzc2VycyIsInBpc3NlcyAiLCJwaXNzZmxhcHMiLCJwaXNzaW4gIiwicGlzc2luZyIsInBpc3NvZmYgIiwicG9vcCIsInBvcm4iLCJwb3JubyIsInBvcm5vZ3JhcGh5IiwicG9ybm9zIiwicHJpY2siLCJwcmlja3MgIiwicHJvbiIsInB1YmUiLCJwdXNzZSIsInB1c3NpIiwicHVzc2llcyIsInB1c3N5IiwicHVzc3lzICIsInJlY3R1bSIsInJldGFyZCIsInJpbWphdyIsInJpbW1pbmciLCJzIGhpdCIsInMuby5iLiIsInNhZGlzdCIsInNjaGxvbmciLCJzY3Jld2luZyIsInNjcm9hdCIsInNjcm90ZSIsInNjcm90dW0iLCJzZW1lbiIsInNleCIsInNoISsiLCJzaCF0Iiwic2gxdCIsInNoYWciLCJzaGFnZ2VyIiwic2hhZ2dpbiIsInNoYWdnaW5nIiwic2hlbWFsZSIsInNoaSsiLCJzaGl0Iiwic2hpdGRpY2siLCJzaGl0ZSIsInNoaXRlZCIsInNoaXRleSIsInNoaXRmdWNrIiwic2hpdGZ1bGwiLCJzaGl0aGVhZCIsInNoaXRpbmciLCJzaGl0aW5ncyIsInNoaXRzIiwic2hpdHRlZCIsInNoaXR0ZXIiLCJzaGl0dGVycyAiLCJzaGl0dGluZyIsInNoaXR0aW5ncyIsInNoaXR0eSAiLCJza2FuayIsInNsdXQiLCJzbHV0cyIsInNtZWdtYSIsInNtdXQiLCJzbmF0Y2giLCJzb24tb2YtYS1iaXRjaCIsInNwYWMiLCJzcHVuayIsInNfaF9pX3QiLCJ0MXR0MWU1IiwidDF0dGllcyIsInRlZXRzIiwidGVleiIsInRlc3RpY2FsIiwidGVzdGljbGUiLCJ0aXQiLCJ0aXRmdWNrIiwidGl0cyIsInRpdHQiLCJ0aXR0aWU1IiwidGl0dGllZnVja2VyIiwidGl0dGllcyIsInRpdHR5ZnVjayIsInRpdHR5d2FuayIsInRpdHdhbmsiLCJ0b3NzZXIiLCJ0dXJkIiwidHc0dCIsInR3YXQiLCJ0d2F0aGVhZCIsInR3YXR0eSIsInR3dW50IiwidHd1bnRlciIsInYxNGdyYSIsInYxZ3JhIiwidmFnaW5hIiwidmlhZ3JhIiwidnVsdmEiLCJ3MDBzZSIsIndhbmciLCJ3YW5rIiwid2Fua2VyIiwid2Fua3kiLCJ3aG9hciIsIndob3JlIiwid2lsbGllcyIsIndpbGx5IiwieHJhdGVkIiwieHh4Il0=\"\n};\n\nforbiddenNotes.randowFunWord = function randowFunWord() {\n  let words = [\"daffodil\", \"chrysanthemum\", \"waffles\", \"puppies\", \"senpai\", \"kohai\", \"rainbow\", \"fluffy\", \"marklar\"];\n  // TODO: use bp.random() in order to get seedable randomness\n  // this will provide consistent results across all client instances\n  var item = words[Math.floor(Math.random() * words.length)];\n  return item;\n}\n\nforbiddenNotes.containsBadWord = function (str) {\n  // Convert input to lowercase for case-insensitive matching\n  const lowerStr = str.toLowerCase();\n  // Check each forbidden word using word boundaries\n  return forbiddenNotes.decoded.some(function (fnote) {\n    // Create a regex with word boundaries for whole-word matching\n    const regex = new RegExp(`\\\\b${fnote}\\\\b`, 'i');\n    const found = regex.test(lowerStr);\n    return found;\n  });\n};\n\nforbiddenNotes.filter = function (str) {\n  forbiddenNotes.decoded.forEach(function (fnote) {\n    str = str.replace(new RegExp(\"\\\\b\" + fnote + \"\\\\b\"), forbiddenNotes.randowFunWord())\n    str = str.replace(new RegExp(\"\\\\b\" + fnote + \"\\\\b\", \"gi\"), forbiddenNotes.randowFunWord())\n  });\n  return str;\n}\n\nforbiddenNotes.decoded = JSON.parse(atob(forbiddenNotes.base64))\n\nexport default forbiddenNotes;\n","// TODO: move all this app specific code *outside* of the buddylist / renderMessage\n// use the system.addMessageProcessor() API instead\n\nimport isValidUrl from './isValidUrl.js';\nimport isValidYoutubeLink from './isValidYoutubeLink.js';\nimport isValidGithubLink from './isValidGithubLink.js';\n\nexport default function checkForLinksInMessage(message) {\n  const text = message.text || '';\n\n  // Basic URL regex — matches http(s) links\n  const urlRegex = /https?:\\/\\/(?:[^\\s()<>\\[\\]{}\"']+|\\([^\\s()]*?\\))+/gi;\n  let match = text.match(urlRegex);\n  // match = [message.text];\n\n  if (match && isValidUrl(match[0])) {\n    let contentUrl = match[0];\n    // console.log('Found URL in message:', contentUrl);\n    message.card = {\n      url: contentUrl,\n      type: 'website',\n    };\n\n    // Determine file type from extension (ignoring query strings and hashes)\n    try {\n      const urlObj = new URL(contentUrl);\n      const pathname = urlObj.pathname; // just \"/image.png\" part\n      const ext = pathname.split('.').pop().toLowerCase();\n      if (ext) {\n        if (buddypond.supportedImageTypesExt.includes(ext)) {\n          message.card.type = 'image';\n        } else if (buddypond.supportedAudioTypesExt.includes(ext)) {\n          message.card.type = 'audio';\n        } else if (buddypond.supportedVideoTypesExt.includes(ext)) {\n          message.card.type = 'video';\n        }\n      }\n    } catch (err) {\n      console.warn(\"Invalid URL:\", contentUrl, err);\n    }\n\n    // YouTube link handling\n    if (isValidYoutubeLink(contentUrl)) {\n      const videoId = new URL(contentUrl).searchParams.get('v');\n      if (videoId) {\n        message.card.type = 'youtube';\n        message.card.thumbnail = `https://img.youtube.com/vi/${videoId}/0.jpg`;\n        message.card.context = videoId;\n      }\n    }\n\n    // GitHub link handling\n    if (isValidGithubLink(contentUrl)) {\n      message.card.type = 'github';\n      const githubRegex = /^https?:\\/\\/github\\.com\\/([^\\/]+)\\/([^\\/]+)\\/blob\\/([^\\/]+)\\/(.+)$/;\n      const match = contentUrl.match(githubRegex);\n      if (match) {\n        message.card.owner = match[1];\n        message.card.repo = match[2];\n        message.card.filename = match[4];\n      } else {\n        console.error(\"Invalid GitHub URL format.\");\n      }\n    }\n  }\n}\n","export default function isValidUrl(messageText) {\n    if (!messageText) return false;\n  \n    messageText = messageText.trim(); // Trim whitespace from both ends\n  \n    try {\n      const url = new URL(messageText);\n  \n      // Ensure the URL has http or https protocol\n      if (url.protocol === \"http:\" || url.protocol === \"https:\") {\n        // console.log('This is a valid URL:', url.href);\n        return true;\n      }\n  \n      return false; // Invalid if protocol is not http or https\n    } catch (error) {\n      return false; // If an error is thrown, it's not a valid URL\n    }\n  }","export default function checkIsValidYoutubeLink(url) {\n    const regex = /(?:youtube\\.com\\/(?:[^\\/]+\\/.+\\/|(?:v|e(?:mbed)?)\\/|.*[?&]v=)|youtu\\.be\\/)([^\"&?\\/\\s]{11})/;\n    const match = url.match(regex);\n    return match ? match[1] : null; // Return video ID or null\n}\n","export default function isValidGithubLink(url) {\n    const regex = /^https?:\\/\\/github\\.com\\/([^\\/]+)\\/([^\\/]+)\\/blob\\/([^\\/]+)\\/(.+)$/;\n    const match = url.match(regex);\n    return match ? match.slice(1) : null; \n    // Returns [owner, repo, branch, filePath] or null\n}\n","export default function setupInputEvents(windowType, contextName, chatWindow) {\n    const $input = $(\".aim-input\", chatWindow.content);\n    const $form = $(\".message_form\", chatWindow.content);\n    const $sendButton = $(\".aim-send-btn\", chatWindow.content);\n\n    \n    // Trigger autocomplete manually on input\n    let that = this;\n    $input.on(\"input\", function (event) {\n        const $sendButton = $(\".aim-send-btn\", chatWindow.content);\n\n        that.handleEmojiInput(event, $sendButton);\n        const cursorPos = this.selectionStart;\n        const inputValue = $input.val();\n        const context = that.getInputContext(inputValue, cursorPos);\n\n        if (context && ((context.type === 'emoji' && context.text.length >= 2) || context.type === 'command')) {\n            $(this).autocomplete(\"search\", context.text);\n        } else {\n            $(this).autocomplete(\"close\");\n        }\n    });\n\n    $input.on(\"keydown\", (e) => {\n        if (e.which === 13 && e.shiftKey) {\n            const inputValue = $input.val();\n            const cursorPosition = $input[0].selectionStart;\n            const newValue = inputValue.slice(0, cursorPosition) + \"\\n\" + inputValue.slice(cursorPosition);\n            $input.val(newValue);\n            $input[0].setSelectionRange(cursorPosition + 1, cursorPosition + 1);\n            $sendButton.css(\"opacity\", newValue.length > 0 ? 1 : 0.5);\n            return false;\n        }\n\n        // Prevent form submission on Enter when autocomplete is visible\n        if (e.which === 13 && $input.autocomplete(\"widget\").is(\":visible\")) {\n            // check if this is a BS command, if so we do need to submit the form\n            const inputValue = $input.val();\n            // check if inputValue starts with / or \\, if so, run it\n            if (inputValue.startsWith(\"/\") || inputValue.startsWith(\"\\\\\")) {\n                $form.submit();\n                e.preventDefault();\n                return false;\n            }\n            e.preventDefault();\n            return false; // Let jQuery UI handle selection\n        }\n\n        // Prevent focus change on Tab ( with or without autocomplete visible )\n        if (e.which === 9) {\n            e.preventDefault();\n            return false; // Let jQuery UI handle selection\n        }\n\n        if (e.which === 13) {\n            let message = $input.val().replace(/\\n/g, \"<br>\");\n            message = that.replaceShortcodes(message);\n\n            $input.val(message);\n            $form.submit();\n            e.preventDefault();\n            return false;\n        }\n\n        let activeContext = chatWindow.currentActiveContext || contextName;\n\n        this.bp.emit(\"buddy::typing\", {\n            from: this.bp.me,\n            to: activeContext,\n            type: windowType,\n            isTyping: true,\n            ctime: Date.now(),\n        });\n    });\n\n    $input.on(\"keyup\", (e) => {\n        const inputValue = $input.val();\n        $sendButton.css(\"opacity\", inputValue.length > 0 ? 1 : 0.5);\n    });\n}","export default function setupAutocomplete(chatWindow) {\n\n    if (!this.options.autocomplete) return;\n\n    const $input = $(\".aim-input\", chatWindow.content);\n    const $form = $(\".message_form\", chatWindow.content);\n    const $sendButton = $(\".aim-send-btn\", chatWindow.content);\n\n    this.replaceShortcodes = replaceShortcodes.bind(this);\n\n    // Create a lookup map for faster emoji shortcode to Unicode conversion\n    if (!this.emojiMap) {\n         const usedShortcodes = new Set(); // Track used shortcodes to avoid duplicates\n        this.emojiMap = Object.keys(EMOJIS).reduce((map, emoji) => {\n            const aliases = EMOJIS[emoji].filter(isValidShortcode);\n            aliases.forEach(alias => {\n                const shortcode = `:${alias}:`;\n                // Only add if shortcode hasn't been used (prioritize first emoji)\n                if (!usedShortcodes.has(shortcode)) {\n                    map[shortcode] = emoji;\n                    usedShortcodes.add(shortcode);\n                }\n            });\n            return map;\n        }, {});\n    }\n\n    // Prepare autocomplete data for emojis: array of { label, value, emoji, type }\n    if (!this.emojiSuggestions) {\n        this.emojiSuggestions = Object.keys(EMOJIS).reduce((suggestions, emoji) => {\n            const aliases = EMOJIS[emoji].filter(isValidShortcode);\n            aliases.forEach(alias => {\n                suggestions.push({\n                    label: `${emoji} :${alias}:`, // Display: \"🏴‍☠️ :skull_and_crossbones:\"\n                    value: `:${alias}:`, // Insert: \":skull_and_crossbones:\"\n                    emoji: emoji,\n                    type: 'emoji'\n                });\n            });\n            return suggestions;\n        }, []);\n    }\n\n    if (!this.commands) {\n        // Prepare autocomplete data for commands\n        this.commands = Object.keys(this.options.autocomplete).map(command => ({\n            label: `/${command}`,\n            value: `/${command}`,\n            type: 'command'\n        }));\n    }\n\n    this.handleEmojiInput = handleEmojiInput.bind(this);\n\n    // Function to get the partial shortcode or command at the cursor position\n    function getInputContext(text, cursorPos) {\n        const textBeforeCursor = text.slice(0, cursorPos);\n        const textAfterCursor = text.slice(cursorPos);\n\n        // Check for partial or complete emoji shortcode (e.g., \":sku\" or \":skull_and_crossbones:\")\n        const lastColonIndex = textBeforeCursor.lastIndexOf(':');\n        if (lastColonIndex !== -1) {\n            // Extract potential shortcode from last \":\" to next \":\" or cursor\n            let endIndex = cursorPos;\n            const nextColonIndex = text.indexOf(':', cursorPos);\n            if (nextColonIndex !== -1) {\n                // Include trailing \":\" if it forms a valid shortcode\n                const potentialShortcode = text.slice(lastColonIndex, nextColonIndex + 1);\n                if (/^:[a-z0-9_+]+:$/.test(potentialShortcode)) {\n                    endIndex = nextColonIndex + 1;\n                }\n            }\n            const potentialShortcode = text.slice(lastColonIndex, endIndex);\n            // Match partial (\":sku\") or complete (\":skull_and_crossbones:\") shortcode\n            if (/^:[a-z0-9_+]*(?::|$)/.test(potentialShortcode)) {\n                return {\n                    type: 'emoji',\n                    text: potentialShortcode,\n                    startIndex: lastColonIndex,\n                    endIndex: endIndex\n                };\n            }\n        }\n\n        // Check for command (starts with \"/\" or \"\\\")\n        const firstChar = textBeforeCursor.charAt(0);\n        if ([\"/\", \"\\\\\"].includes(firstChar)) {\n            return {\n                type: 'command',\n                text: textBeforeCursor,\n                startIndex: 0,\n                endIndex: cursorPos\n            };\n        }\n        return null;\n    }\n\n    this.getInputContext = getInputContext.bind(this);\n\n    let that = this;\n\n    // Initialize autocomplete for both commands and emojis\n    $input.autocomplete({\n\n        focus: function (event, ui) {\n            // Prevent jQuery UI from inserting `.label` automatically\n            event.preventDefault();\n            return false;\n        },\n\n        source: function (request, response) {\n            const cursorPos = $input[0].selectionStart;\n            const inputValue = $input.val();\n            const context = getInputContext(inputValue, cursorPos);\n\n            if (!context) {\n                response([]);\n                return;\n            }\n\n            if (context.type === 'emoji' && context.text.length >= 2) {\n                const query = context.text.replace(/^:|:$/g, '').toLowerCase();\n                const matches = that.emojiSuggestions.filter(suggestion =>\n                    suggestion.value.toLowerCase().includes(query)\n                ).slice(0, 10);\n                response(matches);\n            } else if (context.type === 'command') {\n                const query = context.text.slice(1).toLowerCase();\n                console.log('Command query:', query);\n                console.log('Available commands:', that.commands);\n                const matches = that.commands.filter(suggestion =>\n                    suggestion.value.toLowerCase().includes(query)\n                ).slice(0, 10);\n                response(matches);\n            } else {\n                response([]);\n            }\n        },\n        select: function (event, ui) {\n            const textarea = $input[0];\n            const cursorPos = textarea.selectionStart;\n            const inputValue = $input.val();\n            const context = getInputContext(inputValue, cursorPos);\n\n            if (context) {\n                // Replace from startIndex to endIndex\n                const before = inputValue.slice(0, context.startIndex);\n                const after = inputValue.slice(context.endIndex);\n                const newValue = before + (ui.item.emoji || ui.item.value) + after;\n                $input.val(newValue);\n\n                // Set cursor after the inserted value\n                const newCursorPos = context.startIndex + ui.item.value.length;\n                textarea.setSelectionRange(newCursorPos, newCursorPos);\n\n                // Trigger input event for emoji replacement (if emoji)\n                if (ui.item.type === 'emoji') {\n                    $input.trigger('input');\n                }\n\n                // Update send button\n                $sendButton.css(\"opacity\", newValue.length > 0 ? 1 : 0.5);\n\n                return false;\n            }\n\n            // Close autocomplete\n            $input.autocomplete(\"close\");\n            return false;\n\n        },\n        minLength: 0,\n        position: { my: \"left bottom\", at: \"left top\", collision: \"none\" },\n        open: function () {\n            $('.ui-autocomplete').css({\n                'max-height': '200px',\n                'overflow-y': 'auto',\n                'z-index': 1000\n            });\n        }\n    });\n}\n\n// Function to validate and normalize a shortcode name\nfunction isValidShortcode(name) {\n    return /^[a-z0-9_+]+$/.test(name) && !name.startsWith(':') && !name.includes(' ');\n}\n\n// Function to replace shortcodes in a string with emojis\nfunction replaceShortcodes(text) {\n    const shortcodeRegex = /:[a-z0-9_+]+:/g;\n    return text.replace(shortcodeRegex, match => this.emojiMap[match] || match);\n}\n\n// Function to handle text area input and replace shortcodes\nfunction handleEmojiInput(event, $sendButton) {\n    const textarea = event.target;\n    const $textarea = $(textarea);\n    const cursorPos = textarea.selectionStart;\n    const originalText = $textarea.val();\n    const newText = replaceShortcodes.call(this, originalText);\n\n    if (newText !== originalText) {\n        $textarea.val(newText);\n        const offset = newText.length - originalText.length;\n        const newCursorPos = cursorPos + offset;\n        textarea.setSelectionRange(newCursorPos, newCursorPos);\n        $sendButton.css(\"opacity\", newText.length > 0 ? 1 : 0.5);\n    }\n}","export default class ChatWindowButtonBar {\n  constructor(bp, options = {}) {\n    this.bp = bp;\n    this.options = options;\n    console.log('ChatWindowButtonBar options', options);\n    // Button objects provided via options\n    const inputButtons = options.buttons || [];\n\n    // Read stored order of button labels\n    const storedOrder = this.bp.settings?.['buttonBar.buttons'];\n\n    if (Array.isArray(storedOrder)) {\n      // Sort input buttons by stored order\n      this.buttons = this.sortButtonsByOrder(inputButtons, storedOrder);\n    } else {\n      this.buttons = inputButtons;\n    }\n\n    this.container = this.render();       // DOM\n    this.enableDragAndDrop();             // jQuery UI sorting\n    return this;\n  }\n\n  render() {\n    const buttonBar = document.createElement('div');\n    buttonBar.classList.add('button-bar');\n\n    // create top-level (root) items\n    this.buttons.forEach(button => {\n      const element = this.createButtonElement(button, true); // <-- pass isRoot = true\n      buttonBar.appendChild(element);\n    });\n\n    return buttonBar;\n  }\n\n  /**\n   * createButtonElement(button, isRoot)\n   * - isRoot: true for top-level buttons (draggable, dataset.text set)\n   *           false for child/dropdown items (not draggable)\n   */\n  createButtonElement(button, isRoot = false) {\n    // Create wrapper for either a single button or a dropdown\n    const wrapper = document.createElement('div');\n    wrapper.classList.add('button-bar-item');\n\n    // Mark top-level wrappers so sortable only acts on them\n    if (isRoot) {\n      wrapper.classList.add('button-bar-item--root');\n      // IMPORTANT: attach the text identifier to the wrapper so ordering works\n      wrapper.dataset.text = button.text;\n    }\n\n    // Base button (icon / image / text)\n    let element;\n    if (button.image) {\n      element = document.createElement('img');\n      element.src = button.image;\n      element.alt = button.text;\n      element.title = button.text;\n      element.draggable = false;\n    } else if (button.icon) {\n      element = document.createElement('span');\n      element.innerHTML = button.icon;\n    } else {\n      element = document.createElement('button');\n      element.innerText = button.text;\n    }\n\n    // Base dataset on the actual clickable element (keeps existing logic)\n    const baseDataset = {\n      context: this.options.context || button.text,\n      type: this.options.type || 'buddy',\n      text: button.text\n    };\n    Object.entries(baseDataset).forEach(([k, v]) => element.dataset[k] = v);\n\n    element.classList.add('button-bar-button');\n    if (button.className) element.classList.add(button.className);\n\n    // If button has children → create dropdown\n    if (Array.isArray(button.children) && button.children.length > 0) {\n      wrapper.classList.add('has-children');\n\n      // Dropdown container\n      const dropdown = document.createElement('div');\n      dropdown.classList.add('button-dropdown');\n      dropdown.style.display = 'none';\n\n      // Inside createButtonElement, in the children loop:\n      button.children.forEach(child => {\n        // Create wrapper for the child item\n        const childWrapper = document.createElement('div');\n        childWrapper.classList.add('dropdown-item');\n\n        // Create the base element (icon/image/button)\n        const childBaseEl = this.createButtonElement(child, false);\n        childBaseEl.classList.remove('button-bar-item'); // avoid nested wrappers confusion\n\n        // Create the text label\n        const label = document.createElement('span');\n        label.innerText = child.text;\n        label.classList.add('dropdown-label');\n\n        // Put both inside wrapper\n        childWrapper.appendChild(childBaseEl);\n        childWrapper.appendChild(label);\n\n        // Unified click handler\n        const clickHandler = (ev) => {\n          ev.stopPropagation();\n          if (typeof child.onclick === 'function') {\n            child.onclick(ev);\n          }\n          // optionally: close dropdown after click\n          dropdown.style.display = 'none';\n        };\n\n        // add baseDataset to childWrapper for consistency\n        Object.entries(baseDataset).forEach(([k, v]) => childWrapper.dataset[k] = v);\n        // add baseDataset to childBaseEl too for consistency\n        Object.entries(baseDataset).forEach(([k, v]) => childBaseEl.dataset[k] = v);\n        // add baseDataset to label too for consistency\n        Object.entries(baseDataset).forEach(([k, v]) => label.dataset[k] = v);\n\n        childWrapper.addEventListener('click', clickHandler);\n\n        dropdown.appendChild(childWrapper);\n      });\n\n\n      // Toggle dropdown on click\n      element.addEventListener('click', (ev) => {\n        ev.stopPropagation();\n        dropdown.style.display = (dropdown.style.display === 'none') ? 'block' : 'none';\n      });\n\n      // Close dropdown if clicking outside\n      document.addEventListener('click', () => {\n        dropdown.style.display = 'none';\n      });\n\n      wrapper.appendChild(element);\n      wrapper.appendChild(dropdown);\n    } else {\n      // Plain button case: attach onclick handler\n      if (typeof button.onclick === 'function') {\n        element.addEventListener('click', button.onclick);\n      }\n      wrapper.appendChild(element);\n    }\n\n    return wrapper;\n  }\n\n  addButton(button) {\n    if (this.buttons.some(b => b.text === button.text)) {\n      console.warn(`Button with text \"${button.text}\" already exists.`);\n      return;\n    }\n\n    this.buttons.push(button);\n    const newButtonElement = this.createButtonElement(button, true); // root\n    this.container.appendChild(newButtonElement);\n    this.refreshSortable();\n  }\n\n  removeButton(buttonText) {\n    const index = this.buttons.findIndex(button => button.text === buttonText);\n    if (index === -1) return;\n\n    this.buttons.splice(index, 1);\n\n    // Only remove top-level (root) wrappers\n    const roots = Array.from(this.container.children).filter(el => el.classList.contains('button-bar-item--root'));\n    for (const el of roots) {\n      if (el.dataset.text === buttonText) {\n        this.container.removeChild(el);\n        break;\n      }\n    }\n\n    this.refreshSortable();\n    this.saveButtonOrder();\n  }\n\n  enableDragAndDrop() {\n    $(this.container).sortable({\n      // Only root-level items are sortable\n      items: '.button-bar-item--root',\n      tolerance: 'pointer',\n      stop: () => this.syncButtonOrder()\n    });\n  }\n\n  refreshSortable() {\n    $(this.container).sortable('refresh');\n  }\n\n  syncButtonOrder() {\n    // Read order only from top-level wrapper elements\n    const roots = Array.from(this.container.children).filter(el => el.classList.contains('button-bar-item--root'));\n    const orderedTexts = roots.map(el => el.dataset.text);\n    console.log('syncButtonOrder orderedTexts', orderedTexts);\n\n    // Rebuild this.buttons in the new order using the original objects (match by text)\n    this.buttons = orderedTexts\n      .map(text => this.buttons.find(b => b.text === text))\n      .filter(Boolean);\n\n    console.log('syncButtonOrder new this.buttons', this.buttons);\n    this.saveButtonOrder();\n  }\n\n  saveButtonOrder() {\n    // this.buttons should now reflect the new order\n    console.log('saveButtonOrder this.buttons', this.buttons);\n    const orderedTexts = this.buttons.map(b => b.text);\n    this.bp.set('buttonBar.buttons', orderedTexts);\n\n    const openWindows = this.bp.apps.ui.windowManager.findWindows({\n      app: 'buddylist',\n      type: ['buddy', 'pond']\n    });\n\n    openWindows.forEach(window => {\n      if (window.buttonBar) {\n        // Reorder buttons on other windows (they store button objects too)\n        window.buttonBar.buttons = this.sortButtonsByOrder(window.buttonBar.buttons, orderedTexts);\n\n        // Re-render DOM in other windows\n        window.buttonBar.reRenderButtons();\n      }\n    });\n  }\n\n  // used when making a remote change to the button order from an outside source\n  // drag and drop does not use this method and instead uses syncButtonOrder\n  // reRenderButtons should recreate top-level wrappers as root items\n  reRenderButtons() {\n    // Clear the container\n    this.container.innerHTML = '';\n\n    // Recreate and append all buttons in current order (root)\n    this.buttons.forEach(button => {\n      const el = this.createButtonElement(button, true);\n      this.container.appendChild(el);\n    });\n\n    // Re-enable drag and drop after replacing children\n    this.refreshSortable();\n  }\n\n  sortButtonsByOrder(buttons, order) {\n    const buttonMap = Object.fromEntries(buttons.map(b => [b.text, b]));\n    const ordered = order.map(text => buttonMap[text]).filter(Boolean);\n\n    // Append any new buttons not in stored order\n    const remaining = buttons.filter(b => !order.includes(b.text));\n    return [...ordered, ...remaining];\n  }\n}\n","import ChatWindowButtonBar from \"../ChatWindowButtonBar.js\";\n\n\nexport default function setupChatWindowButtons(windowType, contextName, chatWindow) {\n    if (!this.options.chatWindowButtons) return;\n\n    let buttons = this.options.chatWindowButtons.slice();\n    if (windowType === \"pond\") {\n        buttons = buttons.filter((button) => button.type !== \"buddy-only\");\n    }\n\n    if (this.bp.isMobile() && windowType === \"buddy\") {\n        // don't show help button on mobile buddy chat windows\n        buttons = buttons.filter((button) => button.text !== \"BuddyHelp\");\n    }\n\n    if (isIOS()) {\n        buttons = buttons.filter((button) => button.env !== \"desktop-only\");\n    }\n\n    chatWindow.buttonBar = new ChatWindowButtonBar(this.bp, {\n        context: contextName,\n        type: windowType,\n        buttons,\n    });\n    $(\".aim-message-controls\", chatWindow.content).prepend(chatWindow.buttonBar.container);\n}\n\nfunction isIOS() {\n    return /iPad|iPhone|iPod/.test(navigator.userAgent) && \"ontouchend\" in document;\n}","// Populates or updates the pond room list in the chat window\n// Maintains sort order by connection_count (descending) without full re-render\n// Manages .aim-room-active class only when an activeContext is specified\nexport default function populateRoomList(hotPonds, chatWindow, activeContext = null) {\n    // console.log('populateRoomList called with hotPonds:', hotPonds, 'chatWindow:', chatWindow, 'activeContext:', activeContext);\n    const roomList = $(\".aim-room-list-items\", chatWindow.content);\n    if (!roomList.length) return;\n\n    if (!hotPonds || !Array.isArray(hotPonds)) return;\n\n    // Sort ponds by connection count (descending)\n    const sortedPonds = [...hotPonds].sort((a, b) => b.connection_count - a.connection_count);\n    // console.log('Sorted ponds:', sortedPonds);\n\n    // Track user-opened ponds\n    const userOpenedPonds = this.data.activePonds || [];\n\n    // Track existing room items by pond_id\n    const existingItems = new Map();\n    const existingPondIds = new Set();\n    roomList.find(\".aim-room-item\").each((_, item) => {\n        const pondId = $(item).data(\"pond\");\n        if (pondId) {\n            existingItems.set(pondId, $(item));\n            existingPondIds.add(pondId);\n        }\n    });\n\n    // Update or add room items\n    sortedPonds.forEach((pond) => {\n        const pondId = pond.pond_id;\n        const pondName = pondId.replace(\"pond/\", \"\");\n        const isUserOpened = userOpenedPonds.includes(pondId);\n        const isActive = pondId === activeContext;\n\n        const existingItem = existingItems.get(pondId);\n        if (existingItem) {\n            // Update existing item only if data has changed\n            const $scoreElement = existingItem.find(\".aim-room-list-item-score\");\n            if ($scoreElement.text() !== String(pond.connection_count)) {\n                console.log(`Updating connection_count for ${pondId}: ${pond.connection_count}`);\n                $scoreElement.text(pond.connection_count);\n            }\n\n            const $closeButton = existingItem.find(\".aim-room-close-btn\");\n            if (isUserOpened) {\n                if (!$closeButton.length) {\n                    console.log(`Adding close button for ${pondId}`);\n                    existingItem.append(`<button class=\"aim-room-close-btn\" data-context=\"${pondId}\">X</button>`);\n                }\n            } else if ($closeButton.length) {\n                console.log(`Removing close button for ${pondId}`);\n                $closeButton.remove();\n            }\n\n            // Update active class only if activeContext is specified\n            if (activeContext !== null) {\n                const shouldBeActive = isActive;\n                if (existingItem.hasClass(\"aim-room-active\") !== shouldBeActive) {\n                    console.log(`Updating active class for ${pondId}: ${shouldBeActive}`);\n                    existingItem.toggleClass(\"aim-room-active\", shouldBeActive);\n                }\n            }\n\n            existingPondIds.delete(pondId); // Mark as processed\n        } else {\n            // Create new room item\n            // console.log(`Adding new room item for ${pondId}`);\n            const closeButton = isUserOpened\n                ? `<button class=\"aim-room-close-btn\" data-context=\"${pondId}\">X</button>`\n                : \"\";\n            const $newItem = $(`\n                <li class=\"aim-room-item aim-room-list-item${isActive && activeContext !== null ? \" aim-room-active\" : \"\"}\" data-pond=\"${pondId}\" data-context=\"${pondId}\">\n                    <span class=\"aim-room-list-item-name\">#${pondName}</span>\n                    <span class=\"aim-room-list-item-score\">${pond.connection_count}</span>\n                    ${closeButton}\n                </li>\n            `);\n            roomList.append($newItem); // Append temporarily; will reorder later\n            existingItems.set(pondId, $newItem); // Track for reordering\n        }\n\n        // Ensure messages container exists for active or opened ponds\n        // TODO: we don't have a scope to ensureMessagesContainer here,\n        // do we need to ensureMessagesContainer here? if so, it needs to be scoped to buddylist or chatWindow\n        /*\n        if (isActive || isUserOpened) {\n            ensureMessagesContainer.call(this, pondId, chatWindow, this.bp.apps.client);\n        }\n        */\n    });\n\n    // Remove room items for ponds no longer in hotPonds\n    existingPondIds.forEach((pondId) => {\n        console.log(`Removing room item for ${pondId}`);\n        existingItems.get(pondId)?.remove();\n        existingItems.delete(pondId);\n    });\n\n    // Reorder room items to match sortedPonds\n    // console.log('Reordering room items to match sortedPonds');\n    let previousItem = null;\n    sortedPonds.forEach((pond) => {\n        const $item = existingItems.get(pond.pond_id);\n        if ($item) {\n            if (previousItem) {\n                // Insert after the previous item\n                const $nextSibling = previousItem.next();\n                if (!$nextSibling.length || $nextSibling.data(\"pond\") !== pond.pond_id) {\n                    console.log(`Moving ${pond.pond_id} after ${previousItem.data(\"pond\")}`);\n                    $item.insertAfter(previousItem);\n                }\n            } else {\n                // Move to the top if it's the first item\n                const $firstItem = roomList.children().first();\n                if (!$firstItem.length || $firstItem.data(\"pond\") !== pond.pond_id) {\n                    console.log(`Moving ${pond.pond_id} to top`);\n                    $item.prependTo(roomList);\n                }\n            }\n            previousItem = $item;\n        }\n    });\n\n    // Ensure only the active room has .aim-room-active if activeContext is specified\n    if (activeContext !== null) {\n        console.log(`Ensuring only ${activeContext} has .aim-room-active`);\n        roomList.find(\".aim-room-item\").not(`[data-pond=\"${activeContext}\"]`).removeClass(\"aim-room-active\");\n        if (existingItems.get(activeContext)) {\n            existingItems.get(activeContext).addClass(\"aim-room-active\");\n        }\n    }\n}","import setupInputEvents from \"./message/setupInputEvents.js\";\nimport setupAutocomplete from \"./message/setupAutocomplete.js\";\nimport setupChatWindowButtons from \"./message/setupChatWindowButtons.js\";\n\n// this is now handled in the pond.js file\nimport populateRoomList from \"./message/populateRoomList.js\";\nimport updateRoomList from \"./message/updateRoomList.js\";\n// Updates the list of connected users for a specific pond chat\n// data.chatId specifies the pond context (e.g., \"pond/general\")\n\n// Updates the list of connected users for a specific pond chat\n// data.chatId specifies the pond context (e.g., \"pond/general\")\nfunction updatePondConnectedUsers(data) {\n    const chatId = data.chatId;\n    if (!chatId) {\n        console.log(\"No chatId provided for updating pond connected users\");\n        return;\n    }\n    // console.log('updatePondConnectedUsers called with data:', data);\n    let context = chatId.replace(\"pond/\", \"\");\n\n    // Select the user list for the specific pond\n    const userList = $(`.aim-user-list[data-context=\"${context}\"][data-type=\"pond\"] .aim-user-list-items`);\n\n    // console.log('found userList:', userList.length, 'for chatId:', chatId, userList);\n    if (!userList.length) {\n        console.log(`No .aim-user-list-items found for chatId: ${chatId}`);\n        return;\n    }\n\n    // console.log(\"Updating pond connected users for chatId:\", chatId, data);\n\n    // Track existing users to identify disconnected ones\n    const existingUserIds = new Set();\n    userList.find(\".aim-user-item\").each((_, item) => {\n        let userId = $(item).data(\"username\");\n        if (userId) {\n            userId = userId.toString();\n            existingUserIds.add(userId);\n        } else {\n            // console.log(\"Found invalid .aim-user-item without data-username, removing:\", item);\n            $(item).remove(); // Remove empty/invalid items\n        }\n    });\n\n    // Update or add user items\n    (data.users || []).forEach((user) => {\n        let { userId, profilePicture } = user;\n        userId = userId ? userId.toString() : null;\n        if (!userId || typeof userId !== \"string\") {\n            console.log(\"Skipping invalid user with missing or non-string userId:\", user);\n            return; // Skip invalid users\n        }\n\n        // Remark: we could also populate the this.data.activeUsers\n        // Might be better to just allow user to click name and then open spellbook, less clutter in dropdown\n        /*\n        if (message.to && !this.data.activeUsers.includes(message.to)) {\n            this.data.activeUsers.push(message.to);\n            this.bp.emit('buddy::activeUserAdded', message.to);\n        }\n        */\n\n        const userItem = $(`.aim-user-item[data-username=\"${userId}\"]`, userList);\n\n        if (userItem.length) {\n            // Update existing user only if data has changed\n            const $textElement = userItem.find(\".aim-user-item-text\");\n            if ($textElement.text() !== userId) {\n                // console.log(`Updating userId text for ${userId}`);\n                $textElement.text(userId);\n            }\n\n            const $profileContainer = userItem.find(\".aim-profile-picture\");\n            const $newProfileElement = createProfilePictureElement.call(this, userId, profilePicture, $profileContainer);\n            if ($newProfileElement) {\n                // console.log(`Updating profile picture for ${userId}`);\n                $profileContainer.empty().append($newProfileElement.html());\n            } else {\n                // console.log(`No profile picture update needed for ${userId}`);\n            }\n\n            existingUserIds.delete(userId); // Mark as processed\n        } else {\n            // Create new user item\n            // console.log(\"Adding user to aim-user-list-items:\", user);\n            const $userItem = $(\"<li>\", {\n                class: \"aim-user-item\",\n                \"data-username\": userId,\n            });\n            const $profilePicture = createProfilePictureElement.call(this, userId, profilePicture);\n            const $userText = $(\"<span>\", {\n                class: \"aim-user-item-text\",\n                text: userId,\n            });\n            //console.log('$profilePicture', $profilePicture.html())\n            //console.log('$userItem', $userItem.html())\n            $userItem.append($profilePicture, $userText);\n            userList.append($userItem);\n        }\n    });\n\n    // Remove disconnected users\n    // console.log('checking existingUserIds for removal:', existingUserIds);\n    existingUserIds.forEach((userId) => {\n        userId = userId.toString();\n        $(`.aim-user-item[data-username=\"${userId}\"]`, userList).remove();\n    });\n}\n\n// Creates a profile picture element for a user\n// Returns null if no update is needed for existing users\nfunction createProfilePictureElement(userId, profilePicture, $existingContainer = null) {\n    const $profilePicture = $(\"<div>\", { class: \"aim-profile-picture\" });\n\n    if (window.discordMode) {\n       profilePicture =  profilePicture.replace('https://files.buddypond.com', bp.config.cdn);\n    }\n\n    if (profilePicture) {\n        const $img = $(\"<img>\", {\n            class: \"aim-chat-message-profile-picture-img\",\n            src: profilePicture,\n            alt: `${userId}'s avatar`,\n        });\n        $img.attr('draggable', 'false');\n        $profilePicture.append($img);\n\n        // For existing users, check if update is needed\n        if ($existingContainer) {\n            const $currentImg = $existingContainer.find(\".aim-chat-message-profile-picture-img\");\n            if ($currentImg.length && $currentImg.attr(\"src\") === profilePicture) {\n                return null; // No update needed\n            }\n        }\n    } else {\n        const defaultAvatarSvg = this.defaultAvatarSvg(userId);\n        $profilePicture.html(defaultAvatarSvg);\n\n        // For existing users, check if SVG content is unchanged\n        if ($existingContainer) {\n            const currentHtml = $existingContainer.html().trim();\n            if (currentHtml === defaultAvatarSvg.trim()) {\n                return null; // No update needed\n            }\n        }\n    }\n\n    return $profilePicture;\n}\n\nexport default function openChatWindow(data) {\n    const { windowType, contextName, windowTitle } = determineWindowParameters(data);\n    if (!isValidContextName.call(this, contextName)) {\n        return;\n    }\n\n    // TODO: move these to prototype of buddylist...\n    if (!this.populateRoomList) {\n        this.populateRoomList = populateRoomList.bind(this);\n    }\n\n    if (!this.updatePondConnectedUsers) {\n        this.updatePondConnectedUsers = updatePondConnectedUsers.bind(this);\n    }\n\n    if (!this.joinPond) {\n        this.joinPond = joinPond.bind(this);\n    }\n\n    const client = this.bp.apps.client;\n    const windowId = generateWindowId(windowType, contextName);\n    const existingWindow = this.bp.apps.ui.windowManager.getWindow(windowId);\n    if (existingWindow) {\n        handleExistingWindow.call(this, existingWindow, windowType, contextName, client, this);\n        return existingWindow;\n    }\n\n    return createNewChatWindow.call(this, {\n        windowType,\n        contextName,\n        windowTitle,\n        windowId,\n        client,\n        data,\n    });\n}\n\nfunction determineWindowParameters(data) {\n    let windowType = data.pondname ? \"pond\" : \"buddy\";\n    let contextName = data.pondname || data.name || 'Buddy';\n    let windowTitle = windowType === \"pond\" ? \"Pond Chat\" : \"\";\n\n    if (data.context) {\n        contextName = data.context;\n    }\n\n    if (data.type) {\n        windowType = data.type;\n    }\n\n    contextName = contextName.toString();\n\n    return { windowType, contextName, windowTitle };\n}\n\nfunction isValidContextName(contextName) {\n    const pondName = contextName.replace(\"pond/\", \"\");\n    if (this.forbiddenNotes.containsBadWord(pondName)) {\n        console.error(\"Forbidden context name:\", contextName);\n        alert(\"Pond name not allowed, please choose a different name.\");\n        return false;\n    }\n    return true;\n}\n\nfunction generateWindowId(windowType, contextName) {\n    return windowType === \"pond\"\n        ? 'pond-chat'\n        : `messages/${contextName}`;\n}\n\nfunction handleExistingWindow(chatWindow, windowType, contextName, client, context) {\n    if (windowType === \"pond\") {\n        // Remark: It seems this case never happens?\n        console.log(\"Opening pond window\", windowType, contextName);\n        // Use context.data.hotPonds if available, otherwise skip population\n        //const hotPonds = context.data.hotPonds || [];\n        //populateRoomList.call(context, hotPonds, chatWindow, contextName);\n        // Ensure the messages container exists and is subscribed\n        ensureMessagesContainer.call(this, contextName, chatWindow, client);\n        toggleMessagesContainer.call(this, contextName, chatWindow);\n    }\n    chatWindow.focus();\n}\n\nfunction createNewChatWindow({ windowType, contextName, windowTitle, windowId, client, data }) {\n    const windowConfig = buildWindowConfig.call(this, windowType, contextName, windowTitle, windowId, data);\n    const chatWindow = this.bp.apps.ui.windowManager.createWindow({\n        ...windowConfig,\n        onOpen: async (_window) => {\n            await initializeChatWindow.call(this, windowType, contextName, _window, client);\n        },\n        onClose: (_window) => {\n            if (windowType === \"pond\") {\n                const roomList = $(\".aim-room-list-items\", chatWindow.content);\n                roomList.find(\".aim-room-item\").each((_, item) => {\n                    const context = $(item).data(\"context\");\n                    client.removeSubscription(\"pond\", context);\n                });\n                this.data.activePonds = [];\n                // Remark: This is a special case if the entire pond window is closed at once\n                // It's important we close all active pond subscriptions\n                if (_window.id === 'pond-chat') {\n                    // alert('main pond window closed')\n                    // iterate through all current subscriptions and close them all\n                    for (let [key, value] of bp.apps.client.messagesWsClients) {\n                        if (key.startsWith(\"pond/\")) {\n                            value.wsClient.closeConnection();\n                        }\n                    }\n                }\n            } else {\n                client.removeSubscription(windowType, contextName);\n            }\n        },\n    });\n\n    if (windowType === \"pond\") {\n        setupCloseButtonHandler.call(this, chatWindow, client);\n        $(\".no-open-ponds\", chatWindow.content).hide();\n        $('.aim-message-controls', chatWindow.content).flexShow();\n\n    }\n\n    chatWindow.loggedIn = true;\n    return chatWindow;\n}\n\nfunction buildWindowConfig(windowType, contextName, windowTitle, windowId, data) {\n    const isBuddy = windowType === \"buddy\";\n    let iconImagePath = isBuddy ? \"\" : \"desktop/assets/images/icons/icon_pond_64.png\";\n\n    if (isBuddy && this.bp.apps.buddylist.data.profileState?.buddylist?.[contextName]?.profile_picture) {\n        iconImagePath = this.bp.apps.buddylist.data.profileState.buddylist[contextName].profile_picture;\n    }\n\n    // calculate height and width as percent of screen size\n    let height = isBuddy ? 500 : Math.floor(window.innerHeight * 0.8);\n    let width = isBuddy ? 600 : Math.floor(window.innerWidth * 0.75);\n\n    if (this.bp.isMobile()) {\n        height = 'calc(var(--vh) * 90)';\n    }\n\n    return {\n        app: \"buddylist\",\n        id: windowId,\n        title: isBuddy ? contextName : windowTitle,\n        icon: iconImagePath,\n        type: windowType,\n        context: contextName,\n        parent: this.bp.apps.ui.parent,\n        className: \"chatWindow\",\n        //x: 0,\n        //y: 0,\n        x: data.x || 10,\n        y: 50,\n        width: width,\n        height: height,\n    };\n}\n\nasync function initializeChatWindow(windowType, contextName, chatWindow, client) {\n    console.log('initializeChatWindow', windowType, contextName, chatWindow);\n    setupChatWindow.call(this, windowType, contextName, chatWindow, client);\n    client.addSubscription(windowType, contextName);\n\n    if (windowType === \"buddy\") {\n        console.log(`Opening buddy chat window for: ${contextName}`);\n        // remove the .aim-chat-area margin-top ( its the close button for tabbed ponds )\n        $(\".aim-chat-area\", chatWindow.content).css(\"margin-top\", \"0\");\n        // the top to 10\n        $(\".aim-chat-area\", chatWindow.content).css(\"top\", \"10px\");\n        clearBuddyNewMessages.call(this, contextName);\n    }\n\n    if (windowType === \"pond\") {\n        // Populate room list with hot ponds if available\n        // const hotPonds = this.data.hotPonds || [];\n        let hotPonds = this.bp.apps?.pond?.data?.hotPonds || [];\n        populateRoomList.call(this, hotPonds, chatWindow, contextName);\n        // send getConnectedUsers message to the pond\n        toggleMessagesContainer.call(this, contextName, chatWindow);\n    }\n    await renderMessages.call(this, contextName, chatWindow);\n    if (!this.bp.isMobile()) {\n        focusInputField(chatWindow);\n    }\n}\n\nfunction clearBuddyNewMessages(contextName) {\n    if (\n        this.data.profileState?.buddylist?.[contextName]?.newMessages\n    ) {\n        this.data.profileState.buddylist[contextName].newMessages = false;\n        this.client.receivedInstantMessage(contextName, (err, re) => {\n            // console.log(\"receivedInstantMessage\", err, re);\n        });\n    }\n}\n\nasync function renderMessages(contextName, chatWindow) {\n    this.data.processedMessages[contextName] = this.data.processedMessages[contextName] || [];\n    const messagesToRender = [...this.data.processedMessages[contextName]];\n    this.data.processedMessages[contextName] = [];\n\n    for (const message of messagesToRender) {\n        try {\n            await this.renderChatMessage(message, chatWindow, true);\n        } catch (err) {\n            console.error(\"Error rendering message\", message, err, chatWindow);\n        }\n    }\n}\n\nfunction focusInputField(chatWindow) {\n    function attemptFocus() {\n        const aimInput = $(\".aim-input\", chatWindow.content);\n        if (aimInput.length === 0) {\n            setTimeout(attemptFocus, 100);\n            return;\n        }\n        aimInput.focus();\n    }\n    attemptFocus();\n}\n\n\nfunction ensureMessagesContainer(contextName, chatWindow, client) {\n    const chatArea = $(\".aim-chat-area\", chatWindow.content);\n    const userListArea = $(\".aim-user-list-area\", chatWindow.content);\n    if (!chatArea.length || !userListArea.length) {\n        console.log(\"Missing chatArea or userListArea for context:\", contextName);\n        return;\n    }\n\n    // Normalize context for user list (e.g., \"pond/general\" -> \"general\")\n    const userListContext = contextName.replace(\"pond/\", \"\");\n\n    // Create message container if missing\n    let existingContainer = $(`.aim-messages-container[data-context=\"${contextName}\"]`, chatArea);\n    if (!existingContainer.length) {\n        console.log(\"Creating new messages container for context:\", contextName);\n        const newContainer = document.createElement(\"div\");\n        newContainer.className = \"aim-messages-container\";\n        newContainer.setAttribute(\"data-context\", contextName);\n        newContainer.setAttribute(\"data-type\", \"pond\");\n        newContainer.style.display = \"none\";\n        newContainer.innerHTML = `\n            <div class=\"aim-messages-header\">\n                <h2 class=\"aim-chat-title\"><span class=\"aim-chat-username\">#${userListContext}</span></h2>\n                <button class=\"aim-close-chat-btn\" data-context=\"${contextName}\">Close</button>\n            </div>\n            <div class=\"aim-no-messages\">\n                Your conversation has just started. You can send a message using the form below.\n            </div>\n            <div class=\"aim-messages\"></div>\n        `;\n        chatArea.append(newContainer);\n\n        client.addSubscription(\"pond\", contextName);\n        this.data.activePonds = this.data.activePonds || [];\n        if (!this.data.activePonds.includes(contextName)) {\n            this.data.activePonds.push(contextName);\n        }\n        $(\".no-open-ponds\", chatWindow.content).hide();\n        $(\".aim-message-controls\", chatWindow.content).flexShow();\n    } \n\n    // Create user list if missing\n    let existingUserList = $(`.aim-user-list[data-context=\"${userListContext}\"][data-type=\"pond\"]`, userListArea);\n    if (!existingUserList.length) {\n        console.log(\"Creating new user list for context:\", userListContext);\n        const newUserList = document.createElement(\"div\");\n        newUserList.className = \"aim-user-list\";\n        newUserList.setAttribute(\"data-context\", userListContext);\n        newUserList.setAttribute(\"data-type\", \"pond\");\n        newUserList.style.display = \"none\";\n        newUserList.innerHTML = `\n            <div class=\"aim-user-list-header\">\n                <h3>Buddies</h3>\n            </div>\n            <ul class=\"aim-user-list-items\"></ul>\n        `;\n        userListArea.append(newUserList);\n    }\n}\n\nfunction toggleMessagesContainer(contextName, chatWindow) {\n    const chatArea = $(\".aim-chat-area\", chatWindow.content);\n    const userListArea = $(\".aim-user-list-area\", chatWindow.content);\n    if (!chatArea.length || !userListArea.length) {\n        console.log(\"Missing chatArea or userListArea for context:\", contextName);\n        return;\n    }\n\n    // Hide all message containers and user lists\n    $(\".aim-messages-container\", chatArea).hide();\n    $(\".aim-user-list\", userListArea).hide();\n\n    // Normalize context for user list (e.g., \"pond/general\" -> \"general\")\n    const userListContext = contextName.replace(\"pond/\", \"\");\n\n    chatWindow.currentActiveContext = userListContext;\n\n    // Select target elements\n    const targetContainer = $(`.aim-messages-container[data-context=\"${contextName}\"][data-type=\"pond\"]`, chatArea);\n    const targetUserList = $(`.aim-user-list[data-context=\"${userListContext}\"][data-type=\"pond\"]`, userListArea);\n\n    if (!targetContainer.length) {\n        console.log(\"Creating messages container for context:\", contextName);\n        ensureMessagesContainer.call(this, contextName, chatWindow, this.bp.apps.client);\n        // Re-select after creation\n        targetContainer = $(`.aim-messages-container[data-context=\"${contextName}\"][data-type=\"pond\"]`, chatArea);\n    }\n\n    // Show target elements\n    if (targetContainer.length) {\n        // console.log(\"Showing messages container for context:\", contextName);\n        targetContainer.show();\n    }\n    if (targetUserList.length) {\n        // console.log(\"Showing user list for context:\", userListContext);\n        targetUserList.show();\n    }\n\n    // Fallback: Show first available context if target is missing\n    if (!targetContainer.length || !targetUserList.length) {\n        const availableContainers = $(\".aim-messages-container\", chatArea);\n        if (availableContainers.length > 0) {\n            const firstContext = availableContainers.first().data(\"context\");\n            const firstUserListContext = firstContext.replace(\"pond/\", \"\");\n            // console.log(\"Falling back to first context:\", firstContext);\n\n            $(`.aim-messages-container[data-context=\"${firstContext}\"]`, chatArea).show();\n            $(`.aim-user-list[data-context=\"${firstUserListContext}\"][data-type=\"pond\"]`, userListArea).show();\n\n            $(\".aim-room-item\", chatWindow.content).removeClass(\"aim-room-active\");\n            $(`.aim-room-item[data-context=\"${firstContext}\"]`, chatWindow.content).addClass(\"aim-room-active\");\n            $(\".message_form .aim-to\", chatWindow.content).val(firstContext);\n        } else {\n            console.log(\"No available message containers or user lists\");\n        }\n    }\n\n    // find the current .button-bar\n    let buttonBar = $(\".button-bar\", chatWindow.content);\n    // we need to iterate through all the first level children of the buttonBar\n    // and update the data-context attribute to match the current contextName\n    if (buttonBar.length) {\n        buttonBar.children().each((_, child) => {\n            // console.log(`Updating button bar child context for:`, child, contextName);\n            $(child).attr(\"data-context\", contextName);\n        });\n    }\n\n    this.scrollToBottom(chatWindow.content);\n}\n\nfunction setupChatWindow(windowType, contextName, chatWindow, client) {\n    const chatWindowTemplate = this.messageTemplateString;\n    const cloned = document.createElement(\"div\");\n    cloned.innerHTML = chatWindowTemplate;\n\n    const aimMessagesContainer = $(\".aim-messages-container\", cloned)[0];\n    aimMessagesContainer.setAttribute(\"data-context\", contextName);\n    aimMessagesContainer.setAttribute(\"data-type\", windowType);\n\n    if (windowType === \"buddy\") {\n        $(\".aim-user-list-area\", cloned).remove();\n        $(\".aim-room-list\", cloned).remove();\n        $('.aim-messages-header', cloned).remove();\n        chatWindow.container.classList.add(\"has-droparea\");\n        chatWindow.content.appendChild($(\".aim-window\", cloned)[0]);\n\n    } else {\n\n        const aimUserListContainer = $(\".aim-user-list\", cloned)[0];\n        aimUserListContainer.setAttribute(\"data-context\", contextName);\n        aimUserListContainer.setAttribute(\"data-type\", windowType);\n\n        if (this.bp.isMobile()) {\n            $('.aim-close-chat-btn', cloned).text('Close #' + contextName.replace(\"pond/\", \"\"));\n            $('.aim-chat-title', cloned).remove();\n        } else {\n            $('.aim-chat-title', cloned).text(`#${contextName.replace(\"pond/\", \"\")}`);\n\n        }\n\n        $('.joinPondForm', cloned).on('submit', (e) => {\n            e.preventDefault();\n            // get value from #customPondName\n            try {\n                let pondName = $('.customPondName').val();\n                joinPond.call(this, pondName);\n\n            } catch (err) {\n                console.error(\"Error joining pond:\", err);\n            }\n            return false;\n        });\n\n        chatWindow.container.classList.add(\"has-droparea\");\n        chatWindow.content.appendChild($(\".aim-window\", cloned)[0]);\n\n        const aimWindow = $('.aim-window', chatWindow.content)[0];\n        let touchStartX = 0;\n        let touchEndX = 0;\n\n        aimWindow.addEventListener('touchstart', (e) => {\n            touchStartX = e.changedTouches[0].screenX;\n        });\n\n        aimWindow.addEventListener('touchend', (e) => {\n            touchEndX = e.changedTouches[0].screenX;\n            handleSwipe();\n        });\n\n        function handleSwipe() {\n            const swipeThreshold = 50; // Minimum swipe distance in pixels\n            const deltaX = touchEndX - touchStartX;\n\n            if (deltaX > swipeThreshold) {\n                // Swipe right: show user list\n                aimWindow.classList.remove('show-room-list');\n                aimWindow.classList.add('show-user-list');\n            } else if (deltaX < -swipeThreshold) {\n                // Swipe left: show room list\n                aimWindow.classList.remove('show-user-list');\n                aimWindow.classList.add('show-room-list');\n            } else {\n                // No swipe or too small: return to chat\n                aimWindow.classList.remove('show-room-list', 'show-user-list');\n            }\n        }\n\n        // create button bar at top\n        const buttonBar = document.createElement('div');\n        buttonBar.className = 'pond-button-bar';\n        buttonBar.setAttribute('data-context', contextName);\n        buttonBar.setAttribute('data-type', windowType);\n\n        // Optional: Add buttons to toggle panels for accessibility\n        const toggleRoomListBtn = document.createElement('button');\n        toggleRoomListBtn.textContent = 'Ponds';\n        toggleRoomListBtn.className = 'toggle-room-list';\n\n        const toggleUserListBtn = document.createElement('button');\n        toggleUserListBtn.textContent = 'Buddies';\n        toggleUserListBtn.className = 'toggle-user-list';\n\n        const closePondChatBtn = document.createElement('button');\n        closePondChatBtn.textContent = 'Close #' + contextName.replace(\"pond/\", \"\");\n        //closePondChatBtn.className = 'aim-room-close-btn';\n        // add another className, aim-close-pond-chat-btn\n        closePondChatBtn.classList.add('aim-close-pond-chat-btn');\n        closePondChatBtn.classList.add('aim-room-close-btn');\n        closePondChatBtn.setAttribute('data-context', contextName);\n        closePondChatBtn.setAttribute('data-type', windowType);\n\n        chatWindow.content.appendChild(buttonBar);\n\n        chatWindow.content.append(toggleRoomListBtn, closePondChatBtn, toggleUserListBtn);\n        // Append the button bar to the chat window content\n\n        setupCloseButtonHandler.call(this, chatWindow, client);\n\n        toggleRoomListBtn.addEventListener('click', () => {\n            aimWindow.classList.toggle('show-room-list');\n            aimWindow.classList.remove('show-user-list');\n        });\n\n        toggleUserListBtn.addEventListener('click', () => {\n            aimWindow.classList.toggle('show-user-list');\n            aimWindow.classList.remove('show-room-list');\n        });\n\n    }\n\n    setupAutocomplete.call(this, chatWindow);\n    setupChatWindowButtons.call(this, windowType, contextName, chatWindow);\n    setupMessageForm.call(this, windowType, contextName, chatWindow);\n    setupInputEvents.call(this, windowType, contextName, chatWindow);\n    \n    // update the aim-close-chat-btn with contextName\n    const closeButton = $(\".aim-close-chat-btn\", chatWindow.content);\n    if (closeButton.length) {\n        closeButton.attr(\"data-context\", contextName);\n    } else {\n        console.warn(\"No close button found in chat window for context:\", contextName);\n    }\n\n    if (windowType === \"pond\") {\n        $(\".aim-user-list-items\").on(\"click\", (e) => {\n            const username = $(e.target).closest('.aim-user-item').data(\"username\");\n            if (!username) {\n                console.error(\"No username found in clicked element\");\n                return;\n            }\n            this.openChatWindow({ name: username });\n        });\n\n        setupRoomListClickHandler.call(this, chatWindow);\n\n    }\n}\n\nfunction setupMessageForm(windowType, contextName, chatWindow) {\n    $(\".message_form .aim-to\", chatWindow.content).val(contextName);\n\n    $(\".message_form\", chatWindow.content).submit(async (e) => {\n        e.preventDefault();\n        await this.sendMessageHandler(e, chatWindow, windowType, contextName);\n    });\n}\n\nfunction setupRoomListClickHandler(chatWindow) {\n    $(\".aim-room-list-items\", chatWindow.content).on(\"click\", \".aim-room-item\", (e) => {\n        let selectedContext = $(e.target).parent().data(\"context\");\n        if (!selectedContext) {\n            console.warn(\"No context found for clicked room item target\", e.target);\n            return;\n        }\n        selectedContext = selectedContext.replace(\"pond/\", \"\");\n        //console.log(\"Selected context:\", selectedContext);\n        $(\".aim-room-item\", chatWindow.content).removeClass(\"aim-room-active\");\n        $(e.target).addClass(\"aim-room-active\");\n        ensureMessagesContainer.call(this, selectedContext, chatWindow, this.bp.apps.client);\n        $(\".message_form .aim-to\", chatWindow.content).val(selectedContext);\n        toggleMessagesContainer.call(this, selectedContext, chatWindow);\n        // TODO: Implement logic to load messages for selectedContext\n    });\n}\n\nfunction setupCloseButtonHandler(chatWindow, client) {\n    $(chatWindow.content).on(\"click\", \".aim-close-chat-btn, .aim-room-close-btn\", (ev) => {\n        ev.stopPropagation();\n        const context = ev.target.getAttribute(\"data-context\");\n\n        // Remove subscription and container\n        client.removeSubscription(\"pond\", context);\n        $(`.aim-messages-container[data-context=\"${context}\"]`, chatWindow.content).remove();\n        $(`.aim-room-item[data-context=\"${context}\"]`, chatWindow.content).remove();\n        // remove the associated .aim-user-list\n        $(`.aim-user-list[data-context=\"${context.replace(\"pond/\", \"\")}\"][data-type=\"pond\"]`, chatWindow.content).remove();\n        // Update active ponds\n        this.data.activePonds = this.data.activePonds.filter((pond) => pond !== context);\n\n        // clear out this.data.processedMessages[contextName] = [];\n        if (this.data.processedMessages[context]) {\n            this.data.processedMessages[context] = [];\n        }\n\n        // Switch to another pond or hide all containers\n        const remainingContainers = $(\".aim-messages-container\", chatWindow.content);\n        if (remainingContainers.length > 0) {\n            const nextContext = remainingContainers.first().data(\"context\");\n            toggleMessagesContainer.call(this, nextContext, chatWindow);\n            $(\".aim-room-item\", chatWindow.content).removeClass(\"aim-room-active\");\n            $(`.aim-room-item[data-context=\"${nextContext}\"]`, chatWindow.content).addClass(\"aim-room-active\");\n            $(\".message_form .aim-to\", chatWindow.content).val(nextContext);\n        } else {\n            $(\".aim-messages-container\", chatWindow.content).hide();\n            $(\".message_form .aim-to\", chatWindow.content).val(\"\");\n        }\n\n        // find the .aim-room-list-item with data-pond matching context\n        const roomItem = $(`.aim-room-item[data-context=\"pond/${context}\"]`, chatWindow.content);\n        // find the .aim-room-list-item and remove active class\n        $(\".aim-room-list-item-name\", roomItem).removeClass(\"aim-room-active\");\n\n        // get current count of .aim-chat-area, if 2 show .no-open-ponds\n        const chatAreas = $(\".aim-messages-container\", chatWindow.content);\n        if (chatAreas.length === 0) {\n            $(\".no-open-ponds\", chatWindow.content).flexShow();\n            $('.aim-message-controls', chatWindow.content).hide();\n        }\n        else {\n            $(\".no-open-ponds\", chatWindow.content).hide();\n            $('.aim-message-controls', chatWindow.content).flexShow();\n        }\n\n    });\n}\n\n\nfunction joinPond(pondName) {\n\n    if (!pondName) {\n        console.error(\"Pond name is required to join a pond.\");\n        return;\n    }\n\n    let invalidName = this.forbiddenNotes.containsBadWord(pondName);\n    if (invalidName) {\n        alert('Invalid pond name. Please choose a different name.');\n        return;\n    }\n\n    // currently all ponds exists in the main \"server\" context, pond_messages_main\n    let chatWindow = this.bp.apps.ui.windowManager.getWindow('pond-chat');\n\n    if (!chatWindow) {\n        // we may want to open  bp.open('buddylist', { context: pondName, type: 'pond' }); in this case\n        console.error(\"Pond message main window not found, cannot join pond.\");\n        // TODO: might be easier to just open the window here instread of parent API doing it\n        // see: apps/pond/pond.js for example\n        /*\n        const pondMainWindow = this.bp.apps.ui.windowManager.getWindow('pond_message_main');\n        if (pondMainWindow) {\n            this.bp.apps.buddylist.joinPond(pondName);\n            pondMainWindow.focus();\n        } else {\n            this.bp.apps.buddylist.openChatWindow({ pondname: pondName });\n        }\n        */\n        return;\n    }\n    // this.openChatWindow({ pondname: pondName });\n    let selectedContext = `${pondName}`;\n    ensureMessagesContainer.call(this, selectedContext, chatWindow, this.bp.apps.client);\n    $(\".message_form .aim-to\", chatWindow.content).val(selectedContext);\n    toggleMessagesContainer.call(this, selectedContext, chatWindow);\n\n}","const defaultProfileFiles = {\n    'index.html': `\n<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>My BuddyPond Profile</title>\n    <link rel=\"stylesheet\" href=\"./style.css\">\n</head>\n<body>\n    <h1>My Profile</h1>\n    <div class=\"profile-section\">\n        <p>Welcome to my BuddyPond profile, hosted on the BuddyPond CDN!</p>\n        <p><strong>Customize Your Profile:</strong></p>\n        <ul>\n            <li>This default profile includes <code>index.html</code>, <code>style.css</code>, and <code>profile.js</code>.</li>\n            <li>You may use any files, the only requirement is <code>index.html</code> must be located in root.</li>\n            <li>Edit or upload files in the <strong>Buddy Files</strong> app (root directory).</li>\n            <li>Add any static files (HTML, CSS, JS, images) or projects (e.g., React, Vue).</li>\n            <li>Use relative paths (e.g., <code>./style.css</code>) to link files.</li>\n        </ul>\n        <p><strong>Example:</strong> Click to change text color.</p>\n        <button id=\"toggleButton\">Toggle Text Color</button>\n        <p class=\"color-text\">This text changes color!</p>\n    </div>\n    <script src=\"./profile.js\"></script>\n</body>\n</html>`,\n    'style.css': `\nbody {\n    font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif;\n    background-color: #f4f4f9;\n    color: #333;\n    margin: 0;\n    padding: 20px;\n    line-height: 1.5;\n}\nh1 {\n    color: #007bff;\n    text-align: center;\n}\n.profile-section {\n    max-width: 600px;\n    margin: 0 auto;\n}\nul {\n    padding-left: 20px;\n    font-size: 0.9em;\n}\ncode {\n    background: #f0f0f0;\n    padding: 2px 4px;\n    border-radius: 3px;\n}\nbutton {\n    background-color: #007bff;\n    color: white;\n    padding: 8px 16px;\n    border: none;\n    border-radius: 4px;\n    cursor: pointer;\n    display: block;\n    margin: 10px auto;\n}\nbutton:hover {\n    background-color: #0056b3;\n}\n.color-text {\n    font-size: 1.1em;\n    text-align: center;\n    transition: color 0.3s ease;\n}\n.color-text.toggled {\n    color: #dc3545;\n}`,\n    'profile.js': `\nconst text = document.querySelectorAll('.color-text');\nconst button = document.getElementById('toggleButton');\nbutton.addEventListener('click', () => {\n    text.forEach(item => item.classList.toggle('toggled'));\n});\n`\n};\n\nexport default defaultProfileFiles;","\n// the best way to determine if user has a profile seems to be to just\n// check the CDN for index.html, style.css, and profile.js files\n// if any of them 404, we will programmatically create them here\n// generateDefaultProfile() is called on auth::qtoken ( login success )\n// so on each logic we will check if the profile exists\n// if we didn't do this, we'd have to check profile on File Explorer open or Profile open or Pad open,\n// which would result in a fragmented code and a delay in UI while we check for profile existence\n\nimport defaultProfileFiles from './defaultProfileFiles.js';\n\nexport default async function generateDefaultProfile(qtoken) {\n    const basePath = \"https://files.buddypond.com/\" + qtoken.me;\n\n    // TODO: move to portfolio / faucet\n    // await requestDefaultCoinAllocations.call(this, qtoken);\n\n\n    for (const [fileName, fileContent] of Object.entries(defaultProfileFiles)) {\n        try {\n            const response = await fetch(`${basePath}/${fileName}`);\n            if (!response.ok) throw new Error('File not found, needs creation');\n\n            // check if not 200 response\n            // if not, throw error\n            if (response.status !== 200) throw new Error('File not found, needs creation');\n\n            // check if new location is four-ohh-four, if so, throw error\n            if (response.url === 'https://buddypond.com/four-ohh-four') {\n                throw new Error('File not found, needs creation');\n            }\n\n        } catch (error) {\n            console.log(`Creating ${fileName}: ${error.message}`);\n            const blob = new Blob([fileContent], { type: getFileType(fileName) });\n            const file = new File([blob], fileName, {\n                type: blob.type,\n                lastModified: new Date()\n            });\n            file.filePath = `${fileName}`; // maybe\n\n            try {\n                await this.bp.apps.client.api.uploadFile(file);\n                console.log(`${fileName} uploaded successfully.`);\n            } catch (uploadError) {\n                console.error(`Error uploading ${fileName}: ${uploadError.message}`);\n            }\n        }\n    }\n}\n\nfunction getFileType(fileName) {\n    if (fileName.endsWith('.html')) return 'text/html';\n    if (fileName.endsWith('.css')) return 'text/css';\n    if (fileName.endsWith('.js')) return 'application/javascript';\n    return 'text/plain';\n}\n\n\nasync function requestDefaultCoinAllocations(qtoken) {\n    // before generating the default profile files ( for home page)\n    // we need to establish the users initial MEGA ( Megabytes ) asset allocation in their portfolio\n    // since the user's initial state will have no record, we can simply attempt to add\n    // backend will allow initial allocation of 10 MEGA to all users\n\n    //\n    // Request default MEGA allocation\n    //\n    try {\n        await this.bp.load('portfolio');\n\n\n        await this.bp.apps.portfolio.resource.apiRequest('POST', 'portfolio/' + qtoken.me + '/MEGA', {\n            symbol: 'MEGA',\n            owner: qtoken.me,\n            amount: 10,\n            available: 10,\n            price: 0.1,\n            cost: 0\n        });\n\n    } catch (error) {\n        console.log('Error creating MEGA asset for user', error);\n    }\n\n    //\n    // Request default GBP allocation\n    //\n    try {\n        await this.bp.load('portfolio'); // should be cached at this stage\n        await this.bp.apps.portfolio.resource.apiRequest('POST',  'portfolio/' + qtoken.me + '/GBP', {\n            symbol: 'GBP',\n            owner: qtoken.me,\n            amount: 10000,\n            available: 10000,\n            price: 0.001,\n            cost: 0\n        });\n    } catch (error) {\n        console.log('Error creating GBP asset for user', error);\n    }\n}","// import scrollToBottom from \"./scrollToBottom.js\";\n\n// TODO: add logic for \"reply-message\" action\n//       reply-message action should open a small \"replying to\" box above the closest .aim-message-sender element\n//       The \"Replying to {BuddyName}\" box should contain the message text and a small \"cancel\" button at the right / end of the box\n//       We can assume that data-from will be the same as the sender of the message we are replying to\n\nexport default function bindMessageContextMenu() {\n\n\n\n  bindProfilePictureClick.call(this);\n\n  // Single event delegation for context menu, hover menu, and edit hint actions\n  document.addEventListener('click', (event) => {\n    const target = event.target;\n    let action = target.getAttribute('data-action');\n\n    // Handle context menu item click\n    if (target.classList.contains('aim-context-menu-item') && action) {\n      handleContextMenuItemClick.call(this, action, target);\n      return;\n    }\n\n    // Handle hover menu item click\n\n    // TODO: there must be a better way to do this\n    // Remark: The issue is that we wish to cover the click action for the parent item and all its potential children\n    let isHoverMenuAction = $(target).hasClass('aim-hover-menu-item') || $(target).parents().hasClass('aim-hover-menu-item');\n    action = target.getAttribute('data-action') || target.parentNode.getAttribute('data-action');\n\n    if (isHoverMenuAction && action) {\n      handleContextMenuItemClick.call(this, action, target);\n      return;\n    }\n\n    // Handle edit hint action click (escape/enter)\n    if (target.classList.contains('aim-edit-hint-action') && action) {\n      handleEditHintAction.call(this, action, target);\n      return;\n    }\n\n    // Handle reply cancel button click\n    if (target.classList.contains('aim-reply-cancel') && action === 'cancel-reply') {\n      // get the closest reply box\n      const replyBox = target.closest('.aim-reply-box');\n      cancelReply.call(this, replyBox);\n      return;\n    }\n\n    // Close existing context menu and reset hover menu\n    closeMenus.call(this);\n  });\n}\n\n// Handle context menu or hover menu item click\nfunction handleContextMenuItemClick(action, target) {\n  performAction.call(this, action, target);\n  if (action !== 'more-options') {\n    closeMenus.call(this);\n  }\n}\n\n// Handle edit hint action (escape/enter)\nfunction handleEditHintAction(action, target) {\n  const messageContent = target.closest('.aim-editable-container')?.querySelector('.aim-message-content');\n  if (!messageContent) {\n    console.error('No message content found for edit hint action');\n    return;\n  }\n\n  const messageUUID = messageContent.closest('.aim-chat-message')?.getAttribute('data-uuid');\n  const originalMessage = document.querySelector(`.aim-chat-message[data-uuid=\"${messageUUID}\"]`);\n  if (!originalMessage) {\n    console.error('No original message found');\n    return;\n  }\n\n  const messageData = {\n    uuid: messageUUID,\n    chatId: originalMessage.getAttribute('data-chat-id'),\n    text: originalMessage.getAttribute('data-original-text') || messageContent.innerText\n  };\n\n  if (action === 'cancel-edit') {\n    cancelEdit.call(this, messageContent, messageData.text);\n  } else if (action === 'save-edit') {\n    saveEdit.call(this, messageContent, messageData);\n  }\n\n}\n\n// Close active context and hover menus\nfunction closeMenus() {\n  if (this.activeMessageContextMenu) {\n    this.activeMessageContextMenu.remove();\n    this.activeMessageContextMenu = null;\n  }\n  if (this.activeMessageHoverMenu) {\n    this.activeMessageHoverMenu = null; // Rely on CSS for hiding hover menu\n  }\n  if (this.activeReplyBox) {\n    return;\n    this.activeReplyBox.remove();\n    this.activeReplyBox = null;\n    this.bp.replyMode = false;\n  }\n}\n\n// Perform the specified action\nfunction performAction(action, target) {\n  const closestTarget = target.closest('.aim-context-menu') || target.closest('.aim-chat-message');\n  if (!closestTarget) {\n    console.error('No closest target found');\n    return;\n  }\n  // console.log('closestTarget', closestTarget);\n  const messageUUID = closestTarget.getAttribute('data-uuid');\n  const messageChatId = closestTarget.getAttribute('data-chat-id');\n  const messageFrom = closestTarget.getAttribute('data-from');\n  const messageData = {\n    uuid: messageUUID,\n    chatId: messageChatId,\n    from: messageFrom,\n  };\n\n  const originalMessage = document.querySelector(`.aim-chat-message[data-uuid=\"${messageUUID}\"]`);\n  if (!originalMessage) {\n    console.error('No original message found');\n    return;\n  }\n\n  messageData.text = originalMessage.querySelector('.aim-message-content').innerText;\n\n  if (!messageData.uuid || !messageData.chatId) {\n    console.error('No message data found');\n    return;\n  }\n\n  switch (action) {\n    case 'add-reaction':\n      console.log('Add reaction clicked');\n      break;\n    case 'edit-message':\n      editMessage.call(this, messageData);\n      break;\n    case 'reply-message':\n      replyMessage.call(this, messageData, originalMessage);\n      break;\n    case 'more-options':\n      event.preventDefault();\n      const closestMessage = target.closest('.aim-chat-message');\n      console.log('closestMessage', closestMessage);\n      if (closestMessage) {\n        this.createMessageContextMenu(target, closestMessage);\n      }\n\n      break;\n    case 'quote-message':\n      console.log('Quote message clicked');\n      break;\n    case 'say-message':\n      console.log('Say message clicked');\n      console.log('sayMessage', messageData);\n      this.bp.emit('say::message', messageData);\n      break;\n    case 'report-message':\n      console.log('Report message clicked');\n      break;\n    case 'copy-message':\n      console.log('Copy message clicked');\n      break;\n    case 'delete-message':\n      deleteMessage.call(this, messageData);\n      break;\n    case 'cast-spell':\n      this.bp.open('spellbook', { context: messageData.from, output: 'buddy'});\n      break;\n    default:\n      console.error(`Unknown action: ${action}`);\n  }\n}\n\n// Delete a message\nfunction deleteMessage(messageData) {\n  console.log('Deleting message', messageData);\n  buddypond.removeInstantMessage(messageData);\n}\n\n// Edit a message\nfunction editMessage(messageData) {\n  const messageContent = document.querySelector(\n    `.aim-chat-message[data-uuid=\"${messageData.uuid}\"] .aim-message-content`\n  );\n  if (!messageContent) {\n    console.error('No message content found');\n    return;\n  }\n\n  this.bp.ignoreUIControlKeys = true;\n  const originalText = messageData.text;\n\n  // Wrap message content in an editable container\n  const editableContainer = document.createElement('div');\n  editableContainer.className = 'aim-editable-container';\n  messageContent.parentNode.insertBefore(editableContainer, messageContent);\n  editableContainer.appendChild(messageContent);\n\n  // Store original text for restoration\n  messageContent.closest('.aim-chat-message').setAttribute('data-original-text', originalText);\n\n  // Make content editable\n  messageContent.setAttribute('contenteditable', 'true');\n  messageContent.setAttribute('data-editing', 'true');\n  messageContent.focus();\n\n  // Add UX hint message\n  const editHint = document.createElement('div');\n  editHint.className = 'aim-edit-hint';\n  editHint.innerHTML = `\n    <span class=\"aim-edit-hint-action\" data-action=\"cancel-edit\">escape</span> to cancel • \n    <span class=\"aim-edit-hint-action\" data-action=\"save-edit\">enter</span> to save\n  `;\n  editableContainer.appendChild(editHint);\n\n  // find the closest chatWindow\n  const chatWindow = messageContent.closest('.chatWindow');\n\n  this.scrollToBottom(chatWindow);\n\n  // Named event handler for keydown\n  const handleKeydown = (event) => {\n    if (event.key === 'Escape') {\n      cancelEdit.call(this, messageContent, originalText);\n      cleanupListeners();\n      event.preventDefault();\n      event.stopPropagation();\n    } else if (event.key === 'Enter') {\n      saveEdit.call(this, messageContent, messageData);\n      cleanupListeners();\n      event.preventDefault();\n      event.stopPropagation();\n    }\n  };\n\n  // Named event handler for blur\n  const handleBlur = (ev) => {\n    // ensure the target was not \".aim-edit-hint-action\"\n    console.log('handleBlur', ev.relatedTarget, ev.target.classList);\n    if (ev.relatedTarget && !ev.relatedTarget.classList.contains('aim-edit-hint-action')) {\n      cancelEdit.call(this, messageContent, originalText);\n      cleanupListeners();\n    }\n  };\n\n  // Cleanup function for event listeners\n  const cleanupListeners = () => {\n    messageContent.removeEventListener('keydown', handleKeydown);\n    messageContent.removeEventListener('blur', handleBlur);\n    this.bp.ignoreUIControlKeys = false;\n  };\n\n  // Attach event listeners\n  messageContent.addEventListener('keydown', handleKeydown);\n  messageContent.addEventListener('blur', handleBlur);\n\n  console.log('Editing message', messageData);\n}\n\n// Cancel editing and restore original text\nfunction cancelEdit(messageContent, originalText, restoreText = true) {\n  const editableContainer = messageContent.closest('.aim-editable-container');\n  if (editableContainer) {\n    // Move messageContent back to its original parent\n    editableContainer.parentNode.insertBefore(messageContent, editableContainer);\n    editableContainer.remove();\n  }\n\n  messageContent.setAttribute('contenteditable', 'false');\n  messageContent.removeAttribute('data-editing');\n  if (restoreText) {\n    messageContent.innerText = originalText;\n  }\n  messageContent.blur();\n\n  const messageElement = messageContent.closest('.aim-chat-message');\n  if (messageElement) {\n    messageElement.removeAttribute('data-original-text');\n  }\n\n  console.log('Edit cancelled');\n  this.bp.ignoreUIControlKeys = false;\n}\n\n// Save edited message\nasync function saveEdit(messageContent, messageData) {\n  const editableContainer = messageContent.closest('.aim-editable-container');\n  if (editableContainer) {\n    console.log('Editable container found', editableContainer);\n    // Move messageContent back to its original parent\n    // throws error:  Failed to execute 'insertBefore' on 'Node': The node to be removed is no longer a child of this node. Perhaps it was moved in a 'blur' event handler?\n    // is the blur event already removing this?\n    //editableContainer.parentNode.insertBefore(messageContent, editableContainer);\n    //editableContainer.remove();\n  }\n\n  const newMessageText = messageContent.innerText;\n  messageContent.setAttribute('contenteditable', 'false');\n  messageContent.removeAttribute('data-editing');\n  messageContent.blur();\n\n  const messageElement = messageContent.closest('.aim-chat-message');\n  if (messageElement) {\n    messageElement.removeAttribute('data-original-text');\n  }\n\n  console.log('Edit saved', newMessageText);\n\n  await buddypond.editInstantMessage({\n    from: messageData.from,\n    chatId: messageData.chatId,\n    uuid: messageData.uuid,\n    text: newMessageText,\n  });\n\n  // close the edit hint\n  cancelEdit.call(this, messageContent, null, false);\n}\n\n// Reply to a message\nfunction replyMessage(messageData, originalMessage) {\n  // Close any existing reply box\n  if (this.activeReplyBox) {\n    this.activeReplyBox.remove();\n    this.activeReplyBox = null;\n  }\n\n\n  this.bp.ignoreUIControlKeys = true;\n  this.bp.replyData = messageData; // Store reply data for message submission\n\n  // Create reply box\n  const replyBox = document.createElement('div');\n  replyBox.className = 'aim-reply-box';\n  replyBox.innerHTML = `\n    <span class=\"aim-reply-header\">Replying to ${messageData.from}</span>\n    <button class=\"aim-reply-cancel\" data-action=\"cancel-reply\">Cancel</button>\n  `;\n  //   <span class=\"aim-reply-text\">${messageData.text}</span>\n\n\n  // Insert reply box above .aim-message-sender\n  console.log(\"originalMessage\", originalMessage)\n  const messageSender = $(originalMessage).parent().parent().parent().parent().find('.aim-message-sender')[0];\n  console.log('REEE messageSender', messageSender);\n  if (!messageSender) {\n    console.error('No message sender found');\n    return;\n  }\n  messageSender.parentNode.insertBefore(replyBox, messageSender);\n\n  // Store active reply box\n  this.activeReplyBox = replyBox;\n  // this.activeReplyUUID = messageData.uuid;\n  // find the closet input named \"message_replyto\"\n  const replyInput = replyBox.closest('.chatWindow').querySelector('input[name=\"message_replyto\"]');\n  const messageTextInput = replyBox.closest('.chatWindow').querySelector('textarea[name=\"message_text\"]');\n  // set the value of the input to the messageData.uuid\n  // set the focus to the replyInput\n  if (replyInput) {\n    replyInput.value = messageData.uuid;\n  } else {\n    console.error('No reply input found');\n  }\n  if (messageTextInput) {\n    messageTextInput.focus();\n  } else {\n    console.error('No message text input found');\n  }\n\n  // Find the closest chatWindow and scroll to bottom\n  const chatWindow = originalMessage.closest('.chatWindow');\n  if (chatWindow) {\n    this.scrollToBottom(chatWindow);\n  }\n\n  const handleKeydown = (event) => {\n    if (event.key === 'Escape') {\n      //cancelEdit(messageContent, originalText);\n      cancelReply.call(this, replyBox);\n      cleanupListeners();\n      event.preventDefault();\n      event.stopPropagation();\n    } else if (event.key === 'Enter') {\n      // saveEdit.call(this, messageContent, messageData);\n      cleanupListeners();\n      event.preventDefault();\n      event.stopPropagation();\n    }\n  };\n\n  // Cleanup function for event listeners\n  const cleanupListeners = () => {\n    messageTextInput.removeEventListener('keydown', handleKeydown);\n    // messageTextInput.removeEventListener('blur', handleBlur);\n    this.bp.ignoreUIControlKeys = false;\n  };\n\n  messageTextInput.addEventListener('keydown', handleKeydown);\n\n  console.log('Reply mode activated', messageData);\n\n}\n\n// Cancel reply mode\nfunction cancelReply(replyBox) {\n  console.log('Cancel reply', replyBox);\n  console.log('aimReplyBox', replyBox);\n  if (replyBox) {\n\n    // clear out the .aim-replyto input value\n    const replyInput = replyBox.closest('.chatWindow').querySelector('input[name=\"message_replyto\"]');\n    if (replyInput) {\n      replyInput.value = '';\n    } else {\n      console.error('No reply input found');\n    }\n\n    replyBox.remove();\n    this.activeReplyBox = null;\n    this.bp.ignoreUIControlKeys = false;\n    this.bp.replyData = null;\n  }\n\n  console.log('Reply cancelled');\n}\n\nfunction bindProfilePictureClick() {\n\n  document.addEventListener('click', (event) => {\n    let target = event.target;\n    // if target is svg and parent has class aim-profile-picture\n    // console.log(' bindProfilePictureClick target', target, target.tagName);\n    if ($(target).parents().hasClass('aim-profile-picture')) {\n      //if (target.classList.contains('.aim-avatar')) {\n      const chatMessageElement = target.closest('.aim-chat-message')\n      if (!chatMessageElement) {\n        // console.error('No chat message element found');\n        return;\n      }\n      let buddyname = chatMessageElement.getAttribute('data-from');\n      console.log('Profile picture clicked', buddyname);\n\n      if (buddyname === this.bp.me) {\n        // opens profile edit page\n        this.bp.open('profile', { context: 'edit' });\n      } else {\n        // opens profile page\n        // this.bp.emit('profile::view', buddyname);\n        this.bp.open('user-profile', { context: buddyname });\n\n      }\n\n    }\n  });\n\n}","export default function registerEventHandlers() {\n    // console.log('BuddyList registerEventHandlers');\n    this.bp.on('auth::qtoken', 'handle-auth-success', qtoken => this.handleAuthSuccess(qtoken));\n\n    // On auth success, load user specific apps ( TODO: should pull from DB )\n    this.bp.on('auth::qtoken', 'load-user-apps', qtoken => this.loadUserApps());\n\n    // Generate default profile files ( TODO: don't run this each time, keep track on profile state if users generated default profile )\n    this.bp.on('auth::qtoken', 'generate-default-profile-files', qtoken => {\n        // give the app a moment to load messages and open windows before generating default profile\n        // TODO: we could do this server-side instead\n        setTimeout(() => {\n            try {\n                // alert('Generating default profile files');\n                this.generateDefaultProfile(qtoken)\n\n            } catch (err) {\n                console.error('generate-default-profile-files', err);\n            }\n        }, 6000);\n\n    });\n\n    this.bp.on('buddylist-websocket::connected', 'update-buddylist-connected', ws => {\n        // sets buddylist status to online\n        $('.onlineStatusSelect').val('online');\n        $('.loggedOut').flexHide();\n        $('.loggedIn').flexShow();\n\n        this.bp.apps.buddylist.client.wsClient.send(JSON.stringify({\n            action: 'getCoinBalance',\n            buddyname: this.bp.me,\n            qtokenid: this.bp.qtokenid,\n        }));\n\n        //$('.loggedIn').addClass('show');\n    });\n\n    // Remark: This has been removed in favor of letting windows manage their own state\n    // If the buddylist emits newMessages: true for a buddy, the window will open automatically calling getMessages\n    //this.bp.on('client::websocketConnected', 'get-latest-messages', ws => this.getLatestMessages());\n\n    this.bp.on('profile::buddylist', 'process-buddylist', ev => this.processBuddylist(ev.data));\n\n    this.bp.on('profile::buddy::in', 'render-or-update-buddy-in-buddylist', data => this.renderOrUpdateBuddyInBuddyList(data));\n    this.bp.on('profile::buddy::out', 'remove-buddy-from-buddylist', data => {\n        console.log('profile::buddy::out', data);\n        const buddyName = data.name;\n        let buddyListItem = $(`li[data-buddy=\"${buddyName}\"]`, '.buddylist');\n        console.log('buddyListItem', buddyListItem);\n        buddyListItem.remove();\n    });\n\n    this.bp.on('profile::fullBuddyList', 'render-or-update-buddy-in-buddylist', data => {\n        let buddylist = data.buddylist || {};\n        console.log('profile::buddy::full_profile', data);\n        for (let b in buddylist) {\n            let buddy = {\n                name: b,\n                profile: buddylist[b]\n            }\n            this.data.profileState = this.data.profileState || {};\n            this.data.profileState.buddylist = this.data.profileState.buddylist || {};\n\n            this.data.profileState.buddylist[b] = buddy.profile;\n            // console.log('renderOrUpdateBuddyInBuddyList', buddy);\n            this.renderOrUpdateBuddyInBuddyList(buddy);\n        }\n\n        if (buddylist[this.bp.me]) {\n            // for now...needs to change shape of server response to include root fields?\n            if (buddylist[this.bp.me].profile_picture) {\n                // console.log('setting profilePicture', buddylist[this.bp.me].profile_picture);\n                this.data.profileState.profilePicture = buddylist[this.bp.me].profile_picture;\n            }\n            if (buddylist[this.bp.me].status) {\n                // console.log('setting status', buddylist[this.bp.me].status);\n                this.data.profileState.status = buddylist[this.bp.me].status;\n            }\n        }\n\n        if (data.email) {\n            this.data.profileState.email = data.email;\n            // update the email input field\n            $('.buddy_email').val(data.email);\n        }\n\n        if (typeof data.emailVerified === 'boolean') {\n            this.data.profileState.emailVerified = data.emailVerified;\n            // update the email verified checkbox\n            // $('.buddy_email_verified').prop('checked', data.emailVerified);\n            if (data.emailVerified) {\n                $('.buddy_email_verified_text').html('Email Verified');\n            } else {\n                $('.buddy_email_verified_text').html('Email Not Verified');\n            }\n        }\n\n        // iterate through all buddies and call renderOrUpdateBuddyInBuddylist\n\n    });\n\n\n\n\n    // Remark: removing buddy-in sound because Marak account is friends without everyone is is constantly triggering the sound\n    // We'll have to be smarter about when to play sounds and limit the amount of BUDDY-IN a single buddy can trigger\n    // total amount of buddy-in sounds per time window ( in case of 100s of buddies, etc )\n    // this.bp.on('profile::buddy::in', 'play-buddy-in-sound', data => bp.play('desktop/assets/audio/BUDDY-IN.wav'));\n\n    // Remark: buddy-out sound disabled until new client connection logic with backend is fully tested \n    //         ( was triggering too many sounds too often )\n    //this.bp.on('profile::buddy::out', 'play-buddy-out-sound', data => bp.play('desktop/assets/audio/BUDDY-OUT.wav'));\n    this.bp.on('buddy::message::processed', 'play-im-sound', data => {\n        if (data.noAlert) {\n            // don't play sound if noAlert is set by server\n            return;\n        }\n        // only play sounds for recent messages\n        let messageTime = new Date(data.ctime);\n        let now = new Date().getTime();\n        //console.log(\"messageTime\", messageTime);\n        //console.log(\"now\", new Date());\n        if (now - messageTime.getTime() < 5000) {\n            bp.play('desktop/assets/audio/IM.wav');\n        }\n    });\n\n    this.bp.on('profile::buddy::newmessage', 'open-chat-window', data => {\n        // open the new chat window only if not already open\n        let windowId = `messages/` + data.name;\n        let win = this.bp.apps.ui.windowManager.getWindow(windowId);\n        if (!win) {\n            this.openChatWindow(data)\n        }\n    });\n\n    this.bp.on('profile::buddy::newmessage', 'mark-messages-as-read', data => this.buddyReadNewMessages(data));\n\n    this.bp.on('profile::buddy::calling', 'start-call', data => {\n        // legacy BP API\n        // console.log(\"profile::buddy::calling\", data);\n        desktop.app.videochat.startCall(false, data.name, function (err, re) {\n            console.log('startCall callback', err, re);\n        });\n\n    });\n\n    // buddylist should not respond to auth::logout \n    // this.bp.on('auth::logout', 'logout', () => this.logout());\n\n    this.bp.on('profile::status', 'update-profile-status', status => {\n        if (status === 'signout') {\n            this.logout()\n        }\n        this.client.setStatus(this.bp.me, { status }, function (err, re) {\n            if (err) {\n                console.error('error setting status', err);\n            }\n            // console.log('setStatus', err, re);\n        });\n        /*\n        buddypond.setStatus(this.bp.me, { status }, function(err, re){\n            // console.log('errrrr', err, re);\n        });\n        */\n\n    });\n\n    this.bp.on('buddy::messages', 'render-chat-message', data => this.handleChatMessages(data));\n    this.bp.on('buddy::sendMessage', 'send-buddy-message-to-server', data => this.sendMessageToServer(data));\n    // this.bp.on('pond::sendMessage', 'send-pond-message-to-server', data => this.sendPondMessageToServer(data));\n\n    //this.bp.on('buddy::sendMessage', 'process-buddymessage-bs', data => this.bp.apps.buddyscript.parseCommand(data.text));\n    //this.bp.on('pond::sendMessage', 'process-pondmessage-bs', data => this.bp.apps.buddyscript.parseCommand(data.text));\n\n    // remote isTyping event from server\n    // TODO: move to separate file\n    this.bp.on(\"buddy::isTyping\", \"show-is-typing-message\", message => {\n        // console.log('show-is-typing-message', message);\n        // TODO: move to separate file\n        // TODO: move this to a separate file / function\n        // Handling typing message display\n        if (message.isTyping === true) {\n            // check to see if message.from is the same as the current user\n            // if so, ignore the message\n            if (message.from === this.bp.me) {\n                return;\n            }\n\n            // check the ctime of the message\n            // console.log(\"isTyping message\", message);\n            let messageTime = new Date(message.ctime);\n            // console.log(\"messageTime\", messageTime.getTime());\n            let now = new Date().getTime();\n            let windowId;\n            if (message.type === 'buddy') {\n                if (message.to === this.bp.me) {\n                    windowId = `messages/${message.from}`;\n                } else {\n                    windowId = `messages/${message.to}`;\n                }\n            }\n\n            if (message.type === 'pond') {\n                // windowId = `pond_message_-${message.to}`;\n                windowId = 'pond-chat';\n            }\n\n            let chatWindow = this.bp.apps.ui.windowManager.getWindow(windowId);\n            // don't process isTyping messages over 3 seconds old\n            if (now - messageTime.getTime() > 3000) {\n                // console.log(\"isTyping message too old\", message);\n                // return;\n            }\n\n            // console.log('typing message', message);\n\n            let typingIndicatorId = `typing-${message.from}`;\n            let typingMessage = `${message.from} is typing...`;\n\n            if (message.type === 'pond') {\n                // we need to determine if the current open pond aim-messages-container matches the message.to\n                if (chatWindow.currentActiveContext !== message.to) {\n                    console.log('pond chat window is not active for this pond', message.to);\n                    return;\n                }\n            }\n\n\n            // Check if the typing indicator for this user already exists\n            let typingIndicator = $(`.aim-typing span[data-user=\"${message.from}\"]`, chatWindow.content);\n            // console.log('typingIndicator', typingIndicator);\n            // console.log('typingMessage', typingMessage);\n            if (typingIndicator.length === 0) {\n                // If it does not exist, create a new span and append it to the .aim-typing area\n                typingIndicator = $('<span></span>')\n                    .attr('data-user', message.from)\n                    .text(typingMessage)\n                    .appendTo($('.aim-typing', chatWindow.content));\n            } else {\n                // If it exists, just update the text\n                typingIndicator.text(typingMessage);\n            }\n\n            // Clear any existing timeout for this user\n            // console.log(\"CLEARING OLD TIMER\")\n            if (this.showingIsTyping[typingIndicatorId]) {\n                clearTimeout(this.showingIsTyping[typingIndicatorId]);\n            }\n\n            // console.log(\"CREATING NEW TIMER\")\n            // Set a new timeout to remove the typing message after very short pause\n            // since there already is a delay from the server\n            this.showingIsTyping[typingIndicatorId] = setTimeout(() => {\n                typingIndicator.remove();\n            }, 500);\n            return;\n        }\n    })\n\n    // local typing event TOOD: better name\n    // when buddy is typing send a message to the ws server\n    this.bp.on('buddy::typing', 'send-typing-message-to-server', data => {\n        // we don't want to spam typing messages, so we will only send a message every 2 seconds\n        this.lastTypingMessage = this.lastTypingMessage || 0;\n        if (new Date().getTime() - this.lastTypingMessage < 2000) {\n            // return;\n        }\n        this.lastTypingMessage = new Date().getTime();\n        // console.log('buddy::typing', data);\n\n        let chatId = '';\n\n        if (data.type === 'buddy') {\n            let buddyNames = [data.from, data.to].sort();\n            chatId = 'buddy/' + buddyNames.join('/');\n        }\n\n        if (data.type === 'pond') {\n            chatId = 'pond/' + data.to;\n        }\n\n        bp.apps.client.sendWsMessage(chatId, {\n            action: 'send',\n            chatId: chatId,\n            buddyname: buddypond.me,\n            qtokenid: buddypond.qtokenid,\n            message: {\n                ...data,\n                chatId,\n                isTyping: true\n            }\n        });\n        /*\n        if (data.type === 'pond') {\n            this.sendPondMessageToServer(data, false);\n        } else {\n            this.sendMessageToServer(data, false);\n        }\n        */\n        // this.bp.apps.client.sendMessage({ id: uuid(), method: 'sendMessage', data: data });\n\n\n    });\n\n    // TODO: this handler could instead bind to bp.apps.system.messages\n    // a System allows for sending and receiving messages to a sequence of handlers\n    /*\n    */\n    // the buddylist registers with the \"messages\" system\n    // in order to receive messages from other systems\n    /*\n    // this will get or create a system called \"messages\"\n    // the send and recieve handlers should get ordered in the order they are registered\n    // unless the order is specified, which should put the system in the correct order by number values and then undefined last\n    bp.apps.system.registerSystem('messages', {\n        registrant: 'buddylist',\n        send: {\n            // since send is missing name and handler, it will be ignored\n        },\n        receive: {\n            name: 'buddylist-processes-messages',\n            order: 2, // we can stack multiple systems in order\n            handler: (message) => {\n                console.log('buddylist-processes-messages', message);\n            }\n        }\n    });\n    // this event can be anywhere, doesn't have to be in the buddylist\n    // prob should be though :-D\n    // by sending the events to the messages system, they will \n    // go through the processing chain ( if any exists for that system )\n    // and then we recieved via the receive handler\n    this.bp.on(\n        'buddy::messages',\n        'send-messages-to-messages-system',\n        data => this.bp.apps.systems.messages.send({\n            name: 'buddylist-processes-messages',\n            data: data\n    }));\n   // example of another app which filters messages\n\n    bp.apps.system.registerSystem('messages', {\n        registrant: 'shorten-text',\n        send: {\n            // since send is missing name and handler, it will be ignored\n        },\n        receive: {\n            name: 'shorten-text',\n            order: 1, // we can stack multiple systems in order\n            handler: (message) => {\n                console.log('shorten text', message);\n                return message.text.substr(0, 1);\n            }\n        }\n    });\n    */\n    this.bp.on('buddylist-websocket::reward', 'update-local-coin-balance', data => {\n        // TODO: move this into rewards app\n        //$('#menu-bar-coin-balance').text(data.message.newBalance);\n        if (!data.success) {\n            console.log(data.message);\n            return;\n        }\n        rollToNumber($('#menu-bar-coin-balance'), data.message.newBalance)\n\n        // TODO: better condition to check if portfolio app is loaded and ready\n        if (this.bp.apps.portfolio && this.bp.apps.portfolio.portfolioWindow && this.bp.apps.portfolio.portfolioWindow.content && this.bp.apps.portfolio.portfolioData) {\n\n            this.bp.apps.portfolio.updateCoinRow(data.message.symbol, {\n                symbol: data.message.symbol,\n                amount: data.message.newBalance,\n                available: data.message.newBalance,\n                price: 0.001,\n                cost: 0.001 * data.message.newBalance\n            });\n\n            let coinSendSelector = $('#coin-send-name');\n            let coinSendBalance = $('#current-balance');\n\n            // if coinSendSelector value is \"GBP\"\n            if (coinSendSelector.val() === 'GBP') {\n                // set the coin balance to the new balance\n                // window.rollToNumber(coinSendBalance, data.message.newBalance)\n                const formattedValue = data.message.newBalance.toLocaleString('en-US');\n\n                coinSendBalance.text(formattedValue);\n            }\n        }\n    });\n\n    this.bp.on('buddylist-websocket::coinBalance', 'update-local-coin-balance', async (data) => {\n        console.log('buddylist-websocket::coinBalance', data);\n        if (typeof data.message.balance === 'number') {\n            rollToNumber($('#menu-bar-coin-balance'), data.message.balance)\n        } else {\n            this.faucetAttempts++;\n            // should work on 1, adds safe guard in case service is down\n            // we don't want to spam the faucet service or getCoinBalance\n            if (this.faucetAttempts < 3) {\n                // request initial coin balance, null indicates no portfolio entry for GBP\n                // if no portfolio entry, request the default coin allocations\n                await this.requestDefaultCoinAllocations();\n                // make another request to get the coin balance\n                this.bp.apps.buddylist.client.wsClient.send(JSON.stringify({\n                    action: 'getCoinBalance',\n                    buddyname: this.bp.me,\n                    qtokenid: this.bp.qtokenid,\n                }));\n            } else {\n                console.warn('BuddyList: Too many faucet attempts, not requesting balance again this session');\n            }\n\n        }\n\n    })\n}\n\nfunction rollToNumber($el, value) {\n    // Format number with commas\n    const formattedValue = value.toLocaleString('en-US');\n    const digits = formattedValue.split('');\n\n    // TODO: fix styles on mobile for rolling odometer\n    if (bp.isMobile()) {\n        // For mobile, just set the text directly\n        $el.text(formattedValue);\n        return;\n    }\n\n    // Clear and rebuild digits\n    $el.empty();\n\n    digits.forEach((d, index) => {\n        // Handle comma separately\n        if (d === ',') {\n            $el.append('<span class=\"odometer-comma\">,</span>');\n            return;\n        }\n\n        const digitContainer = $('<div class=\"odometer-digit\"></div>');\n        const inner = $('<div class=\"odometer-digit-inner\"></div>');\n\n        for (let i = 0; i <= 9; i++) {\n            inner.append(`<span>${i}</span>`);\n        }\n\n        digitContainer.append(inner);\n        $el.append(digitContainer);\n\n        // Delay added to force DOM layout flush, staggered for each digit\n        setTimeout(() => {\n            inner.css({\n                'transition': 'transform 0.5s ease-in-out', // Smooth transition\n                'transform': `translateY(-${d * 1}em)`\n            });\n        }, 50 + index * 100); // Base delay + staggered delay per digit\n    });\n}","import createWebSocketClient from './createWebSocketClient.js';\n\nexport default class Client {\n  constructor(bp, options = {}) {\n    this.bp = bp;\n    this.config = {\n      host: \"\",\n      api: \"\",\n    };\n\n    this.api = buddypond;\n\n    this.reconnectAttempts = 0;\n    this.maxReconnectAttempts = 999999; // Set to a high number for unlimited attempts\n    this.maxBackoffDelay = 10000; // 10 seconds\n    this.isIntentionallyClosed = false; // Flag to track intentional closure\n\n    return this;\n  }\n}\n\nClient.prototype.connect = async function connectBuddyListWs() {\n  console.log(\"Connecting to BuddyList WebSocket...\");\n  this.wsClient = await this.createWebSocketClient();\n  console.log(\"Connected to BuddyList WebSocket!\");\n  // TODO: needs to return / await the connection event\n  // TODO: should emit buddylist::connected event ( not auth::qtokenid event )\n  this.bp.emit('buddylist::connected', this.wsClient);\n}\n\nClient.prototype.disconnect = async function disconnectBuddyListWs() {\n  console.log(\"Attempting disconnecting from BuddyList WebSocket...\");\n  if (this.wsClient) {\n    this.wsClient.closeConnection();\n    this.wsClient = null;\n    console.log(\"Disconnected from BuddyList WebSocket\");\n  } else {\n    console.log(\"No active WebSocket connection to disconnect\");\n  }\n}\n\nClient.prototype.addBuddy = async function addBuddy(buddyname, cb) {\n  console.log(\"NEW Calling addBuddy\", this, buddyname);\n\n  apiRequest('/buddylist/' + this.bp.me + '/add-buddy', 'POST', {\n    buddyname: buddyname\n  }, function (err, data) {\n    cb(err, data);\n  })\n}\n\nClient.prototype.receivedInstantMessage = async function receivedInstantMessage(buddyName, cb) {\n  this.wsClient.send(JSON.stringify({\n    action: \"receivedInstantMessage\",\n    buddyname: buddyName,\n  }));\n  cb(null);\n}\n\nClient.prototype.setStatus = async function setStatus(buddyName, update, cb = function noop () {}) {\n  // use wsClient to send the status update\n  // console.log('calling setStatus', buddyName, update);\n  this.wsClient.send(JSON.stringify({\n    action: \"setStatus\",\n    buddyname: buddyName,\n    status: update.status,\n    profilePicture: update.profilePicture\n  }));\n  cb(null);\n};\n\nClient.prototype.createWebSocketClient = createWebSocketClient;\n\nfunction apiRequest(uri, method, data, cb) {\n  let url;\n\n  url = buddypond.endpoint + uri;\n\n  // console.log(\"making apiRequest\", url, method, data);\n\n  let headers = {\n    \"Accept\": \"application/json\",\n    \"Content-Type\": \"application/json; charset=utf-8\",\n    \"X-Me\": buddypond.me, // ✅ Include X-Me header for user identification\n  };\n\n  if (buddypond.qtokenid) {\n    headers[\"Authorization\"] = `Bearer ${buddypond.qtokenid}`; // ✅ Use Authorization header\n  }\n\n  let body = method === \"POST\" ? JSON.stringify(data) : undefined;\n\n  // Prepare fetch options\n  const options = {\n    method: method,\n    headers: headers,\n    body: body,\n    // credentials: \"include\",  // ✅ Allow CORS with cookies/auth headers\n  };\n\n  // Handling fetch timeout manually\n  const controller = new AbortController();\n  const timeoutId = setTimeout(() => controller.abort(), 30000); // 30 sec timeout\n\n  buddypond.incrementPackets(\"packetsSent\");\n  let perf = { start: new Date() };\n  // console.log(\"apiRequest\", url, options);\n  fetch(url, { ...options, signal: controller.signal })\n    .then(response => {\n      clearTimeout(timeoutId);\n      if (!response.ok) {\n        // Parse JSON for non-2xx responses\n        return response.json().then(errorData => {\n          // Create a custom error with status and JSON data\n          const error = new Error(`HTTP ${response.status}: ${response.statusText}`);\n          error.status = response.status;\n          error.data = errorData; // Attach JSON payload\n          throw error;\n        });\n      }\n      return response.json();\n    })\n    .then(data => {\n      buddypond.incrementPackets(\"packetsReceived\");\n      perf.end = new Date();\n      buddypond.addPerfTime(perf);\n      cb(null, data);\n    })\n    .catch(error => {\n      let msg = \"Fetch connection error. Retrying shortly.\";\n      if (error.name === \"AbortError\") {\n        msg = \"Fetch request timeout\";\n      } else if (error.message.includes(\"Payload Too Large\")) {\n        msg = \"File upload was too large. Try a smaller file.\";\n      } else if (error.status === 400 && error.data) {\n        // Use the JSON payload from the 400 error\n        msg = error.data.error || error.data.message || \"Invalid input. Please try again.\";\n      } else {\n        msg = error.message;\n      }\n      console.error(\"❌ API Request Failed:\", error);\n      cb(new Error(msg), error.data || null);\n    });\n}","// TODO: decouple Buddylist class from Message Class\n// TODO: formalize Message class\n\nimport processBuddylist from \"./lib/processProfile.js\";\nimport renderOrUpdateBuddyInBuddyList from \"./lib/renderOrUpdateBuddyInBuddyList.js\";\nimport createChatMessageElement from \"./lib/message/createChatMessageElement.js\";\nimport renderChatMessage from \"./lib/message/renderChatMessage.js\";\nimport renderBuddyRequests from \"./lib/renderBuddyRequests.js\";\nimport buddylistUIEvents from \"./lib/buddylistUIEvents.js\";\nimport openChatWindow from \"./lib/openChatWindow.js\";\nimport generateDefaultProfile from \"./lib/generateDefaultProfile.js\";\nimport requestDefaultCoinAllocations from \"./lib/requestDefaultCoinAllocations.js\";\nimport defaultChatWindowButtons from \"./lib/defaultChatWindowButtons.js\";\nimport sortBuddyList from \"./lib/sortBuddyList.js\";\n// buddylist context menu\nimport showContextMenu from \"./lib/showContextMenu.js\";\n// chat message context menu\nimport bindMessageContextMenu from \"./lib/message/bindMessageContextMenu.js\";\nimport createMessageContextMenu from \"./lib/message/createMessageContextMenu.js\";\nimport loadUserApps from \"./lib/loadUserApps.js\";\n\nimport sendMessageHandler from \"./lib/message/sendMessageHandler.js\";\nimport showCard from \"./lib/message/showCard.js\";\nimport scrollToBottom from \"./lib/message/scrollToBottom.js\";\nimport forbiddenNotes from \"./lib/forbiddenNotes.js\";\n\nimport registerEventHandlers from \"./lib/registerEventHandlers.js\";\nimport createBuddyListWindow from \"./lib/createBuddyListWindow.js\";\nimport logout from \"./lib/logout.js\";\n\nimport defaultAvatarSvg from \"./lib/buddy/defaultAvatarSvg.js\";\n\n// new ws api\nimport Client from './lib/ws/Client.js';\n\n// TODO: why does client care about making UUID at all?\n// this is the responsibility of the server\n// TODO: remove uuid(), is most likely used for local render of message before server confirms ( which is removed atm )\nfunction uuid() {\n    return new Date().getTime();\n}\n\nexport default class BuddyList {\n    constructor(bp, options = {}) {\n        this.bp = bp;\n        this.data = {\n            processedMessages: {},\n            profileState: {\n                me: null,\n                status: null, // are these used?\n                profilePicture: null, // are these used?\n                updates: {}\n            },\n            avatarCache: new Map()\n        };\n\n        this.defaultPond = 'Buddy';\n        this.subscribedBuddies = [];\n        this.subscribedPonds = [];\n        this.options = options;\n\n        // ensures autocomplete options are always used regardless of entry\n        if (bp.apps.buddyscript && bp.apps.buddyscript.commands) {\n            this.options.autocomplete = bp.apps.buddyscript.commands;\n        }\n\n        this.showedHelp = false;\n\n        // alias global logout to the buddylist logout\n        // buddylist logout will handle both buddylist and message logout\n        this.bp.logout = this.logout.bind(this);\n\n        // pull in the default button\n        this.options.chatWindowButtons = this.options.chatWindowButtons || defaultChatWindowButtons(this.bp);\n\n        // add any active buttons that have been added in this session\n        // add the this.bp.apps.desktop.enabledChatWindowButtons array to this.options.chatWindowButtons\n\n        let enabledChatWindowButtons = true;\n        if (this.bp.apps.desktop && typeof this.bp.apps.desktop.enabledChatWindowButtons === 'boolean') {\n            enabledChatWindowButtons = this.bp.apps.desktop.enabledChatWindowButtons;\n        }\n        // iterate through each button and fetch the appList data.chatButton data ( hydrate the button )\n        if (enabledChatWindowButtons && Array.isArray(enabledChatWindowButtons)) {\n            enabledChatWindowButtons.forEach(buttonMeta => {\n                let app = this.bp.apps.list[buttonMeta.name];\n                if (app && app.chatButton) {\n                    this.options.chatWindowButtons.push(app.chatButton);\n                }\n            });\n        }\n\n        this.opened = false;\n        this.showingIsTyping = this.showingIsTyping || {};\n        this.activeMessageContextMenu = null;\n        this.faucetAttempts = 0;\n\n    }\n\n    async init() {\n        // Add event when user closes browser window or navigates away\n        window.addEventListener('beforeunload', (event) => {\n            if (this.client) {\n                this.client.setStatus(this.bp.me, {\n                    status: 'offline'\n                }, function (err, re) {\n                    console.log('buddypond.setStatus', err, re);\n                });\n\n            }\n        });\n\n        await Promise.all([\n            this.bp.vendor.dicebear = await this.bp.importModule('/v5/apps/based/buddylist/vendor/dicebear.core.js', {}, false),\n            this.bp.vendor.dicebearAvatars = await this.bp.importModule('/v5/apps/based/buddylist/vendor/dicebear.identicon.js', {}, false),\n            await this.bp.appendScript('/v5/apps/based/buddylist/vendor/marked.min.js'),\n            await bp.load('emoji-picker'),\n            await bp.load('buddyscript'),\n            await bp.load('card'),\n            await bp.load('pond')\n        ]);\n\n        this.bindMessageContextMenu();\n        this.forbiddenNotes = forbiddenNotes;\n\n    }\n\n    async open(config = { type: 'buddylist-profile' }) {\n        // buddylist supports (2) window types for bp.open('buddylist, { type: 'buddylist-profile' })\n        // 'buddylist-profile' - the default buddylist window\n        // 'buddylist-chat' - a chat window\n        // console.log('BuddyList open config', config)\n\n        if (typeof config.type !== 'string') {\n            config.type = 'buddylist-profile';\n        }\n\n        if (config.openDefaultPond === true) {\n            this.openDefaultPond = true;\n        }\n\n        // check localStorage for buddylist.openDefaultPond\n        let localValue = bp.get('openPondChatRooms');\n\n        if (localValue === true || typeof localValue === 'undefined') {\n            this.openDefaultPond = true;\n        }\n\n        if (config.showPond === false) {\n            this.showPond = false;\n        }\n\n        if (config.type === 'buddylist-profile') {\n\n            // TODO: have the ability to close and re-open the buddylist gracefully\n            const htmlStr = await this.bp.fetchHTMLFragment('/v5/apps/based/buddylist/buddylist.html');\n            this.messageTemplateString = await this.bp.fetchHTMLFragment('/v5/apps/based/buddylist/message.html');\n            this.bp.appendCSS('/v5/apps/based/buddylist/buddylist.css');\n            this.bp.appendCSS('/v5/apps/based/buddylist/messages.css');\n\n            if (this.opened) {\n                // console.log('BuddyList already opened, focusing existing window');\n                if (!this.buddyListWindow) {\n                    const buddyListWindow = this.createBuddyListWindow();\n                    buddyListWindow.content.appendChild(this.createHTMLContent(htmlStr));\n                    this.buddyListWindow = buddyListWindow;\n                }\n                this.buddyListWindow.open();\n                this.bp.apps.ui.windowManager.focusWindow(this.buddyListWindow);\n                this.buddyListWindow.restore();\n                $('.loginForm input[name=\"username\"]').focus();\n                return 'buddylist already open';\n            }\n\n            this.opened = true;\n\n            // loads affirmations messages via the affirmations app\n            let affirmations = await this.bp.importModule('affirmations');\n\n            if (config.showBuddyList !== false) {\n                const buddyListWindow = this.createBuddyListWindow();\n                buddyListWindow.content.appendChild(this.createHTMLContent(htmlStr));\n                this.buddyListWindow = buddyListWindow;\n            }\n\n            if (this.eventsBound !== true) {\n                // TODO: it would be better if we unregister events on close\n                // and left this close to re-bind on open\n                this.registerEventHandlers();\n            }\n\n            this.buddylistUIEvents();\n\n            this.handleAuthentication();\n\n            this.eventsBound = true;\n\n\n            return 'hello buddyList';\n        }\n\n        // Remark: is this code still used? can we remove? handled by openChatWindow\n        // called from elsewhere?\n        if (config.type === 'pond') {\n            console.log('BuddyList open config.type is pond', config);\n            // the type of window is a chat window\n            // we *don't* need to re-render the buddylist-profile \n            this.openChatWindow(config);\n        }\n\n        if (config.type === 'chat' || config.type === 'buddy') {\n            // the type of window is a chat window\n            // we *don't* need to re-render the buddylist-profile \n            this.openChatWindow(config);\n        }\n\n    }\n\n    createHTMLContent(htmlStr) {\n        const html = document.createElement('div');\n        html.innerHTML = htmlStr;\n        $('.loginForm input[name=\"username\"]').focus();\n        return html;\n    }\n\n    getLatestMessages() {\n        // This can also be called when closing a chat window to let the server\n        // know we are no longer interested in messages from that buddy or pond\n        const data = {\n            buddyname: this.subscribedBuddies.join(','),\n            pondname: this.subscribedPonds.join(','),\n            me: this.bp.me\n        };\n        this.bp.apps.client.sendMessage({ id: uuid(), method: 'getMessages', data: data });\n    }\n\n    buddyReadNewMessages(data) {\n        this.bp.log(\"BuddyReadNewMessages\", data);\n        const buddyName = data.name;\n    }\n\n    async handleChatMessages(data) {\n        // console.log('handleChatMessages', data);\n        let windowsToUpdate = new Set();\n        for (const message of data.result.messages) {\n            try {\n                // check to see if we have newMessages in local profile for message.from\n                // if so, send buddypond.receiveInstantMessage(message.from)\n                if (message.from && this.data.profileState && this.data.profileState.buddylist && this.data.profileState.buddylist[message.from] && this.data.profileState.buddylist[message.from].newMessages) {\n                    // console.log(\"SENDING READ NEWMESSAGES ALERT\");\n                    this.data.profileState.buddylist[message.from].newMessages = false;\n                    this.client.receivedInstantMessage(message.from, function (err, re) {\n                        console.log('receivedInstantMessage', err, re);\n                    });\n                }\n                // console.log('handleChatMessages message', message);\n                // return the chatWindow which the message was rendered in\n                let chatWindow = await this.renderChatMessage(message);\n                windowsToUpdate.add(chatWindow);\n\n            } catch (err) {\n                console.log('error rendering chat message', message, err)\n            }\n        }\n        for (const chatWindow of windowsToUpdate) {\n            if (chatWindow && chatWindow.content) {\n                this.scrollToBottom(chatWindow.content);\n            }\n        }\n        // show help card if local storage does not have the card shown\n        if (!this.showedHelp && this.bp.settings['viewed-help-card'] !== true && !this.bp.isMobile()) {\n            let chatWindow = windowsToUpdate.values().next().value;\n            if (chatWindow && chatWindow.type === 'pond') {\n                this.showCard({\n                    chatWindow,\n                    cardName: 'help'\n                });\n                // console.log('showing help card', chatWindow);\n                this.showedHelp = true;\n            }\n        }\n\n    }\n\n    sendMessageToServer(data, emitLocal = false) {\n        this.bp.log('buddy::sendMessage', data);\n        data.uuid = uuid();\n\n        if (data.text === '') {\n            console.log('will not sendMessageToServer: no text');\n            return;\n        }\n\n        // so confusing client.sendMessage....maybe should be sendWorkerMessage...dunno\n        if (data.type === 'pond') {\n            console.log('sendMessageToServer', data);\n            buddypond.pondSendMessage(data.to, data.text, data, function (err, result) {\n                console.log('pondSendMessage', err, result)\n                console.log(err, result)\n            })\n\n        }\n        if (data.type === 'buddy') {\n            console.log('sendMessageToServer', data);\n            buddypond.sendMessage(data.to, data.text, data, function (err, result) {\n                console.log('pondSendMessage', err, result)\n                console.log(err, result)\n            });\n        }\n\n    }\n\n    // called on open to verify token ( if exists )\n    // signup / login logic is in buddylistUIEvents.js\n    handleAuthentication() {\n\n        if (this.bp.connected) {\n            // return;\n        }\n\n        const api = this.bp.apps.client.api;\n        const localToken = localStorage.getItem('qtokenid');\n        const me = localStorage.getItem('me');\n        if (!localToken) return;\n        // console.log('localToken', localToken, me);\n        api.verifyToken(me, localToken, (err, data) => {\n            if (err) {\n                console.error('Failed to verify token:', err);\n                $('.password').show();\n                $('.loginForm .error').text('Failed to authenticate buddy');\n                return;\n            }\n            console.log('verified token', data);\n            if (data.success) {\n                // A pre-existing token was found and verified, emit the auth event\n                this.bp.emit('auth::qtoken', { qtokenid: localToken, me: me, hasPassword: data.user.hasPassword });\n                $('.loggedIn').flexShow();\n                $('.loggedOut').flexHide();\n                if (window.discordView) {\n                    // minimize window\n                    this.buddyListWindow.minimize();\n                } else {\n                    if (!data.user.hasPassword) {\n                        this.bp.open('pincode');\n                    }\n                }\n            } else {\n                $('.loginForm .error').text('Failed to authenticate buddy');\n                $('.password').show();\n                console.error('Failed to authenticate buddy:');\n            }\n        });\n    }\n\n    // TODO: this event should only set the qtokenid and local settings?\n    // it could open the chat window?\n    // maybe also could connect to the websocket server for buddylist?\n    // opening the default window initializes the messages client\n    async handleAuthSuccess(qtoken) {\n        // console.log('handleAuthSuccess', qtoken);\n        this.bp.connected = true;\n        this.bp.me = qtoken.me;\n        this.bp.qtokenid = qtoken.qtokenid;\n        this.data.profileState = this.data.profileState || {};\n        this.data.profileState.me = this.bp.me;\n\n        $('#me_title').html('Welcome ' + this.bp.me);\n\n        // TODO: connect-to-websocket-server should happen here\n        // plays welcome message\n\n        if (!this.client) {\n\n            this.bp.play('desktop/assets/audio/WELCOME.mp3', { tryHard: Infinity });\n\n            // this will eventually trigger the buddylist::connected event\n            try {\n                this.client = new this.Client(bp);\n                let connected = await this.client.connect();\n            } catch (err) {\n                console.error('Error connecting to BuddyList client:', err);\n            }\n        }\n\n        if (!window.discordView) {\n            if (!qtoken.hasPassword) {\n                // if the user does not have a password, open the pincode window\n                this.bp.open('pincode');\n            }\n        }\n\n        // check if window.tempDiscordId has been set\n        // if so, this indicates user is attempting to link their Discord account\n        // and we first not logged in when clicking the link\n        // if this is the case, re-run window.linkDiscordAccount(window.tempDiscordId);\n        if (window.tempDiscordId) {\n            console.log('linking Discord account', window.tempDiscordId);\n            // link the Discord account\n            window.linkDiscordAccount(window.tempDiscordId);\n            // clear the tempDiscordId\n            window.tempDiscordId = null;\n        }\n\n        // wait until buddylist is connected and then opens default chat window if defined\n        if (this.defaultPond && this.openDefaultPond === true) {\n            setTimeout(() => {\n                // console.log('Opening default pond chat window', this.defaultPond);\n                let chatWindow = this.openChatWindow({ pondname: this.defaultPond });\n                if (window.discordView) {\n                    chatWindow.minimize();\n                }\n                // loads the hotpond client that populates room lists\n                bp.load('pond');\n            }, 100);\n        }\n\n    }\n}\n\nBuddyList.prototype.renderOrUpdateBuddyInBuddyList = renderOrUpdateBuddyInBuddyList;\nBuddyList.prototype.createChatMessageElement = createChatMessageElement;\nBuddyList.prototype.renderChatMessage = renderChatMessage;\nBuddyList.prototype.renderBuddyRequests = renderBuddyRequests;\nBuddyList.prototype.processBuddylist = processBuddylist;\nBuddyList.prototype.buddylistUIEvents = buddylistUIEvents;\nBuddyList.prototype.openChatWindow = openChatWindow;\nBuddyList.prototype.generateDefaultProfile = generateDefaultProfile;\nBuddyList.prototype.requestDefaultCoinAllocations = requestDefaultCoinAllocations;\nBuddyList.prototype.sortBuddyList = sortBuddyList;\nBuddyList.prototype.showContextMenu = showContextMenu;\n\nBuddyList.prototype.createMessageContextMenu = createMessageContextMenu;\nBuddyList.prototype.bindMessageContextMenu = bindMessageContextMenu;\nBuddyList.prototype.loadUserApps = loadUserApps;\nBuddyList.prototype.sendMessageHandler = sendMessageHandler;\nBuddyList.prototype.showCard = showCard;\nBuddyList.prototype.scrollToBottom = scrollToBottom;\n\nBuddyList.prototype.defaultAvatarSvg = defaultAvatarSvg;\nBuddyList.prototype.registerEventHandlers = registerEventHandlers;\nBuddyList.prototype.createBuddyListWindow = createBuddyListWindow;\nBuddyList.prototype.logout = logout;\n\n// new API\nBuddyList.prototype.Client = Client;","// Remark: createWebSocketClient is a prototype method of Client, as Client.createWebSocketClient()\nexport default function createWebSocketClient(reconnect = false) {\n  // Track reconnect state\n\n  console.log(`Creating WebSocket client for buddylist`);\n  return new Promise((resolve, reject) => {\n    const wsClient = new WebSocket(\n      `${buddypond.buddylistWsEndpoint}?me=${buddypond.me}&qtokenid=${buddypond.qtokenid}`\n    );\n\n    // Handle open event\n    const handleOpen = () => {\n      console.log('WebSocket connection opened to buddylist');\n      this.reconnectAttempts = 0; // Reset reconnect attempts\n\n      this.wsClient = wsClient; // Store the WebSocket instance\n\n      wsClient.send(\n        JSON.stringify({\n          action: 'getProfile',\n          buddyname: buddypond.me,\n          qtokenid: buddypond.qtokenid,\n        })\n      );\n\n      if (reconnect) {\n        wsClient.send(JSON.stringify({\n          action: \"setStatus\",\n          buddyname: buddypond.me,\n          status: 'online',\n        }));\n\n      }\n\n      // alert('set initial status to offline');\n      // Emit connected event\n      bp.emit('buddylist-websocket::connected');\n\n      this.pingInterval = setInterval(() => {\n        if (wsClient.readyState === WebSocket.OPEN) {\n          // console.log('Sending ping to buddylist WebSocket');\n          wsClient.send('ping'); // Matches server's setWebSocketAutoResponse(\"ping\", \"pong\")\n        }\n      }, 25000);\n\n      resolve(wsClient); // Resolve with the WebSocket instance\n    };\n\n    // Handle message event\n    // TODO: move to a separate function\n    const handleMessage = (event) => {\n      if (event.data === 'pong') {\n        // console.log('Received pong from server');\n        return; // Ignore pong messages\n      }\n      try {\n        const parseData = JSON.parse(event.data);\n        // console.log('Got back from server:', parseData);\n        switch (parseData.action) {\n          case 'buddy_added':\n            // console.log('buddy_added WebSocket message received:', parseData);\n            bp.emit('profile::buddy::in', {\n              name: parseData.buddyname,\n              profile: parseData.profile || { ctime: new Date().getTime(), dtime: 0 },\n            });\n            break;\n\n          case 'getRemoteProfiles':\n            // console.log('getRemoteProfiles message received:', parseData);\n            if (parseData.profile && parseData.profile.buddylist) {\n              bp.emit('profile::fullBuddyList', parseData.profile);\n            } else {\n              console.error('getProfile message received but no buddylist:', parseData);\n            }\n\n            break;\n          case 'getProfile':\n            // console.log('getProfile message received:', parseData);\n\n            if (parseData.profile && parseData.profile.buddylist) {\n              bp.emit('profile::fullBuddyList', parseData.profile);\n            } else {\n              console.error('getProfile message received but no buddylist:', parseData);\n            }\n            // TODO: after getting profile, create a new call that wil fetch all buddies DO's to get\n            // most updated state ( a reverse of setStatus() call )\n            // this will ensure we always get the most recent updates for all buddies in case our DO\n            // wasn't updated or missed an update or setStatus() truncation limit for users not recently active\n            // send a message now to getRemoteProfiles\n            console.log('Requesting remote profile backfill for all buddies');\n            // After getting the initial profile ( single DO state, quick load ),\n            // we can request remote profiles for all buddies\n            // This will fetch all buddies DO's and get their most recent state\n            // This is useful for getting the most recent updates for all buddies in case our DO\n            // wasn't updated or missed an update or setStatus() truncation limit for users not recently active\n            wsClient.send(\n              JSON.stringify({\n                action: 'getRemoteProfiles',\n                buddyname: buddypond.me,\n                qtokenid: buddypond.qtokenid,\n              })\n            );\n            break;\n          case 'ping':\n            // console.log('pong message received:', parseData);\n            break;\n          case 'buddy_removed':\n            // alert('buddy_removed WebSocket message received:', parseData);\n            console.log('buddy_removed WebSocket message received:', parseData);\n            this.bp.emit('profile::buddy::out', { name: parseData.buddyname });\n            break;\n          case 'rewards:response':\n            // console.log('rewards:response message received:', parseData);\n            if (parseData.success) {\n              bp.emit('buddylist-websocket::reward', {\n                success: true,\n                message: parseData.message,\n                reward: parseData.reward,\n              });\n\n            } else {\n              bp.emit('buddylist-websocket::reward', {\n                success: false,\n                message: parseData.message,\n              });\n            }\n            break;\n          case 'getCoinBalance':\n            // console.log('getCoinBalance message received:', parseData);\n            if (parseData.success) {\n              bp.emit('buddylist-websocket::coinBalance', parseData);\n            } else {\n              bp.emit('buddylist-websocket::coinBalance', parseData);\n            }\n            break;\n          default:\n            console.log('Last message:', event.data);\n            console.warn('Unknown action received:', parseData);\n            break;\n        }\n      } catch (error) {\n        console.log('Last message:', event.data);\n        console.error('Error parsing WebSocket message:', error);\n        bp.emit('buddylist-websocket::error', { error: 'Message parsing failed' });\n      }\n    };\n\n    // Handle close event\n    const handleClose = (event) => {\n      console.log('WebSocket connection closed to', 'buddylist', 'Code:', event.code, 'Reason:', event.reason);\n\n      clearInterval(this.pingInterval);\n\n      bp.emit('buddylist-websocket::disconnected', { code: event.code, reason: event.reason });\n\n      // Reconnect only if not intentionally closed\n      if (!this.isIntentionallyClosed && this.reconnectAttempts < this.maxReconnectAttempts) {\n        const delay = Math.min(\n          200 * Math.pow(2, this.reconnectAttempts) * (1 + 0.1 * Math.random()), // Exponential backoff with jitter\n          this.maxBackoffDelay\n        );\n        console.log(`Scheduling reconnect attempt ${this.reconnectAttempts + 1} for buddylist in ${delay}ms`);\n        setTimeout(async () => {\n          this.reconnectAttempts++;\n          bp.emit('buddylist-websocket::reconnecting', { attempt: this.reconnectAttempts });\n          try {\n            this.wsClient = await this.createWebSocketClient(true); // Attempt to reconnect\n            // Update event listeners to the new WebSocket instance\n          } catch (error) {\n            console.error('Reconnect failed:', error);\n          }\n        }, delay);\n      } else if (this.reconnectAttempts >= this.maxReconnectAttempts) {\n        console.error(`Max reconnect attempts (${this.maxReconnectAttempts}) reached for buddylist. Giving up.`);\n        bp.emit('buddylist-websocket::reconnect_failed');\n      }\n    };\n\n    // Handle error event\n    const handleError = (event) => {\n      console.error('WebSocket error buddylist', event);\n      bp.emit('buddylist-websocket::error', { error: 'WebSocket error' });\n      // Reject the promise if connection hasn't opened yet\n      if (wsClient.readyState !== WebSocket.OPEN) {\n        reject(new Error('WebSocket connection failed'));\n      }\n      // Close to trigger reconnect logic in handleClose\n      wsClient.close(1000, 'Error occurred');\n    };\n\n    // Add event listeners\n    wsClient.addEventListener('open', handleOpen.bind(this));\n    wsClient.addEventListener('message', handleMessage.bind(this));\n    wsClient.addEventListener('close', handleClose.bind(this));\n    wsClient.addEventListener('error', handleError.bind(this));\n\n    // Method to intentionally close the WebSocket\n    wsClient.closeConnection = () => {\n      this.isIntentionallyClosed = true;\n      console.log(`Intentionally closing WebSocket for buddylist`);\n      wsClient.close(1000, 'Normal closure');\n      // Remove event listeners to prevent memory leaks\n      wsClient.removeEventListener('open', handleOpen);\n      wsClient.removeEventListener('message', handleMessage);\n      wsClient.removeEventListener('close', handleClose);\n      wsClient.removeEventListener('error', handleError);\n      bp.emit('buddylist-websocket::closed');\n    };\n  });\n}","export default function defaultChatWindowButtons(bp) {\n\n    return [\n        {\n            text: 'Upload File',\n            image: 'desktop/assets/images/icons/icon_upload_64.png',\n            //icon: '<i title=\"Upload File\" class=\"button-bar-button-icon button-bar-button fa-duotone fa-regular fa-upload\"></i>',\n            onclick: async (ev) => {\n                let context = ev.target.dataset.context;\n                let type = ev.target.dataset.type;\n\n                // Create a hidden file input dynamically\n                const fileInput = document.createElement('input');\n                fileInput.type = 'file';\n                fileInput.accept = '*/*'; // customize this if needed (e.g., 'image/*' or '.txt,.pdf')\n                fileInput.style.display = 'none';\n\n                // Append to DOM to make it usable\n                document.body.appendChild(fileInput);\n\n                // Listen for file selection\n                fileInput.addEventListener('change', async () => {\n                    const file = fileInput.files[0];\n                    console.log('Selected file:', file);\n                    if (file) {\n                        file.filePath = 'uploads/' + file.name; // Add filePath if needed\n                        try {\n                            // Optionally show a progress UI\n                            const onProgress = (percent) => {\n                                console.log(`Upload progress: ${percent}%`);\n                            };\n\n                            // Call your API method\n                            let result = await bp.apps.client.api.uploadFile(file, onProgress);\n                            // console.log('Upload successful', result);\n\n                            // send the message with the uploaded file\n                            let message = {\n                                from: bp.me,\n                                to: context,\n                                text: result,\n                                type: type || 'buddy'\n                            }\n                            // console.log('Sending message with uploaded file', message);\n                            bp.apps.client.api.sendCardMessage(message, function (err, response) {\n                                if (err) {\n                                    console.error('Error sending message', err);\n                                } else {\n                                    console.log('Message sent', response);\n                                }\n                            });\n                        } catch (err) {\n                            console.error('Upload failed:', err);\n                        }\n                    }\n\n                    // Clean up\n                    fileInput.remove();\n                });\n\n                // Trigger the file picker\n                fileInput.click();\n\n                return false;\n            }\n        },\n        {\n            text: 'Image Search',\n            image: 'desktop/assets/images/icons/icon_image-search_64.png',\n            onclick: async (ev) => {\n                let context = ev.target.dataset.context;\n                let type = ev.target.dataset.type;\n                // Open the image search window\n                bp.open('image-search', {\n                    output: type || 'buddy',\n                    context: context,\n                    provider: 'giphy-stickers'\n                });\n                return false;\n            }\n        },\n\n        {\n            text: 'BuddySound',\n            image: 'desktop/assets/images/icons/icon_soundrecorder_64.png',\n            onclick: (ev) => {\n                console.log('BuddySound button clicked', ev);\n                let context = ev.target.dataset.context;\n                let type = ev.target.dataset.type;\n                bp.open('soundrecorder', { type: type || 'buddy', output: type || 'buddy', context: context });\n\n            }\n        },\n        /* TOOD: add gifstudio back ( with better UX and features )\n        {\n            text: 'BuddyGif',\n            image: 'desktop/assets/images/icons/icon_gifstudio_64.png',\n            onclick: (ev) => {\n                let context = ev.target.dataset.context;\n                let type = ev.target.dataset.type;\n                JQDX.openWindow('gifstudio', { type: type || 'buddy', context: context, output: type || 'buddy' });\n            }\n        },\n        */\n        {\n            text: 'BuddyPaint',\n            image: 'desktop/assets/images/icons/icon_drawing_64.png',\n            children: [\n               {\n                  text: 'Chalkboard',\n                  image: 'desktop/assets/images/icons/icon_chalkboard_64.png',\n                  onclick: (ev) => {\n                      let context = ev.target.dataset.context;\n                      let type = ev.target.dataset.type;\n                      bp.open('chalkboard', { type: type || 'buddy', output: type || 'buddy', context: context });\n                  }\n              },\n               {\n                  text: 'miniPaint',\n                  image: 'desktop/assets/images/icons/icon_minipaint_64.png',\n                  onclick: (ev) => {\n                      let context = ev.target.dataset.context;\n                      let type = ev.target.dataset.type;\n                      bp.open('minipaint', { type: type || 'buddy', output: type || 'buddy', context: context });\n                  }\n              },\n              {\n                  text: 'Paint',\n                  image: 'desktop/assets/images/icons/icon_paint_64.png',\n                  onclick: (ev) => {\n                      let context = ev.target.dataset.context;\n                      let type = ev.target.dataset.type;\n                      bp.open('paint', { type: type || 'buddy', output: type || 'buddy', context: context });\n                  }\n              },\n              {\n                  text: 'Painterro',\n                  image: 'desktop/assets/images/icons/icon_painterro_64.png',\n                  onclick: (ev) => {\n                      let context = ev.target.dataset.context;\n                      let type = ev.target.dataset.type;\n                      bp.open('painterro', { type: type || 'buddy', output: type || 'buddy', context: context });\n                  }\n              }\n            ],\n        \n        },\n        {\n            text: 'BuddySnap',\n            env: 'desktop-only', // for now, use default mobile camera\n            image: 'desktop/assets/images/icons/svg/1f4f7.svg',\n            onclick: (ev) => {\n                let context = ev.target.dataset.context;\n                let type = ev.target.dataset.type;\n                // desktop.ui.openWindow('mirror', { type: type || 'buddy', context: context, output: type || 'buddy' });\n                bp.open('camera', { type: type || 'buddy', output: type || 'buddy', context: context });\n            }\n        },\n        {\n            text: 'BuddyEmoji',\n            image: 'desktop/assets/images/icons/svg/1f600.svg',\n            className: 'emojiPicker',\n            onclick: async (ev) => {\n\n                let $target = $(ev.target);\n\n                // ensure that we don't already have an emoji-picker-popup in document\n                if ($('.emoji-picker-popup').length > 0) {\n                    $('.emoji-picker-popup').remove();\n                }\n\n                $target.emojiPicker({\n                    onSelect: (emoji) => {\n                        console.log(\"Selected:\", emoji);\n                        let messageControls = $target.closest('.aim-message-controls');\n                        $('.aim-input', messageControls).val((i, val) => val + emoji).trigger('input').focus();\n                    }\n                });\n\n                // Immediately show the picker (bypasses internal click)\n                $target.data('emojiPicker_show')?.();\n\n                // focus on .emoji-search input\n                if ($('.emoji-picker-popup').length > 0) {\n                    $('.emoji-search').focus();\n                }\n                return;\n\n                // Replaced: Jun 17, 2025\n                // Legacy EmojiPicker code below, can be removed once we confirm new code above works well\n                // EmojiPicker lazy load is a special case\n                // All other BuddyPond deps / lazy imports with await bp.load() are fine to work as expected\n                // We usually don't need to check existence of the app before loading it\n                // For EmojiPicker we need to recall the original click event with same parameters\n                // This could be resolved by using a new EmojiPicker library or patching the current one\n                if (!bp.apps['emoji-picker']) { // this is not a normal practice for user in await bp.load()\n                    await bp.load('emoji-picker');\n                    // Create a new MouseEvent with the original event's coordinates\n                    const newEvent = new MouseEvent('click', {\n                        bubbles: true,\n                        cancelable: true,\n                        clientX: ev.clientX, // Preserve original x coordinate\n                        clientY: ev.clientY, // Preserve original y coordinate\n                        // Include other relevant properties if needed\n                        button: ev.button,\n                        target: ev.target\n                    });\n                    // Dispatch the new event on the original target\n                    ev.target.dispatchEvent(newEvent);\n                    return;\n                }\n                // now that the emoji-picker is loaded, we can open it as normal\n\n                // focus on the .emojiPicker input\n                $('.emojiPicker').focus();\n\n                // we need to add class activeTextArea to the active textarea\n                // so we can append the emoji to the correct textarea\n                // remove the activeTextArea from all other textareas\n                $('.activeTextArea').removeClass('activeTextArea');\n\n                let messageControls = $(ev.target).closest('.aim-message-controls');\n                // find the closest textarea to the ev.target\n                $('.aim-input', messageControls).addClass('activeTextArea');\n\n            }\n        },\n        {\n            text: 'BuddyCall',\n            type: 'buddy-only',\n            image: 'desktop/assets/images/icons/icon_phone_64.png',\n            onclick: (ev) => {\n                let context = ev.target.dataset.context;\n                let type = ev.target.dataset.type;\n                // desktop.ui.openWindow('mirror', { type: type || 'buddy', context: context, output: type || 'buddy' });\n                bp.open('videochat', { type: type || 'buddy', output: type || 'buddy', context: context, isHost: true });\n\n                // should send message to buddy that will open the videocall window on receiving end\n                let message = {\n                    from: bp.me,\n                    to: context,\n                    text: 'Let\\'s have a video call',\n                    type: 'buddy',\n                    card: {\n                        type: 'videochat'\n                    }\n                }\n\n\n                console.log('BuddyCall message', message);\n                // send message to buddy\n                buddypond.sendCardMessage(message, function (err, response) {\n                    if (err) {\n                        console.error('Error sending message', err);\n                    } else {\n                        console.log('Message sent', response);\n                    }\n                });\n\n\n            }\n        },\n        // spellbook\n        {\n            text: 'Spellbook',\n            image: 'desktop/assets/images/icons/icon_spellbook_64.png',\n            onclick: (ev) => {\n                ev.preventDefault();\n                ev.stopPropagation();\n\n                let context = ev.target.dataset.context;\n                let type = ev.target.dataset.type;\n                // desktop.ui.openWindow('spellbook', { type: type || 'buddy', context: context, output: type || 'buddy' });\n                bp.open('spellbook', { type: type || 'buddy', output: type || 'buddy', context: context });\n            }\n        },\n        // buddycoins\n        {\n            text: 'BuddyCoins',\n            image: 'desktop/assets/images/icons/icon_coin_64.png',\n            onclick: (ev) => {\n                let context = ev.target.dataset.context;\n                let type = ev.target.dataset.type;\n                // desktop.ui.openWindow('coin', { type: type || 'buddy', context: context, output: type || 'buddy' });\n                bp.open('portfolio', { type: type || 'buddy', output: context, context: '#portfolio-transfer' });\n            }\n        },\n        /* // TODO: add Dictate with improved UX */\n        {\n            text: 'Dictate',\n            env: 'desktop-only',\n            image: 'desktop/assets/images/icons/icon_dictate_64.png',\n            onclick: async (ev) => {\n                let context = ev.target.dataset.context;\n                let type = ev.target.dataset.type;\n                let targetEl = $('.aim-input', $(ev.target).parent().parent());\n                await bp.open('dictate', { type: type || 'buddy', output: type || 'buddy', context: context, targetEl: targetEl });\n            }\n        },\n        {\n            text: 'BuddyHelp',\n            image: 'desktop/assets/images/icons/icon_help_64.png',\n            align: 'right',\n            onclick: (ev) => {\n                let context = ev.target.dataset.context;\n                let type = ev.target.dataset.type;\n                // TODO: better way to get the windowId\n                // TODO: instead just use context on the button, like how all the other buttons work\n                let windowIdPrefix = type === 'pond' ? 'pond_message_-' : 'messages/';\n                let windowId = windowIdPrefix + context;\n                if (type === 'pond') {\n                    windowId = 'pond-chat';\n                }\n                // console.log('opening chat window ', windowId)\n                let chatWindow = bp.apps.ui.windowManager.getWindow(windowId);\n                console.log('chatWindow', chatWindow);\n                // bp.apps.buddylist.showCard({ chatWindow, cardName: 'help' });\n\n                let aimInput = chatWindow.content.querySelector('.aim-input');\n                let sendButton = chatWindow.content.querySelector('.aim-send-btn');\n                if (aimInput) {\n                    aimInput.value = '/help';\n                    aimInput.dispatchEvent(new Event('input', { bubbles: true })); // Trigger input event\n                }\n                if (sendButton) {\n                    sendButton.click(); // Simulate button click\n                }\n\n\n\n\n            }\n        }\n    ]\n}","export default function renderGeoFlag(message) {\n    if (message.location === 'outer space' || !message.location) {\n      // Set Antarctica to the default flag when the location is 'outer space'\n      message.location = 'AQ';\n    }\n  \n    if (!message.location || message.location === 'outer space') {\n      return document.createElement('span');  // Return an empty span if no flag should be displayed\n    }\n  \n    // Create an image element for the flag\n    let img = document.createElement('img');\n    img.className = 'geoFlag';\n    img.src = `desktop/assets/geo-flags/flags/4x3/${message.location.toLowerCase()}.svg`;\n    return img;\n  }\n  ","import forbiddenNotes from '../forbiddenNotes.js';\nimport checkForLinksInMessage from './checkForLinksInMessage.js';\n\nexport default async function renderChatMessage(message, _chatWindow) {\n    // console.log('renderChatMessage', message, _chatWindow);\n    // console.log('renderChatMessage', message, _chatWindow);\n    let context = 'default';\n\n    // profanity filter, now performed on the backend\n    /*\n    if (message.text && message.text.length > 0) {\n      message.text = forbiddenNotes.filter(message.text);\n    }\n    */\n\n    // TODO: needs to check for links inside the message, not just entire links\n    checkForLinksInMessage(message);\n\n    // if there is a #pondname in the message, add a pond card type\n    if (message.text && message.text.length > 0) {\n        let pondNames = findAllHashPondNames(message.text);\n        if (pondNames.length > 0) {\n            message.card = {\n                type: 'pond',\n                pondNames: pondNames\n            }\n        }\n    }\n\n    // Determine the window ID based on the message context\n    let windowId = `messages/${message.to}`;\n\n    // dynamically create the windowId based on the message details\n    if (message.type === 'buddy') {\n        if (message.to === this.bp.me) {\n            /*\n            // we need to check if message.from is not part of the buddy type chatId, could be a bot talking in the buddy chat\n            // this differs from pond chats, as its a third party in a two person chat\n            // the whole approach here is a bit awkward, but is required if we wish for bots to join buddy chat conversations\n            // check if message.from is not part of the chatId\n            let participants = message.chatId.split('/');\n            // remove the first item from the array\n            participants.shift();\n            // check if message.from is not inside the participants array\n            if (!participants.includes(message.from)) {\n              // this means a third party is sending a message in a buddy chat ( a bot most likely )\n              // we need to set the windowId to be the non-me participant\n              let notMe = participants.find(participant => participant !== this.bp.me);\n              // console.log('Setting windowId for non-me participant', notMe);\n              windowId = `messages/${notMe}`;\n              context = notMe;\n            } else {\n              // regular buddy conversation with (2) participants\n              windowId = `messages/${message.from}`;\n              context = message.from;\n            }\n            */\n            windowId = `messages/${message.from}`;\n            context = message.from;\n\n\n        } else {\n            windowId = `messages/${message.to}`;\n            context = message.to;\n        }\n    }\n\n    if (message.type === 'pond') {\n        context = message.to;\n        // windowId = `pond_message_-${message.to}`;\n        windowId = 'pond-chat';\n    }\n    // console.log('windowIdwindowId', windowId)\n    // TODO: scope on processedMessages needs to be keyed by type in addition to context\n    this.data.processedMessages[context] = this.data.processedMessages[context] || [];\n\n    // Stores all active users across all chat windows\n    this.data.activeUsers = this.data.activeUsers || [];\n\n    // Stores all buddies that are currently active in the context of the chat window\n    this.data.activeUsersInContext = this.data.activeUsersInContext || {};\n    this.data.activeUsersInContext[context] = this.data.activeUsersInContext[context] || [];\n\n    this.data.activePonds = this.data.activePonds || [];\n    if (message.type === 'pond') {\n        // If message.to is not in the activePonds, add it\n        if (message.to && !this.data.activePonds.includes(message.to)) {\n            this.data.activePonds.push(message.to);\n            this.bp.emit('pond::activePondAdded', message.to);\n        }\n    }\n\n    if (message.type === 'buddy') {\n        // If message.to is not in the activeUsers, add it\n        if (message.to && !this.data.activeUsers.includes(message.to)) {\n            this.data.activeUsers.push(message.to);\n            this.bp.emit('buddy::activeUserAdded', message.to);\n        }\n        // If message.to is not in the activeUsersInContext, add it\n        if (message.to && !this.data.activeUsersInContext[context].includes(message.to)) {\n            this.data.activeUsersInContext[context].push(message.to);\n        }\n    }\n\n    // If message.from is not in the activeUsers, add it\n    if (message.from && !this.data.activeUsers.includes(message.from)) {\n        this.data.activeUsers.push(message.from);\n        this.bp.emit('buddy::activeUserAdded', message.from);\n    }\n\n\n    // If message.from is not in the activeUsersInContext, add it\n    if (message.from && !this.data.activeUsersInContext[context].includes(message.from)) {\n        this.data.activeUsersInContext[context].push(message.from);\n    }\n\n    // Remark: Removing and editing messages do not currently require a windowId since they currently\n    // do not have a from / to property\n    // We may want to change this in the future to allow for more granular control directly in the chatWindow instance\n    if (message.removed) {\n        console.log(\"ATTEMPTING TO REMOVE MESSAGE\", message);\n        // find the chatMessage by uuid\n        let removedMessageEl = $(`.aim-chat-message[data-uuid=\"${message.removed}\"]`); // could be document as well?\n        if (removedMessageEl.length > 0) {\n            // remove the removed message\n            removedMessageEl.remove();\n        }\n        return chatWindow;\n    }\n\n    if (message.edited) {\n        console.log(\"ATTEMPTING TO EDIT MESSAGE\", message);\n        // find the chatMessage by uuid\n        let editedMessageEl = $(`.aim-chat-message[data-uuid=\"${message.edited}\"]`); // could be document as well?\n\n        if (!editedMessageEl.length > 0) {\n            console.error('No original message found');\n            return chatWindow;\n        }\n\n        // get the aim-message-content and set the text to the new message\n        let editedMessageContent = editedMessageEl.find('.aim-message-content');\n        if (editedMessageContent.length > 0) {\n            // remove the edited message\n            editedMessageContent.html(message.text);\n        }\n        return chatWindow;\n    }\n\n    // console.log('current windows', this.bp.windows);\n    // console.log('renderChatMessage windowId', windowId, message);\n    let chatWindow = this.bp.apps.ui.windowManager.getWindow(windowId);\n    //console.log('attemping to fetch chatWindow', windowId, chatWindow);\n    if (_chatWindow) {\n        chatWindow = _chatWindow;\n    }\n\n    if (!chatWindow || !chatWindow.content) {\n        //console.log('chat window not ready, trying again soon', windowId, message);\n        console.log(message);\n        return;\n    }\n\n    // Check if message already exists in the DOM\n    if (document.querySelector(`.chatMessage[data-uuid=\"${message.uuid}\"]`)) {\n        return chatWindow; // Message is already rendered\n    }\n\n    // check to see if this command is less than 10 seconds old\n    // TODO: split local and remote commands\n    // TODO: should probably go through card codepath\n    // this means we create the bs-card on the client\n    // we should only run local commands on the client\n    let now = new Date().getTime();\n    let messageTime = new Date(message.ctime).getTime();\n    // needs to determine if this command should be run locally or remotely\n    // for now, only run locally\n    // check to see  if message.from is bp.me\n\n    // remove .aim-no-messages el from chat window if it exists\n    $('.aim-no-messages', chatWindow.content).remove();\n    // console.log('checking this.data.processedMessages[context]', this.data.processedMessages[context]);\n    // Check if message has been processed to avoid duplication\n    for (let i = 0; i < this.data.processedMessages[context].length; i++) {\n        if (this.data.processedMessages[context][i].uuid === message.uuid) {\n            // console.log('Message already processed, skipping rendering', message);\n            // if the message has already been processed by UUID, then it's a duplicate and we should not render it\n            return chatWindow;\n            // we have a special case here we wish to re-render the client message\n            // this indicates the server filtered parts of the message and it should be removed and re-rendered\n            if (this.data.processedMessages[context][i].from === this.bp.me && this.data.processedMessages[context][i].text !== message.text) {\n                // find the chatMessage by uuid\n                let filteredMessageEl = $(`.chatMessage[data-uuid=\"${message.uuid}\"]`, chatWindow.content);\n                if (filteredMessageEl.length > 0) {\n                    // remove the filtered message\n                    filteredMessageEl.remove();\n                    //this.bp.emit('buddy::message::gotfiltered', message);\n                }\n            } else {\n                // else there is no special filtering case from server\n                // and the messaged is a duplicate, return and do not render\n                return;\n            }\n        }\n    }\n\n    // Manage size of processedMessages to prevent memory leaks\n    if (this.data.processedMessages[context].length > 5000) {\n        this.data.processedMessages[context].shift();\n    }\n\n    // Add the processed message UUID to prevent reprocessing\n    this.data.processedMessages[context].push(message);\n\n    // check if this is an Agent message which gets processed first\n    if (message.type === 'agent') {\n\n        // Legacy BP API\n        if (desktop && desktop.app && desktop.app.spellbook && desktop.app.spellbook[message.text]) {\n            desktop.app.spellbook[message.text]();\n            return;\n        } else {\n            console.log('unknown agent message', message);\n        }\n    }\n\n    // TODO: allow buddylist to register message processors\n    // Is most likely best handled using SystemsManager from ECS code\n    // this way all app can register an update method\n    // we can give each app an onMessage method and have the ECS S delegate the message to the app\n    // bp.apps.buddylist.addMessageProcessor('buddyscript', function (message) {});\n    // bp.apps.buddylist.addMessageProcessor('card', function (message) {});\n    // etc\n    // this way we don't have to pollute the buddylist with all the message processing logic\n    // TODO: Migrate TTS app to v5 API\n\n    if (this.bp.apps.say && message.text && message.text.startsWith('/say')) {\n        // this is a /say message\n        this.bp.apps.say.processMessages(message);\n    }\n\n    // check if mobile, is so shorten the time\n    // legacy API\n    if (this.bp.isMobile()) {\n        messageTime = DateFormat.format.date(messageTime, 'hh:mm:ss a');\n    } else {\n        messageTime = DateFormat.format.date(messageTime, 'E MMMM dd, hh:mm:ss a');\n    }\n\n    // Format message time\n    messageTime = messageTime.toString();\n\n    // Check to see if message is type card\n\n    let container;\n    if (message.card && this.bp && this.bp.apps && this.bp.apps.card) {\n        //console.log('message is', message);\n        //console.log('message is card', message.card);\n\n        let cardData = message.card;\n        // console.log(\"USING CARD\", cardData, message);\n        // make sure card has props\n        if (Object.keys(cardData).length > 0) {\n            cardData.message = message; // TODO probably should clone for CardManager, etc\n            // default JSON rendering will now fail by default due to nested messages cards with arbitrary props ( no .data scope either ), .context might be good...\n            let cardManager = this.bp.apps.card.cardManager;\n            // console.log('cardManager.loadCard', cardData);\n            const _card = await cardManager.loadCard(cardData.type, cardData, chatWindow);\n            container = document.createElement('div');\n            container.classList.add('cardContainer');\n            let d = await _card.render(container);\n        }\n\n    }\n\n    let bp = this.bp;\n\n    this.createChatMessageElement(message, messageTime, chatWindow, container);\n\n    // emit the freshly processed message for any post processing events ( such as playing a sound )\n    if (message.type === 'pond') {\n        this.bp.emit('pond::message::processed', message);\n    } else {\n        this.bp.emit('buddy::message::processed', message);\n    }\n\n    return chatWindow;\n\n}\n\n// TODO: add via addMessageProcessor() on `marked` and `pond` apps\n\nfunction findAllHashPondNames(text) {\n    // Decode HTML entities more comprehensively\n    const decodedText = decodeEntities(text);\n    // Regex: # followed by at least one letter/digit, then optional letters/digits/underscores/hyphens\n    // Requires space or start of string before #, supports Unicode\n    const hashPondNameRegex = /(^|\\s)#([a-zA-Z0-9\\p{L}][a-zA-Z0-9\\p{L}_-]*)/gu;\n    return Array.from(decodedText.matchAll(hashPondNameRegex), m => m[2]);\n}\n\nfunction decodeEntities(text) {\n    const entities = {\n        '&amp;': '&',\n        '&quot;': '\"',\n        '&lt;': '<',\n        '&gt;': '>',\n        '&apos;': \"'\",\n        '&nbsp;': ' ',\n        // Add more as needed\n    };\n    return text.replace(/&[a-zA-Z0-9#]+;/g, match => entities[match] || match);\n}","export default function renderBuddyRequests (buddyrequests) {\n    //console.log(\"renderBuddyRequests\", buddyrequests);\n\n    $('.you_have_no_buddies').hide();\n    let api = this.bp.apps.client.api;\n\n    if (buddyrequests) {\n  \n      $('.pendingIncomingBuddyRequests').html('');\n      $('.pendingOutgoingBuddyRequests').html('');\n      $('.loading').remove();\n  \n      for (let buddy in buddyrequests) {\n        let buddyrequest = buddyrequests[buddy];\n        buddyrequest = JSON.parse(buddyrequest);\n        if (buddyrequest.to === this.bp.me) {\n          $('.pendingIncomingBuddyRequests').append('<li>' + buddyrequest.from + ' - <a href=\"#\" class=\"approveBuddyRequest pointer\" data-buddyname=\"' + buddyrequest.from +'\">Approve</a> / <a href=\"#\" class=\"denyBuddyRequest pointer\" data-buddyname=\"' + buddyrequest.from +'\">Remove</a> </li>');\n        } else {\n          $('.pendingOutgoingBuddyRequests').append('<li>' + buddyrequest.to + ' - <a href=\"#\" class=\"denyBuddyRequest pointer\" data-buddyname=\"' + buddyrequest.to +'\">Remove</a></li>');\n        }\n      }\n  \n      $('.apiResult').val(JSON.stringify(buddyrequests, true, 2));\n  \n      // desktop.app.buddylist.pendingIncomingBuddyRequests = desktop.app.buddylist.pendingIncomingBuddyRequests || 0;\n      this.data.pendingIncomingBuddyRequests = this.data.pendingIncomingBuddyRequests || 0;\n\n      let totalIncomingBuddyRequests = $('.pendingIncomingBuddyRequests li').length;\n  \n      if (totalIncomingBuddyRequests > this.data.pendingIncomingBuddyRequests) {\n        this.data.pendingIncomingBuddyRequests = totalIncomingBuddyRequests;\n  \n        // Remark: short delay is used here to provide nice login experience if Buddy has requests\n        //         allows WELCOME sound to play\n        //         A better solution here is to here priority option for playing sound with queue\n        setTimeout(function () {\n          // this.bp.apps.play('YOUVEGOTMAIL.wav'); // TODO add 'play' app\n        }, 2222);\n      }\n  \n      if (totalIncomingBuddyRequests === 0) {\n        $('.pendingIncomingBuddyRequestsHolder').hide();\n      } else {\n        $('.pendingIncomingBuddyRequestsHolder').show();\n      }\n  \n      if ($('.pendingOutgoingBuddyRequests li').length == 0) {\n        $('.pendingOutgoingBuddyRequestsHolder').hide();\n      } else {\n        $('.pendingOutgoingBuddyRequestsHolder').show();\n      }\n  \n      // TODO: remove links in real-time from client for approve / deny ( no lags or double clicks )\n      //  '.pendingIncomingBuddyRequests'\n      $('.denyBuddyRequest').on('click', function () {\n        $(this).parent().hide();\n        api.denyBuddy($(this).attr('data-buddyname'), function (err, data) {\n          $('.apiResult').val(JSON.stringify(data, true, 2));\n        });\n        return false;\n      });\n  \n      $('.approveBuddyRequest', '.pendingIncomingBuddyRequests').on('click', function () {\n        $(this).parent().hide();\n        let buddyName = $(this).attr('data-buddyname');\n        api.approveBuddy(buddyName, function (err, data) {\n          $('.apiResult').val(JSON.stringify(data, true, 2));\n        });\n        return false;\n      });\n    }\n  \n  }","\n\nexport default async function processProfile(profileState) {\n  // console.log('processBuddylist', profileState);\n\n  // if the client hasn't seen the buddylist yet, we start from empty state\n  if (!this.data.buddylist) {\n    this.data.buddylist = {};\n  }\n  if (!this.data.buddyrequests) {\n    this.data.buddyrequests = {};\n  }\n\n  //console.log('processProfile', profileState);\n  //console.log('this.data.profileState', this.data.profileState);\n  if (this.data.profileState &&\n    (\n      Number(profileState.powerlevel) > Number(this.data.profileState.powerlevel)\n    )\n  ) {\n\n    // Assuming there's a container with ID 'powerLevelContainer' in your HTML\n    const powerLevel = bp.apps.powerlevel.popup;\n\n    // Example of increasing to level 4\n    powerLevel.show(profileState.powerlevel, {\n      duration: 7777\n    });\n  }\n\n  // merge the profile state, don't overwrite\n  this.data.profileState = { ...profileState };\n  // profileState is a JSON document representing entire user profile\n  // console.log('profileState', profileState);\n  if (profileState.system) {\n    $('.totalConnectedCount').html(profileState.system.totalIsConnected);\n    $('.totalOnlineCount').html(profileState.system.totalIsOnline);\n  }\n\n  // metadata about ponds users is joined or ponds of interest ( such as viewing popular ponds list )\n  if (profileState.ponds && profileState.ponds.ponds) {\n    profileState.ponds.ponds.forEach(function (pond) {\n      // check to see if we have an open window with data-app=\"buddylist\" data-type=\"pond\" and data-context=\"${pondName}\"\n      let win = $('#pond_message_-' + pond.name);\n      // update the window-title-text with the number of connected users\n      if (win) {\n        $('.window-title-text', win).html(pond.name + ' Pond (' + pond.connected + ')');\n      }\n    });\n  }\n\n  // we will process the profileState as if it was a differential state update\n  let buddylist = profileState.buddylist;\n  let profileNeedsUpdate = _processBuddylistData(this, buddylist);\n\n  let buddyrequests = profileState.buddyrequests;\n  _processBuddyRequestsData(this, buddyrequests);\n\n  // once we have completed processing all the buddylist profile data\n  // we will want to send back the updated document to awk that we have processed the profile\n  // and set newMessages flags to false\n  let api = this.bp.apps.client.api;\n  // console.log('getBuddyProfile', api, profileState);\n  profileState.updates = profileState.updates || {};\n\n}\n\nfunction _processBuddyRequestsData(buddylist, buddyrequests) {\n  if (buddyrequests) {\n    buddylist.renderBuddyRequests(buddyrequests);\n  }\n}\n\nfunction _processBuddylistData(buddylist, buddylistData) {\n\n  let profileNeedsUpdate = false;\n  if (buddylist) {\n    for (let b in buddylistData) {\n      let buddy = buddylistData[b];\n      let buddyName = b.replace('buddies/', '');\n      // check to see if the buddy is already in the local buddylist\n      // if not, render the buddy in the buddylist\n      /*\n      if (!buddylist.data.buddylist[b]) {\n        if (buddy.isConnected) {\n          buddylist.bp.emit('profile::buddy::in', {\n            name: buddyName,\n            buddydata: buddy\n          });\n        }\n        buddylist.data.buddylist[b] = buddy;\n      } else {\n        // check to see if buddy was connected and is no longer\n        if (!buddy.isConnected && buddylist.data.buddylist[b].isConnected) {\n          buddylist.bp.emit('profile::buddy::out', {\n            name: buddyName,\n            buddydata: buddy,\n            wasOnline: false\n          });\n        }\n      }*/\n\n\n      buddylist.renderOrUpdateBuddyInBuddyList({\n        name: buddyName,\n        buddydata: buddy,\n        wasOnline: false\n      });\n\n      // check if this buddy has sent newMessages\n      // if so, open a new window\n      // the process of opening a new chat window will connect websocket ( if not already connected )\n      // then messages will flow through the websocket\n      if (buddy.newMessages) {\n        buddylist.bp.emit('profile::buddy::newmessage', {\n          name: buddyName\n        });\n        // console.log('updaitng local profile state', buddylist.data.profileState, buddyName)\n        buddylist.data.profileState.buddylist['buddies/' + buddyName] = {\n          newMessages: false\n        };\n        profileNeedsUpdate = true;\n      }\n\n\n      if (buddy.isCalling) {\n        buddylist.bp.emit('profile::buddy::calling', {\n          name: buddyName\n        });\n      }\n\n    }\n  }\n  return profileNeedsUpdate;\n}","export default function buddylistUIEvents() {\n  let api = this.bp.apps.client.api;\n  let affirmations = this.bp.apps.affirmations.affirmations;\n\n  // bind events\n  $('.loginForm').submit((e) => {\n    e.preventDefault();\n\n    // disable the login button\n    $('.loginButton').prop('disabled', true);\n    $('.loginButton').addClass('disabled');\n\n    let username = $('.loginForm input[name=\"username\"]').val();\n    let password = $('.loginForm input[name=\"password\"]').val();\n    if (!password) {\n      password = username;\n    }\n\n    api.authBuddy(username, password, function (err, result) {\n      console.log('authBuddy', err, result);\n      if (err) {\n        if (result && result.error) {\n          $('.loginStatus').html(result.error);\n          if (result.error === 'Incorrect password.') {\n            $('.resetPasswordLink').show();\n          }\n        } else {\n          if (err.message === 'Failed to fetch') {\n            $('.loginStatus').text('Failed to connect to Buddy Pond');\n          } else {\n            $('.loginStatus').html(err.message || 'Failed to authenticate buddy');\n          }\n        }\n        $('.loginButton').prop('disabled', false);\n        $('.loginButton').removeClass('disabled');\n\n        $('.password').show();\n        console.error('Failed to authenticate buddy:', err);\n\n        return;\n      }\n      if (result.success) {\n        // attempt to connect for events after getting auth token\n        //console.log('connecting with valid qtokenid', api.qtokenid);\n        result.me = username;\n        // The user has logged in password or signed up successfully, emit the auth event\n        bp.emit('auth::qtoken', result);\n        // $('.loggedIn').flexShow();\n        $('.loginForm .error').text('');\n\n      } else {\n        // re-enable the login button\n        $('.loginButton').prop('disabled', false);\n        $('.loginButton').removeClass('disabled');\n        if (username === password) {\n          $('.password').show();\n          $('.password').focus();\n          return;\n        }\n        $('.loginForm .error').text('Failed to authenticate buddy');\n        $('.password').show();\n        console.error('Failed to authenticate buddy:');\n      }\n    });\n    return false;\n  });\n\n  $('.onlineStatusSelect').change((e) => {\n    let status = $(e.target).val();\n    // console.log('status', status);\n    bp.emit('profile::status', status);\n  });\n\n  $('.openPondChatRooms').change((e) => {\n    let isChecked = $(e.target).is(':checked');\n    if (isChecked) {\n      let chatWindow = this.openChatWindow({ pondname: this.defaultPond });\n      bp.load('pond');\n    }\n    bp.set('openPondChatRooms', isChecked);\n  });\n\n  if (this.openDefaultPond) {\n    $('.openPondChatRooms').prop('checked', true);\n  }\n\n  $('.forgot-password').on('click', (ev) => {\n    $('.loginForm').flexHide();\n    $('.forgot-password-modal').flexShow();\n    $('.tos-checkbox').flexHide();\n    $('.loginStatus').html('');\n    $('.resetPasswordLink').flexHide();\n  });\n\n  $('.closeForgotPassword').on('click', (ev) => {\n    $('.forgot-password-modal').flexHide();\n    $('.loginForm').flexShow();\n    $('.tos-checkbox').flexShow();\n    $('.resetPasswordLink').flexShow();\n  });\n\n  $('.resetPasswordButton').on('click', (ev) => {\n    ev.preventDefault();\n    let email = $('.resetPasswordEmail').val();\n    if (!email) {\n      $('.resetPasswordEmail').addClass('error');\n      return;\n    }\n    $('.resetPasswordEmail').removeClass('error');\n    $('.loginStatus').html('Sending password reset email...');\n    $('.resetPasswordForm').flexHide();\n    $('.resetPasswordMessage').flexHide();\n    api.sendPasswordResetEmail(email, (err, data) => {\n      // console.log('sendPasswordResetEmail', err, data);\n      if (err || !data.success) {\n        $('.loginStatus').html('Failed to send password reset email.');\n        console.error(err || data);\n        return;\n      }\n      $('.loginStatus').removeClass('error').addClass('success').html(data.message);\n    });\n  });\n\n  $('.buddylist').click((e) => {\n    // check if element has a data-buddy attribute\n    if (!$(e.target).closest('.buddy-message-sender').data('buddy')) {\n      return\n    }\n    let buddyname = $(e.target).closest('.buddy-message-sender').data('buddy');\n    // console.log('message-buddy', buddyname);\n    this.openChatWindow({ name: buddyname });\n  });\n\n  // Send a buddy request form\n  $('.sendBuddyRequest').on('click', (ev) => {\n    ev.preventDefault();\n    let buddyName = $('.buddy_request_name').val();\n    if (!buddyName) {\n      $('.buddy_request_name').addClass('error');\n      return;\n    }\n\n    $('.you_have_no_buddies').html('Buddy Request Sent!');\n    $('.buddy_request_name').removeClass('error');\n    $('.buddy_request_name').val('');\n    // $('.pendingOutgoingBuddyRequests').append('<li>' + buddyName + '</li>');\n    this.bp.log('buddypond.addBuddy ->', buddyName);\n\n    this.client.addBuddy(buddyName, (err, data) => {\n      console.log('buddypond.addBuddy <-', err, data);\n      if (data.error) {\n        $('.you_have_no_buddies').html(data.error);\n        console.error(data);\n        return;\n      }\n      if (!data.success) {\n        $('.you_have_no_buddies').html(data.message)\n        console.error(data);\n        return;\n      }\n      this.bp.log('buddypond.addBuddy <-', data);\n    });\n\n  });\n\n  // Initially disable the login button\n  $('.loginButton').prop('disabled', true);\n  $('.loginButton').addClass('disabled');\n\n  // Toggle the login button based on the checkbox status\n  $('#tosAgree').change(function () {\n    if ($(this).is(':checked')) {\n      $('.loginButton').prop('disabled', false);\n      $('.loginButton').removeClass('disabled');\n    } else {\n      $('.loginButton').prop('disabled', true);\n      $('.loginButton').addClass('disabled');\n    }\n  });\n\n  /*\n  // TODO: create context meny for buddy-message-sender\n  $(document).on('click', (e) => {\n    // delegate based on if e.target is a .buddy-message-sender\n    // if so, open profile for that buddy\n    //alert(e.target.classList)\n    if ($(e.target).hasClass('buddy-message-sender')) {\n      alert('buddy-message-sender');\n      let buddyName = $(e.target).text();\n      if (this.bp.admin) {\n        // roles are handled server-side, this is a simple UI route for the implied role access\n        // loading admin-profile from another user won't return admin data\n        this.bp.open('admin-profile', { context: buddyName });\n      } else {\n        // this.bp.open('user-profile', { context: buddyName });\n      }\n    }\n  });\n  */\n\n  // Append a custom context menu to the body (hidden initially)\n  // $('body').append('<div id=\"customContextMenu\" class=\"removeMessage\" style=\"display: none; position: absolute; z-index: 1000; background: white; border: 1px solid #ccc; padding: 10px;\">Remove Message</div>');\n\n  // Right-click event on elements with class .buddy-message-sender\n  /*\n  $(document).on('contextmenu', function (e) {\n \n    if (!$(e.target).hasClass('buddy-message-sender')) {\n      return true;\n    }\n \n    e.preventDefault(); // Prevent default context menu\n    let chatMessage = $(e.target).closest('.chatMessage'); // Get the chat message element\n    console.log('using chatMessage', chatMessage.html());\n    if (api.me !== 'Marak') { // could also allow users to remove their own messages\n       // set the removeMessage to disabled class\n      $('#customContextMenu').addClass('disabled');\n    }\n \n    let from = chatMessage.attr('data-from');\n    let to = chatMessage.attr('data-to');\n    let uuid = chatMessage.attr('data-uuid');\n    let type = chatMessage.attr('data-type');\n \n    console.log('type', type, 'from', from, 'uuid', uuid);\n \n    // Position the custom context menu at the mouse coordinates\n    $('#customContextMenu').css({\n      top: e.pageY + 'px',\n      left: e.pageX + 'px',\n      display: 'block'\n    });\n \n    $('#customContextMenu').off('click').on('click', async () => {\n      // Replace 'openProfile' with your actual function to open the profile\n      //openProfile(buddyName);\n \n      let context = to;\n \n      await api.removeMessage({type, from, to, uuid});\n      // $(this).hide(); // Hide the context menu after click\n    });\n  });\n  */\n\n  // Hide context menu when clicking anywhere else on the document\n  /*\n  $(document).on('click', function (e) {\n    if (!$(e.target).hasClass('buddy-message-sender')) {\n      $('#customContextMenu').hide();\n    }\n  });\n  */\n\n  let d = $(document);\n\n\n  /*\n  d.on('mousedown', 'img.remixPaint, img.remixMeme', function () {\n \n    let form = $(this).parent();\n    let url = $('.image', form).attr('src');\n    let output = $(this).data('output');\n    let context = $(this).data('context');\n \n    let cardContainer = $(this).parent().parent();\n    console.log('cardContainer', cardContainer);\n    url = $('.bp-image', cardContainer).attr('src');\n    // url = buddypond.host + url;\n    console.log('remixPaint', url, output, context);\n \n    bp.open('paint', {\n      src: url,\n      output: output,\n      context: context,\n    });\n \n  });\n  */\n\n  // TODO: move these events to chatWindowUIEvents.js\n  // editor configuration: update icon paths if you prefer different icons\n  const _remixEditors = [\n    { key: 'paint', title: 'Paint', icon: 'desktop/assets/images/icons/icon_paint_64.png' },\n    { key: 'minipaint', title: 'miniPaint', icon: 'desktop/assets/images/icons/icon_minipaint_64.png' },\n    { key: 'painterro', title: 'Painterro', icon: 'desktop/assets/images/icons/icon_painterro_64.png' },\n    { key: 'chalkboard', title: 'Chalkboard', icon: 'desktop/assets/images/icons/icon_chalkboard_64.png' }\n  ];\n\n  // Open / toggle the left→right menu when clicking the paint icon\n  d.on('click', 'img.remixPaint', function (ev) {\n    ev.stopPropagation();\n\n    const $img = $(this);\n    const $card = $img.closest('.image-card');\n    const $controls = $img.closest('.image-controls');\n\n    // If we don't already have a wrapper, wrap the button and create the menu\n    let $wrapper = $img.parent('.remix-wrapper');\n    if ($wrapper.length === 0) {\n      // wrap the img element in a remix-wrapper\n      $img.wrap('<div class=\"remix-wrapper\"></div>');\n      $wrapper = $img.parent();\n\n      // ensure the wrapper has correct absolute placement (fallback)\n      $wrapper.css({ position: 'absolute', left: '0px', top: '6px' });\n\n      // build the menu DOM\n      const $menu = $('<div class=\"remix-menu\" aria-hidden=\"true\"></div>');\n      _remixEditors.forEach(ed => {\n        const $opt = $(`\n        <button class=\"remix-option\" type=\"button\" title=\"${ed.title}\" data-editor=\"${ed.key}\">\n          <img src=\"${ed.icon}\" alt=\"${ed.title}\" />\n        </button>\n      `);\n        $menu.append($opt);\n      });\n\n      // append menu to wrapper after the image\n      $img.after($menu);\n    }\n\n    // toggle menu open/closed\n    const $menu = $wrapper.find('.remix-menu').first();\n    $menu.toggleClass('open');\n  });\n\n  // Option click handler: launches the selected editor with the same payload\n  d.on('click', '.remix-wrapper .remix-option', function (ev) {\n    ev.stopPropagation();\n\n    const $opt = $(this);\n    const editor = $opt.data('editor');\n\n    const $card = $opt.closest('.image-card');\n    const url = $card.find('.bp-image').attr('src') || $card.find('img.image').attr('src');\n    const output = $card.find('.remixPaint').data('output');\n    const context = $card.find('.remixPaint').data('context');\n\n    // open the chosen editor (assumes bp.open supports these editor keys)\n    bp.open(editor, {\n      src: url,\n      output: output,\n      context: context\n    });\n\n    // close menu\n    $card.find('.remix-menu.open').removeClass('open');\n  });\n\n  // Close any open menus when clicking elsewhere\n  $(document).on('click', function () {\n    $('.remix-menu.open').removeClass('open');\n  });\n\n  // Invite a buddy link ( opens twitter with a random message )\n  $('.inviteBuddy').on('click', () => {\n    let randomInviteMessages = [\n      `Find me as \"${this.bp.me}\" on https://buddypond.com and let's start a conversation that could last a lifetime.`,\n      `I've taken my conversations to the cloud! Reach me at \"${this.bp.me}\" on https://buddypond.com where the future of messaging unfolds.`,\n      `Wave goodbye to the old and hello to the old! I'm waiting at \"${this.bp.me}\" on https://buddypond.com. Let's catch up!`,\n      `Missing chat sessions? They're back and better than ever at \"${this.bp.me}\" on https://buddypond.com. Join me and let's reconnect!`,\n      `Taking conversations to the next level. Find me at \"${this.bp.me}\" on https://buddypond.com and let's dive into new topics together!`,\n      `Remember the ease of old-school messaging? Experience it again with a twist! I'm \"${this.bp.me}\" at https://buddypond.com. Chat soon?`,\n      `I'm charting new territories in the world of digital communication. Join me as \"${this.bp.me}\" on https://buddypond.com and let's explore together!`,\n      `Just like the good old days but better! Find me on \"${this.bp.me}\" at https://buddypond.com and let's keep the conversations flowing.`,\n    ];\n    let inviteMessage = randomInviteMessages[Math.floor(Math.random() * randomInviteMessages.length)];\n    window.open(`https://twitter.com/intent/tweet?url=${inviteMessage}`);\n    return false;\n  });\n\n  function updatePositiveAffirmation() {\n    let key = affirmations[Math.floor(Math.random() * affirmations.length)];\n    $('.positiveAffirmation').html(key);\n  }\n\n  // update the positive affirmation on an interval\n  if (this.positiveAffirmationInterval) {\n    clearInterval(this.positiveAffirmationInterval);\n  }\n\n  this.positiveAffirmationInterval = setInterval(function () {\n    $('.positiveAffirmation').fadeOut({\n      duration: 4444,\n      complete: function () {\n        updatePositiveAffirmation();\n        $('.positiveAffirmation').fadeIn({\n          duration: 4444,\n          complete: function () { }\n        });\n      }\n    });\n  }, 199800); // 3 minutes, 33 seconds\n\n  updatePositiveAffirmation();\n\n  $('.positiveAffirmation').on('click', function () {\n    updatePositiveAffirmation();\n  });\n\n\n}","\n// Remark: Server will only allocate if there is no pre-existing portion of coins\n// Remark: Server maintains a mutex lock to ensure only one request per user at a time ( spamming prevention )\nexport default async function requestDefaultCoinAllocations() {\n\n  let qtokenid = buddypond.qtokenid;\n  let me = this.bp.me;\n\n  // TODO: set a five second alarm here so messages aren't immediately sent on login\n  console.log(`requestDefaultCoinAllocations ${me} ${qtokenid}`);\n\n  let res;\n  try {\n    let faucetUrl = `${buddypond.randolphEndpoint}/faucet`;\n    console.log('faucetUrl', faucetUrl);\n    res = await fetch(faucetUrl, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': `Bearer ${qtokenid}`,\n        'x-me': me\n      }\n    });\n    console.log('requestDefaultCoinAllocations', res.status, res.statusText);\n    let json = await res.json();\n    console.log('requestDefaultCoinAllocations', json);\n  } catch (err) {\n    throw err;\n  }\n\n}","export default function sortBuddyList() {\n\n  let buddyList = document.querySelector('.buddylist');\n  if (!buddyList) {\n    console.log('Buddy list not found, unable to sort');\n    return;\n  }\n\n  let buddyItems = Array.from(document.querySelectorAll('.buddylist li')); // TODO: more specific selector?\n\n  buddyItems.sort((a, b) => {\n    // Sort by status (online 🟢 first)\n    let aStatus = a.querySelector('.buddy-status').textContent.includes('🟢') ? 0 : 1;\n    let bStatus = b.querySelector('.buddy-status').textContent.includes('🟢') ? 0 : 1;\n\n    if (aStatus !== bStatus) {\n      return aStatus - bStatus; // Online first\n    }\n\n    // If both are online, sort alphabetically by name\n    if (aStatus === 0 && bStatus === 0) {\n      return a.dataset.buddy.localeCompare(b.dataset.buddy);\n    }\n\n    // If both are offline, sort by utime (most recent first), then by name\n    let aUtime = parseInt(a.dataset.utime || 0);\n    let bUtime = parseInt(b.dataset.utime || 0);\n    if (aUtime !== bUtime) {\n      return bUtime - aUtime; // Higher utime (more recent) first\n    }\n\n    return a.dataset.buddy.localeCompare(b.dataset.buddy);\n  });\n\n\n  buddyList.innerHTML = '';\n  buddyItems.forEach(item => buddyList.appendChild(item));\n}","\nexport default function showContextMenu(x, y, buddyName) {\n    const $menu = $('<div>', {\n      id: 'customContextMenu',\n      css: {\n        position: 'absolute',\n        top: y,\n        left: x,\n        zIndex: 99999,\n        display: 'block',\n        background: 'var(--desktop_element-background)',\n        border: '1px solid #ccc',\n        padding: '10px',\n        cursor: 'pointer'\n      }\n    }).append($('<ul>').append(\n      $('<li>').text('View Profile').on('click', () => openProfile(buddyName))\n    ));\n  \n    function openProfile(buddyName) {\n      console.log('Opening profile for ' + buddyName);\n      if (bp.admin) {\n        bp.open('admin-profile', { context: buddyName });\n      } else {\n        bp.open('user-profile', { context: buddyName });\n      }\n    }\n  \n    $('#customContextMenu').remove();\n    $('body').append($menu);\n  \n    $(document).one('click', function () {\n      $('#customContextMenu').remove();\n    });\n  }\n  ","// Context menu creation\nexport default function createMessageContextMenu(target, closestMessage) {\n\n  // Remove existing context menu if any\n  if (this.activeMessageContextMenu) {\n    this.activeMessageContextMenu.remove();\n    this.activeMessageContextMenu = null;\n  }\n\n  if (this.activeMessageHoverMenu) {\n    // set display: none on the hover menu\n    // TODO: needs to swap classes instead of setting styles\n    // this.activeMessageHoverMenu.style.display = 'none';\n    this.activeMessageHoverMenu = null;\n  }\n\n  // TODO: the closest .aim-hover-menu to target should have it's hover CSS logic removed\n  // aim-hover-menu:hover sets display: flex, without its display: none\n  // we need this bypassed while the context menu is open\n  const hoverMenu = target.closest('.aim-hover-menu');\n  /*\n  console.log('hoverMenu', hoverMenu);\n  if (hoverMenu) {\n    // hoverMenu.style.display = 'flex';\n  }\n  */\n\n  const contextMenu = document.createElement('div');\n  contextMenu.className = 'aim-context-menu';\n\n  const messageFrom = closestMessage.getAttribute('data-from');\n\n\n  const menuItems = [\n    { text: 'Reply', action: 'reply-message' },\n    // { text: 'Quote', action: 'quote-message' },\n    { text: 'Say Message', action: 'say-message' },\n    // { text: 'Report Message', action: 'report-message' },\n    // { text: 'Copy Message', action: 'copy-message' },\n  ];\n\n  if (messageFrom === this.bp.me || this.bp.me === 'Marak') { // TODO: admin rbac\n    menuItems.push(\n      { text: 'Edit Message', action: 'edit-message' },\n      { text: 'Delete Message', action: 'delete-message' }\n    );\n  }\n\n  menuItems.push({\n    text: 'Cast Spell',\n    action: 'cast-spell',\n  });\n\n  menuItems.forEach(item => {\n    const menuItem = document.createElement('div');\n    menuItem.className = 'aim-context-menu-item';\n    menuItem.textContent = item.text;\n    menuItem.setAttribute('data-action', item.action);\n    contextMenu.appendChild(menuItem);\n  });\n\n  // Position the context menu\n  document.body.appendChild(contextMenu);\n  const rect = target.getBoundingClientRect();\n  contextMenu.style.left = `${rect.left - 150}px`;\n  contextMenu.style.top = `${rect.bottom + window.scrollY - 20}px`;\n\n  // set data-attr to the closest message data-chat-id and data-uuid\n  const chatId = closestMessage.getAttribute('data-chat-id');\n  const uuid = closestMessage.getAttribute('data-uuid');\n  contextMenu.setAttribute('data-chat-id', chatId);\n  contextMenu.setAttribute('data-uuid', uuid);\n  contextMenu.setAttribute('data-from', messageFrom);\n\n  this.activeMessageContextMenu = contextMenu;\n  this.activeMessageHoverMenu = hoverMenu;\n  return contextMenu;\n}\n","export default function loadUserApps() {\n    // TODO: load from saved profile\n    if (this.bp.me === 'Marak') { // TODO: admin rbac checks\n        // install Admin if not already installed\n        let installedApps = this.bp.settings.apps_installed || {};\n        console.log('installedApps', installedApps);\n        if (!installedApps['admin']) {\n            this.bp.apps.desktop.addApp('admin');\n        }\n        if (typeof window.arrangeDesktop === 'function') {\n          window.arrangeDesktop();\n        }\n    }\n}","export default async function sendMessageHandler(e, chatWindow, windowType, contextName) {\n  console.log('sendMessageHandler called', e, chatWindow, windowType, contextName);\n  const message = $('.aim-input', chatWindow.content).val();\n\n  const _data = {\n    to: $('.aim-to', chatWindow.content).val(),\n    replyto: $('.aim-replyto', chatWindow.content).val(),\n    type: windowType,\n    from: this.bp.me,\n    message,\n    ctime: Date.now(),\n    text: message,\n    files: [],\n  };\n\n  console.log('sendMessageHandler _data', _data);\n\n  // TODO: move file upload code to separate function\n  // Get file previews\n  const filePreviews = $('.file-preview', chatWindow.content);\n  const files = [];\n\n  if ((!message || message.length === 0) && filePreviews.length === 0) {\n    console.log('No message to send');\n    return;\n  }\n\n  // Collect all files first\n  filePreviews.each((_, filePreview) => {\n    $('.file-content', filePreview).each((_, fileContent) => {\n      const file = this.bp.apps['file-viewer'].getFile(fileContent);\n      if (file) {\n        files.push({\n          file,\n          element: fileContent\n        });\n      }\n    });\n  });\n\n  // Create status indicators for each file\n  files.forEach(({ file, element }) => {\n    const statusDiv = $('<div>', {\n      class: 'upload-status',\n      css: {\n        position: 'absolute',\n        top: 0,\n        left: 0,\n        right: 0,\n        bottom: 0,\n        background: 'rgba(0, 0, 0, 0.7)',\n        color: 'white',\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n        zIndex: 1000\n      }\n    }).text('Waiting...');\n\n    $(element).css('position', 'relative').append(statusDiv);\n  });\n\n  // Process files sequentially\n  try {\n    for (const { file, element } of files) {\n      const statusDiv = $(element).find('.upload-status');\n      statusDiv.text('Uploading...');\n\n      try {\n        console.log('is there a filepath?', file.filePath);\n        console.log('this is the file', file);\n        file.filePath = file.filePath || file.name;\n\n        // we are going to perform some basic file organization and routing here\n        // when the user uploads files via the chat window, we are going to store them\n        // in the user's directory on the CDN\n        // to help out the user, will perform mime type / file ext detection here in order to upload\n        // the file to the appropriate directory such as images, audio, videos, etc\n        let supportedImageTypesExt = ['jpeg', 'png', 'gif', 'webp', 'svg']; // same as server ( for now )\n        let supportedAudioTypesExt = ['mp3', 'wav', 'ogg', 'flac', 'aac', 'm4a'];\n        let supportedVideoTypesExt = ['mp4', 'webm', 'ogg', 'avi', 'mov', 'mkv'];\n\n        // check to see if the file.name has an extension included in the supportedImageTypesExt array\n        let fileExt = file.name.split('.').pop().toLowerCase();\n        if (supportedImageTypesExt.includes(fileExt)) {\n          file.filePath = 'images/' + file.filePath;\n        }\n        if (supportedAudioTypesExt.includes(fileExt)) {\n          file.filePath = 'audio/' + file.filePath;\n        }\n        if (supportedVideoTypesExt.includes(fileExt)) {\n          file.filePath = 'videos/' + file.filePath;\n        }\n\n        // make file.filePath url encoded\n        file.filePath = encodeURIComponent(file.filePath);\n\n        console.log('assigning file path', file.filePath);\n        let fileUrl = await this.bp.apps.client.api.uploadFile(file, (progress) => {\n          statusDiv.text('Uploading: ' + progress + '%');\n        });\n\n        // now that we have the url, just send a regular message with the url\n        // the card type should automatically be detected by the server\n        // the the body of the message will be the url with extension of image, video, etc\n        let message = {\n          to: _data.to,\n          from: _data.from,\n          type: _data.type,\n          replyto: _data.replyto,\n          text: fileUrl\n        };\n        // TODO: replyto\n        console.log(\"sending multimedia message\", message);\n        this.bp.emit('buddy::sendMessage', message);\n\n        // Fade out and remove the uploaded file preview\n        await $(element).fadeOut(300);\n        $(element).remove();\n\n      } catch (error) {\n        console.error('Error uploading file:', error);\n        statusDiv.text('Failed: ' + error.message)\n          .css('background', 'rgba(255, 0, 0, 0.7)');\n\n        // Keep failed uploads visible for 2 seconds then fade out\n        await new Promise(resolve => setTimeout(resolve, 8000));\n        await $(element).fadeOut(300);\n        $(element).remove();\n      }\n    }\n  } catch (error) {\n    console.error('Error in file upload process:', error);\n  }\n\n  // Remove empty file preview containers\n  filePreviews.each((_, container) => {\n    if ($(container).children().length === 0) {\n      $(container).remove();\n    }\n  });\n\n  $('.file-preview', chatWindow.content).remove();\n\n  // Send the regular message\n  if (windowType === 'pond') {\n    _data.type = 'pond';\n  } else {\n    _data.type = 'buddy';\n  }\n\n  // TODO: move these commands to defaultCommands in buddyscript\n  if (_data.text.startsWith('/gif')) {\n    // split text to parts on space\n    let params = _data.text.split(' ').slice(1);\n    await bp.load('image-search');\n\n    if (params.length === 0) {\n      await bp.open('image-search', {\n        query: params[0],\n        provider: 'giphy-stickers',\n        context: _data.to,\n        output: windowType\n      });\n      // clear the input\n      $('.aim-input', chatWindow.content).val('');\n      return;\n    }\n\n    let result = await bp.apps['image-search'].fetchImages(params[0], 6, 'giphy-stickers');\n    // pick a random image from the result\n    if (result.error) {\n      console.error('Image search error:', result.error);\n      // show an error message in the chat window\n      await this.showCard({ chatWindow, cardName: 'error', context: { message: result.error } });\n\n      // $('.aim-input', chatWindow.content).val('Error fetching images: ' + result.error);\n      console.error('Error fetching images:', result.error);\n      return;\n    }\n    if (result.length === 0) {\n      console.error('No images found for query:', params[0]);\n      return;\n    }\n    let randomImage = result[Math.floor(Math.random() * result.length)];\n    console.log('Random image selected:', randomImage);\n    // _data.text = randomImage; // set the text to the image URL\n    _data.card = {\n      type: 'image',\n      url: randomImage\n    };\n  }\n\n  // TODO: merge back params to query string, just pop the first one off\n  if (_data.text.startsWith('/image')) {\n    // split text to parts on space\n    let params = _data.text.split(' ').slice(1);\n    console.log('/image params', params);\n    if (params.length === 0) {\n      // if only one parameter is provided, open the image search app\n      await bp.open('image-search', { query: params[0], provider: 'pexels' });\n      // clear the input\n      $('.aim-input', chatWindow.content).val('');\n      return;\n    }\n\n    await bp.load('image-search');\n    console.log('pppp', params)\n    let result = await bp.apps['image-search'].fetchImages(params[0], 6, 'pexels');\n    // pick a random image from the result\n    if (result.error) {\n      console.error('Image search error:', result.error);\n      // show an error message in the chat window\n      await this.showCard({ chatWindow, cardName: 'error', context: { message: result.error } });\n\n      // $('.aim-input', chatWindow.content).val('Error fetching images: ' + result.error);\n      console.error('Error fetching images:', result.error);\n      return;\n    }\n    if (result.length === 0) {\n      console.error('No images found for query:', params[0]);\n      return;\n    }\n    let randomImage = result[Math.floor(Math.random() * result.length)];\n    console.log('Random image selected:', randomImage);\n    // _data.text = randomImage; // set the text to the image URL\n    _data.card = {\n      type: 'image',\n      url: randomImage\n    };\n  }\n\n  // if this is a buddyscript command, but not a /say command\n  // say has a special meaning in the context of the chat window\n  // as it should be sent as regular text message ( should be a card later, click to repeat )\n  // TODO: needs to rebuild bs system to support local transform commands\n  if (_data.text.startsWith('/')\n    && !_data.text.startsWith('/say')\n    && !_data.text.startsWith('/roll')\n    && !_data.text.startsWith('/gif')\n    && !_data.text.startsWith('/image')\n    && !_data.text.startsWith('/deepseek')\n  ) {\n    // TODO: process the card locall here\n    /*\n    _data.card = {\n     type: 'bs'\n   };\n   */\n    // runs local BS script command\n    // alert('bs card')\n\n    let bs = this.bp.apps.buddyscript.parseCommand(_data.text);\n    console.log('got back buddyscript command', bs);\n    if (bs.pipe) {\n      //if (now - messageTime < 10000) {\n      // pipeable / immediate run commands should only persist for 10 seconds\n      bs.pipe({\n      chatWindow,\n      contextName: _data.to,\n      windowType\n    });\n      // clear the input\n      $('.aim-input', chatWindow.content).val('');\n      return false;\n\n      // }\n    }\n\n    console.log(' ', bs);\n    if (bs.type === 'show-card') {\n      // show the bs card\n      // console.log('showing bs card', message, bs);\n      let cardData = bs.data;\n      this.showCard({\n        chatWindow,\n        cardName: 'bs',\n        context: {\n          ...bs,\n          context: message.to,\n          type: windowType\n        }\n      });\n    }\n    $('.aim-input', chatWindow.content).val('');\n\n    return false;\n  }\n\n  console.log(`Sending message to ${_data.to} from ${_data.from} of type ${_data.type}:`, _data.text);\n  console.log(_data.text.startsWith('\\\\'));\n  if (_data.text.startsWith('\\\\')) {\n   \n    // let bs = this.bp.apps.buddyscript.parseCommand(_data.text);\n    // console.log('backwards command', bs);\n    _data.card = {\n      type: 'bs',\n      command: _data.text.replace('\\\\', '/').trim(),\n      //commandData: bs\n    };\n\n  }\n\n\n  // TODO: check if this is a valid BS command\n  // if so, we need to construct a card to show the command\n\n  // TODO: add support for sending /bs commands with \\ instead of /\n  /*\n  if (_data.text.startsWith('\\\\')) {\n    // the command is a /foo style command\n    // extract the command from the text\n    let command = _data.text.split(' ')[0].replace('\\\\', '');\n    alert(command)\n    _data.text = 'Sent app using `\\\\' + command + '` command'; // TODO: better UX message\n    _data.card = {\n      type: 'app', // coould also be a \"bs\" card, might need distinction between app and bs commands\n      context: command\n    };\n  }\n  */\n\n  console.log('emitting message', _data);\n  this.bp.emit('buddy::sendMessage', _data);\n\n  // Clear input\n  $('.aim-input', chatWindow.content).val('');\n\n  // Hide the aim-reply-box\n  $('.aim-reply-box', chatWindow.content).remove();\n\n  // clear the replyTo input value\n  $('.aim-replyto', chatWindow.content).val('');\n  /*\n  const replyBox = target.closest('.aim-reply-box');\n  if (replyBox) {\n    replyBox.remove();\n    this.activeReplyBox = null;\n    this.bp.replyMode = false;\n    this.bp.replyData = null;\n  }\n  */\n\n  let $sendButton = $('.aim-send-btn', chatWindow.content);\n  $sendButton.css('opacity', 0.5);\n\n\n}","export default async function showCard({chatWindow, cardName, context = {}}) {\n\n  // render the help card and do not send the message\n    let cardManager = this.bp.apps.card.cardManager;\n    // console.log('cardManager.loadCard', cardData);\n    const _card = await cardManager.loadCard(cardName, context, chatWindow);\n    let container = document.createElement('div');\n    container.classList.add('cardContainer');\n    let d = await _card.render(container, chatWindow);\n    if (!chatWindow || !chatWindow.content) {\n      console.error('chatWindow not found. user most likely not in the chat window');\n      throw new Error('chatWindow.content not found. user most likely not in the chat window');\n      return;\n    }\n\n    let aimMessagesContainer = chatWindow.content.querySelector(`.aim-messages-container`);\n\n    // find the correct aim-messages-container ( if pond / or buddy i guess )\n    // find the .aim-messages-container inside the chatWindow.content with data-context attribute\n    if (context.type === 'pond') {\n      // console.log('Inserting message into pond chat window', message);\n      aimMessagesContainer = chatWindow.content.querySelector(`.aim-messages-container[data-context=\"${context.context}\"]`);\n    }\n\n    const aimMessages = aimMessagesContainer.querySelector('.aim-messages');\n    if (!aimMessages) {\n      console.error('aim-messages not found. user most likely not in the chat window');\n      return;\n    }\n\n    // append container to the aim-messages at the end\n    aimMessages.appendChild(container);\n\n    // empty the aim-input\n    $('.aim-input', chatWindow.content).val('');\n\n    // scroll to the bottom of the chat window\n    // aimMessages.scrollTop = aimMessages.scrollHeight;\n    /* No longer needed, as scrollIntoView should be handled by messages\n    if (!this.bp.isMobile()) {\n      container.scrollIntoView({\n        behavior: 'instant',\n        container: 'nearest'\n      });\n    }\n    */\n\n    return d;\n  }\n","export default function scrollToBottom(parent, retryDelay = 0, retryCount = 0) {\n  if (!parent) return;\n  if (retryCount > 5) return;\n\n  const chatArea = $('.aim-chat-area', parent)[0];\n  if (!chatArea) return;\n\n  if (retryCount === 0 && chatArea._scrollRetryTimer) {\n    clearTimeout(chatArea._scrollRetryTimer);\n    chatArea._scrollRetryTimer = null;\n  }\n\n  $(chatArea).scrollTop(chatArea.scrollHeight);\n  \n\n  requestAnimationFrame(() => {\n    const buffer = 10; // tolerate small gap\n    const isAtBottom = (chatArea.scrollHeight - chatArea.scrollTop - chatArea.clientHeight) < buffer;\n\n    if (!isAtBottom) {\n      retryDelay += 200;\n      retryCount++;\n\n      chatArea._scrollRetryTimer = setTimeout(() => {\n        scrollToBottom(parent, retryDelay, retryCount);\n      }, retryDelay);\n    } else {\n      chatArea._scrollRetryTimer = null;\n    }\n\n    // Final fallback if Safari still misbehaves\n    if (retryCount >= 5 && !isAtBottom) {\n      chatArea.lastElementChild?.scrollIntoView({ block: 'end' });\n    }\n  });\n}\n","export default function defaultAvatarSvg(username) {\n  // Check if avatar is already cached\n  if (this.data.avatarCache.has(username)) {\n    return this.data.avatarCache.get(username);\n  }\n\n  // Create an identicon avatar using DiceBear\n  const avatar = this.bp.vendor.dicebear.createAvatar(this.bp.vendor.dicebearAvatars, {\n    seed: username, // Username as seed for consistent avatar\n    size: 40, // Avatar size in pixels\n    backgroundColor: [\"#f0f0f0\"], // Optional: Customize background\n  });\n\n  // Convert avatar to SVG string\n  const svg = avatar.toString();\n\n  // Store in cache\n  this.data.avatarCache.set(username, svg);\n\n  return svg;\n}","export default function createBuddyListWindow() {\n\n    // calculate right side of screen\n    let x = window.innerWidth - 250;\n\n    let buddyListWindow = this.bp.apps.ui.windowManager.createWindow({\n        app: 'buddylist',\n        type: 'buddylist-profile',\n        title: 'Buddy List',\n        icon: '/desktop/assets/images/icons/icon_profile_64.png',\n        id: 'buddylist',\n        parent: this.bp.apps.ui.parent,\n        width: 250,\n        height: 500,\n        x: x,\n        y: 50,\n        onOpen: () => {\n\n            // Remark: We seeing a race condition where the input field is not focusable\n            // Most likely due to element being hidden / shown\n            // We hooked into window focus events and everything appeared OK in regards to conflicting focus() calls\n            // The issue is most likely due to the element being hidden\n            // This still doesn't work as intended since the element might actually be hidden\n            // TODO: find a better way to handle this\n            function focusOnInput() {\n                const $loginInput = $('.loginForm input[name=\"username\"]');\n                console.log('focusOnInput: Found elements:', $loginInput.length, $loginInput);\n\n                // If the element doesn’t exist, retry after a delay\n                if ($loginInput.length === 0) {\n                    console.log('Input not found, retrying in 100ms');\n                    setTimeout(focusOnInput, 100);\n                    return;\n                }\n\n                // Check if the element is focusable\n                const input = $loginInput[0]; // Get the raw DOM element\n                const isFocusable = input.offsetParent !== null && // Visible in the DOM\n                    !input.disabled && // Not disabled\n                    input.tabIndex !== -1 && // Focusable via tab\n                    getComputedStyle(input).visibility !== 'hidden' && // Not hidden\n                    getComputedStyle(input).display !== 'none'; // Not display: none\n\n                if (!isFocusable) {\n                    console.log('Input is not focusable yet, retrying in 100ms', {\n                        isVisible: input.offsetParent !== null,\n                        isEnabled: !input.disabled,\n                        tabIndex: input.tabIndex,\n                        visibility: getComputedStyle(input).visibility,\n                        display: getComputedStyle(input).display\n                    });\n                    setTimeout(focusOnInput, 100);\n                    return;\n                }\n\n                // Attempt to focus and verify\n                $loginInput.focus();\n                setTimeout(() => {\n                    if (document.activeElement === input) {\n                        console.log('Focus successful on:', input);\n                    } else {\n                        console.warn('Focus failed, active element is:', document.activeElement);\n                        // Optionally retry\n                        setTimeout(focusOnInput, 100);\n                    }\n                }, 0); // Check focus in the next tick\n            }\n            // focusOnInput();\n            // if we call this in console after load, it works\n            $('.loginForm input[name=\"username\"]').focus();\n\n        },\n        onClose: () => {\n            this.opened = false;\n            // disconnect from websocket server\n            if (this.client) {\n                this.client.disconnect();\n                this.client = null;\n            }\n        }\n    });\n\n    return buddyListWindow;\n\n}\n","export default function logout() {\n    // set status to online\n    $('.loginButton').prop('disabled', false);\n    $('.loginButton').removeClass('disabled');\n    $('#menu-bar-coin-balance').text('0');\n\n    this.client.setStatus(this.bp.me, {\n        status: 'offline'\n    }, (err, re) => {\n        console.log('buddypond.setStatus', err, re);\n        // close any open chat windows\n        // $('.chatWindow').remove(); // maybe, they could stay open as well\n        this.bp.apps.ui.windowManager.windows.forEach(window => {\n            console.log('closing window', window);\n            if (window.type === 'buddy' || window.type === 'pond') {\n                // console.log('closing chat window', window.id);\n                window.close();\n            }\n        });\n        // iterate through all windows and close any that are chat windows\n        // disconnect the client\n        // this.bp.apps.client.logout();\n        $('.password').val('');\n        $('.loggedIn').flexHide();\n        $('.loggedOut').flexShow();\n\n        this.data.profileState = null;\n        this.bp.play('desktop/assets/audio/GOODBYE.wav');\n        // TODO can we now remove bp.apps.client.logout()?\n        this.bp.apps.client.logout();\n        this.client.disconnect();\n        this.bp.connected = false;\n        this.client = null;\n        // clear out the local .data scope\n        // TODO: only declare this once ( code is repeated in constructor )\n        this.data = {\n            processedMessages: {},\n            profileState: {\n            },\n            activeUsersInContext: {},\n            activeUsers: [],\n            activePonds: [],\n            avatarCache: new Map()\n        };\n        // empty the buddylist\n        $('.buddylist').empty();\n\n        // hide any .dialog\n        $('.dialog').remove();\n\n    });\n}"],"names":["attachContextMenu","buddyElement","$","on","e","preventDefault","buddyName","target","closest","dataset","buddy","this","showContextMenu","pageX","pageY","parseMarkdownWithoutPTags","markdown","text","length","graphemes","splitEmojiGraphemes","emojiList","Set","Object","keys","EMOJIS","emojis","filter","g","has","replace","join","trim","isEmojiOnly","map","supportedColors","supportedStyles","linkExtension","name","level","renderer","token","href","parser","parseInline","tokens","styleExtension","tokenizer","src","match","exec","raw","modifiers","split","every","mod","includes","type","lexer","inlineTokens","content","reverse","forEach","char","i","walkTokens","console","log","html","marked","use","extensions","parse","error","GraphemeSplitter","splitGraphemes","createHoverMenu","message","hoverMenu","document","createElement","className","menuItems","from","bp","me","push","action","icon","item","button","setAttribute","appendChild","createTextNode","forbiddenNotes","base64","checkForLinksInMessage","messageText","url","URL","protocol","isValidUrl","contentUrl","card","urlObj","ext","pathname","pop","toLowerCase","buddypond","supportedImageTypesExt","supportedAudioTypesExt","supportedVideoTypesExt","err","warn","isValidYoutubeLink","videoId","searchParams","get","thumbnail","context","slice","isValidGithubLink","githubRegex","owner","repo","filename","setupInputEvents","windowType","contextName","chatWindow","$input","$form","$sendButton","that","event","handleEmojiInput","cursorPos","selectionStart","inputValue","val","getInputContext","autocomplete","which","shiftKey","cursorPosition","newValue","setSelectionRange","css","is","startsWith","submit","replaceShortcodes","activeContext","currentActiveContext","emit","to","isTyping","ctime","Date","now","setupAutocomplete","options","bind","emojiMap","usedShortcodes","reduce","emoji","isValidShortcode","alias","shortcode","add","textBeforeCursor","lastColonIndex","lastIndexOf","endIndex","nextColonIndex","indexOf","potentialShortcode","test","startIndex","firstChar","charAt","emojiSuggestions","suggestions","label","value","commands","command","focus","ui","source","request","response","query","suggestion","select","textarea","before","after","newCursorPos","trigger","minLength","position","my","at","collision","open","$textarea","originalText","newText","call","randowFunWord","words","Math","floor","random","containsBadWord","str","lowerStr","decoded","some","fnote","RegExp","JSON","atob","ChatWindowButtonBar","constructor","inputButtons","buttons","storedOrder","settings","Array","isArray","sortButtonsByOrder","container","render","enableDragAndDrop","buttonBar","classList","element","createButtonElement","isRoot","wrapper","image","alt","title","draggable","innerHTML","innerText","baseDataset","entries","k","v","children","dropdown","style","display","child","childWrapper","childBaseEl","remove","addEventListener","ev","stopPropagation","onclick","addButton","b","newButtonElement","refreshSortable","removeButton","buttonText","index","findIndex","splice","roots","el","contains","removeChild","saveButtonOrder","sortable","items","tolerance","stop","syncButtonOrder","orderedTexts","find","Boolean","set","apps","windowManager","findWindows","app","window","reRenderButtons","order","buttonMap","fromEntries","setupChatWindowButtons","chatWindowButtons","isMobile","navigator","userAgent","env","prepend","populateRoomList","hotPonds","roomList","sortedPonds","sort","a","connection_count","userOpenedPonds","data","activePonds","existingItems","Map","existingPondIds","each","_","pondId","pond","pond_id","pondName","isUserOpened","isActive","existingItem","$scoreElement","String","$closeButton","append","shouldBeActive","hasClass","toggleClass","delete","closeButton","$newItem","previousItem","$item","$nextSibling","next","insertAfter","$firstItem","first","prependTo","not","removeClass","addClass","updatePondConnectedUsers","chatId","userList","existingUserIds","userId","toString","users","user","profilePicture","userItem","$textElement","$profileContainer","$newProfileElement","createProfilePictureElement","empty","$userItem","class","$profilePicture","$userText","$existingContainer","discordMode","config","cdn","$img","attr","$currentImg","defaultAvatarSvg","isValidContextName","alert","handleExistingWindow","client","ensureMessagesContainer","toggleMessagesContainer","createNewChatWindow","windowTitle","windowId","windowConfig","buildWindowConfig","createWindow","onOpen","async","_window","initializeChatWindow","onClose","removeSubscription","id","key","messagesWsClients","wsClient","closeConnection","setupCloseButtonHandler","hide","flexShow","loggedIn","isBuddy","iconImagePath","buddylist","profileState","profile_picture","height","innerHeight","width","innerWidth","parent","x","y","setupChatWindow","addSubscription","clearBuddyNewMessages","renderMessages","attemptFocus","aimInput","setTimeout","focusInputField","newMessages","receivedInstantMessage","re","processedMessages","messagesToRender","renderChatMessage","chatArea","userListArea","userListContext","newContainer","newUserList","targetContainer","targetUserList","show","availableContainers","firstContext","firstUserListContext","scrollToBottom","chatWindowTemplate","messageTemplateString","cloned","aimMessagesContainer","aimUserListContainer","joinPond","aimWindow","touchStartX","touchEndX","handleSwipe","deltaX","changedTouches","screenX","toggleRoomListBtn","textContent","toggleUserListBtn","closePondChatBtn","toggle","setupMessageForm","username","openChatWindow","setupRoomListClickHandler","sendMessageHandler","selectedContext","getAttribute","remainingContainers","nextContext","roomItem","getWindow","defaultProfileFiles","getFileType","fileName","endsWith","handleContextMenuItemClick","performAction","closeMenus","handleEditHintAction","messageContent","querySelector","messageUUID","originalMessage","messageData","uuid","cancelEdit","saveEdit","activeMessageContextMenu","activeMessageHoverMenu","activeReplyBox","closestTarget","editMessage","replyMessage","closestMessage","createMessageContextMenu","deleteMessage","output","removeInstantMessage","ignoreUIControlKeys","editableContainer","parentNode","insertBefore","editHint","handleKeydown","cleanupListeners","handleBlur","relatedTarget","removeEventListener","restoreText","removeAttribute","blur","messageElement","newMessageText","editInstantMessage","replyData","replyBox","messageSender","replyInput","messageTextInput","cancelReply","bindProfilePictureClick","parents","chatMessageElement","buddyname","rollToNumber","$el","formattedValue","toLocaleString","digits","d","digitContainer","inner","transition","transform","Client","host","api","reconnectAttempts","maxReconnectAttempts","maxBackoffDelay","isIntentionallyClosed","getTime","prototype","connect","createWebSocketClient","disconnect","addBuddy","cb","uri","method","endpoint","headers","Accept","qtokenid","body","stringify","controller","AbortController","timeoutId","abort","incrementPackets","perf","start","fetch","signal","then","clearTimeout","ok","json","errorData","Error","status","statusText","end","addPerfTime","catch","msg","apiRequest","send","setStatus","update","reconnect","Promise","resolve","reject","WebSocket","buddylistWsEndpoint","handleOpen","pingInterval","setInterval","readyState","OPEN","handleMessage","parseData","profile","dtime","success","reward","handleClose","code","reason","clearInterval","delay","min","pow","attempt","handleError","close","BuddyList","updates","avatarCache","defaultPond","subscribedBuddies","subscribedPonds","buddyscript","showedHelp","logout","fileInput","accept","file","files","filePath","onProgress","percent","result","uploadFile","sendCardMessage","click","provider","$target","emojiPicker","onSelect","messageControls","isHost","targetEl","align","sendButton","dispatchEvent","Event","bubbles","defaultChatWindowButtons","enabledChatWindowButtons","desktop","buttonMeta","list","chatButton","opened","showingIsTyping","faucetAttempts","init","all","vendor","dicebear","importModule","dicebearAvatars","appendScript","load","bindMessageContextMenu","openDefaultPond","localValue","showPond","htmlStr","fetchHTMLFragment","appendCSS","buddyListWindow","createBuddyListWindow","createHTMLContent","focusWindow","restore","showBuddyList","eventsBound","registerEventHandlers","buddylistUIEvents","handleAuthentication","getLatestMessages","pondname","sendMessage","buddyReadNewMessages","handleChatMessages","windowsToUpdate","messages","values","showCard","cardName","sendMessageToServer","emitLocal","pondSendMessage","connected","localToken","localStorage","getItem","verifyToken","hasPassword","flexHide","discordView","minimize","handleAuthSuccess","qtoken","play","tryHard","Infinity","tempDiscordId","linkDiscordAccount","renderOrUpdateBuddyInBuddyList","buddydata","buddyTimeouts","buddyListItems","querySelectorAll","existingBuddy","wasConnected","hasOwnProperty","isConnected","diff","utime","buddyListItemEl","connectedStatusIcon","isCalling","lastSeen","lastSeenDate","lastSeenString","year","month","day","hour","minute","second","hour12","buddyListItem","firstChild","formattedDate","DateFormat","format","date","sortBuddyList","createChatMessageElement","messageTime","chatMessage","img","defaultAvatar","contentWrapper","messageHeader","sender","tripcode","timestamp","messageMeta","geoFlag","location","renderGeoFlag","badgesContainer","replyIndicator","replyto","repliedMessage","repliedSender","repliedText","scrollIntoView","behavior","block","processedText","aimMessages","count","parseInt","low","high","insertBeforeNode","mid","midId","isNaN","insertChatMessage","_chatWindow","pondNames","decodedText","entities","decodeEntities","hashPondNameRegex","matchAll","m","findAllHashPondNames","activeUsers","activeUsersInContext","removed","removedMessageEl","edited","editedMessageEl","editedMessageContent","shift","spellbook","say","processMessages","cardData","cardManager","_card","loadCard","renderBuddyRequests","buddyrequests","buddyrequest","pendingIncomingBuddyRequests","totalIncomingBuddyRequests","denyBuddy","approveBuddy","processBuddylist","Number","powerlevel","popup","duration","system","totalIsConnected","totalIsOnline","ponds","win","buddylistData","profileNeedsUpdate","wasOnline","_processBuddylistData","_processBuddyRequestsData","affirmations","prop","password","authBuddy","change","isChecked","email","sendPasswordResetEmail","_remixEditors","updatePositiveAffirmation","$wrapper","wrap","left","top","$menu","ed","$opt","editor","$card","randomInviteMessages","inviteMessage","positiveAffirmationInterval","fadeOut","complete","fadeIn","determineWindowParameters","generateWindowId","existingWindow","generateDefaultProfile","basePath","fileContent","blob","Blob","File","lastModified","uploadError","requestDefaultCoinAllocations","res","faucetUrl","randolphEndpoint","Authorization","buddyList","buddyItems","aStatus","bStatus","localeCompare","aUtime","bUtime","zIndex","background","border","padding","cursor","admin","openProfile","one","contextMenu","messageFrom","menuItem","rect","getBoundingClientRect","bottom","scrollY","isHoverMenuAction","loadUserApps","installedApps","apps_installed","addApp","arrangeDesktop","_data","filePreviews","filePreview","getFile","statusDiv","right","color","alignItems","justifyContent","fileExt","encodeURIComponent","fileUrl","progress","params","fetchImages","randomImage","bs","parseCommand","pipe","retryDelay","retryCount","_scrollRetryTimer","scrollTop","scrollHeight","requestAnimationFrame","isAtBottom","clientHeight","lastElementChild","svg","createAvatar","seed","size","backgroundColor","ws","emailVerified","noAlert","videochat","startCall","typingIndicatorId","typingMessage","typingIndicator","appendTo","lastTypingMessage","sendWsMessage","newBalance","portfolio","portfolioWindow","portfolioData","updateCoinRow","symbol","amount","available","price","cost","coinSendSelector","coinSendBalance","balance","windows"],"mappings":"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"}