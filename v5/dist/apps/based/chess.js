class s{constructor(s,t={}){this.bp=s,this.options=t,this.board=null,this.game=null,this.ws=null,this.playerColor=null,this.stockfish=null,this.difficulty=10,this.mode="multiplayer"}async init(){return this.html=await this.bp.load("/v5/apps/based/chess/chess.html"),await this.bp.appendCSS("/v5/apps/based/chess/chess.css"),await this.bp.appendScript("/v5/apps/based/chess/vendor/chessboardjs-1.0.0/js/chessboard-1.0.0.js"),await this.bp.appendScript("/v5/apps/based/chess/vendor/chess.js"),await this.bp.appendCSS("/v5/apps/based/chess/vendor/chessboardjs-1.0.0/css/chessboard-1.0.0.min.css",!1,!0),"loaded ChessApp"}async open(s={}){if(this.win)return this.win;if(this.win=await this.bp.window(this.window()),console.log("Opening ChessApp window:",this.win),this.bindUI(),this.setupDifficultySlider(),s.gameId){this.gameId=s.gameId,this.joinGame(s.gameId);let t=this.gameId.split("/");console.log("Parts:",t),this.opponent=t[0],this.opponent===this.bp.me&&(this.opponent=t[1])}return this.win}window(){return{id:"chess",title:"BuddyPond Chess",icon:"desktop/assets/images/icons/icon_chess_64.png",x:120,y:80,parent:$("#desktop")[0],width:850,height:600,content:this.html,resizable:!0,closable:!0,onClose:()=>{this.cleanup(),this.win=null},onResize:()=>{this.board&&this.board.resize()}}}bindUI(){const s=$(".chess-app-mode-selection"),t=$(".chess-app-join-ui"),e=$(".chess-app-game-ui");$("#play-stockfish").on("click",(()=>{this.mode="stockfish",s.hide(),e.show(),$("#opponent-name").text("Opponent: Stockfish"),this.startStockfishGame()})),$("#show-join-game").on("click",(()=>{if(!this.bp.me||"Guest"===this.bp.me)return alert("Please log in to play with a buddy. "+this.bp.me),void this.bp.open("buddylist");s.hide(),t.show()})),$("#join-game").on("click",(async()=>{let s=$("#chess-game-buddyname").val().trim();if(!s)return void alert("Please enter a Buddy Name");let i=this.bp.me;if(s===i)return void alert("You cannot play against yourself. Please enter a different Buddy Name.");let a=[s,i].sort().join("/");console.log("Game ID: "+a),this.opponent=s,$("#game-input").val(a),this.mode="multiplayer",t.hide(),e.show(),this.setStatus(`Waiting for ${s} to connect`),console.log("gameId",a),this.sendGameInvite(s),this.joinGame(document.getElementById("game-input").value.trim())})),$("#leave-button").on("click",(()=>{this.cleanup(),this.resetUI()})),$("#resign-button").on("click",(()=>{"multiplayer"===this.mode&&this.ws?.send(JSON.stringify({type:"resign"})),this.setStatus("You resigned the game."),this.gameHeader("Resigned")})),$("#restart-button").on("click",(()=>{"stockfish"===this.mode&&this.startStockfishGame()})),this.game=new Chess;const i=$("#chessboard",this.win.content);this.board=Chessboard(i,{pieceTheme:"/v5/apps/based/chess/img/chesspieces/wikipedia/{piece}.png",draggable:!0,position:"start",onDragStart:this.onDragStart.bind(this),onDrop:this.onDrop.bind(this),onSnapEnd:this.onSnapEnd.bind(this)}),$(".chess-app-game-row",this.win.content).width(),this.bp.isMobile()&&$(".chess-app-board",this.win.content).css({width:"calc(var(--vw) * 0.95)"}),this.board.resize(),this.updateStatus()}sendGameInvite(s){let t={from:bp.me,to:s,text:"Let's play a chess game",type:"buddy",card:{type:"chess"}};console.log("Buddy Chess message",t),buddypond.sendCardMessage(t,(function(s,t){s?console.error("Error sending message",s):console.log("Message sent",t)}))}setupDifficultySlider(){const s=document.createElement("div");s.className="chess-app-difficulty-slider",s.innerHTML=`\n      <label for="difficulty">Difficulty: <span id="difficultyValue">${this.difficulty}</span></label>\n      <input type="range" id="difficulty" min="0" max="20" value="${this.difficulty}" step="1">\n    `,$(".chess-app-controls",this.win.content).append(s);const t=document.getElementById("difficulty"),e=document.getElementById("difficultyValue");t.addEventListener("input",(s=>{this.difficulty=parseInt(s.target.value,10),e.textContent=this.difficulty,this.stockfish&&this.setStockfishDifficulty()}))}setStockfishDifficulty(){this.stockfish.postMessage(`setoption name Skill Level value ${this.difficulty}`);const s=Math.max(1,Math.floor(this.difficulty/2)+1);this.stockfish.postMessage(`setoption name Skill Level Maximum Depth value ${s}`)}startStockfishGame(){$(".chess-app-difficulty-slider",this.win.content).show(),this.game.reset(),this.board.position("start"),this.playerColor="w",this.setStatus("You are White. Make your move."),this.stockfish=new Worker("v5/apps/based/chess/vendor/stockfish.min.js"),this.stockfish.onmessage=s=>{if("string"==typeof s.data&&s.data.startsWith("bestmove")){const t=s.data.split(" ")[1],e=t.substring(0,2),i=t.substring(2,4),a=this.game.move({from:e,to:i,promotion:"q"});this.bp.play("v5/apps/based/chess/vendor/sound/standard/Move.mp3"),a&&(a.captured?this.bp.play("/v5/apps/based/chess/vendor/sound/standard/Capture.mp3"):this.game.in_check()?this.bp.play("/v5/apps/based/chess/vendor/sound/standard/Check.mp3"):this.game.in_checkmate()?this.bp.play("/v5/apps/based/chess/vendor/sound/standard/Victory.mp3"):this.bp.play("/v5/apps/based/chess/vendor/sound/standard/Move.mp3"),this.board.position(this.game.fen()),this.updateStatus())}},this.stockfish.postMessage("uci"),this.stockfish.postMessage("isready"),this.setStockfishDifficulty()}async joinGame(s){if(!s)return alert("Please enter a game ID");const t=$(".chess-app-mode-selection"),e=$(".chess-app-join-ui"),i=$(".chess-app-game-ui");this.mode="multiplayer",e.hide(),i.show(),t.hide(),$("#restart-button",this.win.content).hide(),$(".chess-app-difficulty-slider",this.win.content).hide();const a=`${buddypond.chessWsEndpoint}?me=${buddypond.me}&qtokenid=${buddypond.qtokenid}gameId=${encodeURIComponent(s)}`;console.log("Connecting to game server at:",a),this.ws=new WebSocket(a),this.ws.onopen=()=>{this.ws.send(JSON.stringify({type:"join",gameId:s})),this.ws.send(JSON.stringify({type:"getState"})),this.setStatus("Connected! Waiting for opponent...")},this.ws.onmessage=s=>this.handleSocketMessage(s),this.ws.onclose=()=>this.setStatus("Disconnected from game"),this.ws.onerror=()=>this.setStatus("WebSocket error occurred")}async resignGame(){this.ws&&this.ws.readyState===WebSocket.OPEN?(this.ws.send(JSON.stringify({type:"resign"})),this.setStatus("You resigned the game."),this.bp.play("/v5/apps/based/chess/vendor/sound/standard/Defeat.mp3")):(this.setStatus("Cannot resign, not connected to a game."),this.bp.play("/v5/apps/based/chess/vendor/sound/standard/Error.mp3"))}handleSocketMessage(s){const t=JSON.parse(s.data);switch(console.log("handleSocketMessage",s.data),t.type){case"color":this.playerColor=t.color,this.board.orientation("w"===this.playerColor?"white":"black"),this.setStatus(`You are ${"w"===this.playerColor?"White":"Black"}. `+("w"===this.game.turn()?"White":"Black")+" to move.");break;case"gameStart":this.gameConnected=!0,this.setStatus("Game started! "+(this.playerColor===this.game.turn()?"Your move":this.opponent+"'s move")),this.bp.play("/v5/apps/based/chess/vendor/sound/standard/GenericNotify.mp3");break;case"gameState":this.game.load(t.fen),this.board.position(this.game.fen()),this.updateStatus();break;case"move":const s=this.game.move(t.move);s&&(s.captured?this.bp.play("/v5/apps/based/chess/vendor/sound/standard/Capture.mp3"):this.game.in_check()?this.bp.play("/v5/apps/based/chess/vendor/sound/standard/Check.mp3"):this.bp.play("/v5/apps/based/chess/vendor/sound/standard/Move.mp3"),this.board.position(this.game.fen()),this.updateStatus());break;case"gameReset":this.game.reset(),this.board.start(),this.gameConnected=!0,this.setStatus("Game started! "+(this.playerColor===this.game.turn()?"Your move":"Opponent's move")),$("#rematch-button",this.win.content).hide(),this.bp.play("/v5/apps/based/chess/vendor/sound/standard/GenericNotify.mp3");break;case"gameOver":this.setStatus("Game Over: "+t.result),t.result.includes("checkmate")?this.bp.play("/v5/apps/based/chess/vendor/sound/standard/Victory.mp3"):t.result.includes("draw")?this.bp.play("/v5/apps/based/chess/vendor/sound/standard/Draw.mp3"):t.result.includes("resigned")&&this.bp.play("/v5/apps/based/chess/vendor/sound/standard/Victory.mp3"),"multiplayer"===this.mode&&($("#rematch-button",this.win.content).show(),$("#rematch-button",this.win.content).on("click",(()=>{this.ws.send(JSON.stringify({type:"rematch"})),this.setStatus(`Rematch requested. Waiting for ${this.opponent}...`)})));break;case"error":this.setStatus("Error: "+t.message),this.bp.play("/v5/apps/based/chess/vendor/sound/standard/Error.mp3");break;case"disconnect":this.gameConnected=!1,this.setStatus(this.opponent+" has disconnected..."),this.bp.play("/v5/apps/based/chess/vendor/sound/standard/Error.mp3");break;default:console.warn("Unknown socket message:",t)}}onDragStart(s,t){if(this.game.game_over())return!1;if("multiplayer"===this.mode){if(this.playerColor&&t[0]!==this.playerColor)return!1;if(this.game.turn()!==this.playerColor)return!1}else if("stockfish"===this.mode&&"w"!==this.game.turn())return!1;return!0}onDrop(s,t){let e;try{if(e=this.game.move({from:s,to:t,promotion:"q"}),!e)return"snapback";e.captured?this.bp.play("/v5/apps/based/chess/vendor/sound/standard/Capture.mp3"):this.game.in_check()?this.bp.play("/v5/apps/based/chess/vendor/sound/standard/Check.mp3"):this.bp.play("/v5/apps/based/chess/vendor/sound/standard/Move.mp3")}catch(s){return"snapback"}"multiplayer"===this.mode&&this.ws?.readyState===WebSocket.OPEN?this.ws.send(JSON.stringify({type:"move",gameId:document.getElementById("game-input").value,move:{from:s,to:t,promotion:"q"}})):"stockfish"===this.mode&&setTimeout((()=>{this.stockfish.postMessage("position fen "+this.game.fen()),this.stockfish.postMessage("go depth 15")}),200),this.updateStatus()}onSnapEnd(){this.board.position(this.game.fen())}updateStatus(){let s="";s=this.game.in_checkmate()?"Checkmate! "+("w"===this.game.turn()?"Black":"White")+" wins!":this.game.in_draw()?"Game Over: Draw!":"stockfish"!==this.mode?this.gameConnected?("w"===this.game.turn()?"White":"Black")+" to move":`Waiting for ${this.opponent} to connect...`:("w"===this.game.turn()?"White":"Black")+" to move",this.setStatus(s)}setStatus(s){$(".chess-app-status",this.win.content).text(s)}resetUI(){$(".chess-app-mode-selection",this.win.content).show(),$(".chess-app-join-ui",this.win.content).hide(),$(".chess-app-game-ui",this.win.content).hide(),$("#opponent-name",this.win.content).text("Opponent: "),$("#rematch-button",this.win.content).hide(),this.setStatus("Welcome to BuddyPond Chess!"),this.board&&(this.board.clear(),this.board.start()),this.game=new Chess,this.playerColor=null,this.stockfish&&(this.stockfish.terminate(),this.stockfish=null),this.ws&&(this.ws.close(),this.ws=null)}cleanup(){this.ws&&this.ws.close(),this.stockfish&&(this.stockfish.terminate(),this.stockfish=null)}}export{s as default};
//# sourceMappingURL=chess.js.map
