{"version":3,"file":"screen-recorder.js","sources":["../../../apps/based/screen-recorder/screen-recorder.js"],"sourcesContent":["export default class ScreenRecorder {\n    constructor(bp, options = {}) {\n        this.bp = bp;\n        this.options = options;\n        this.recorder = null;\n        this.recordedChunks = [];\n        this.stream = null;\n        this.videoBlob = null;\n        this.videoURL = null;\n        this.timerInterval = null;\n        this.secondsElapsed = 0;\n    }\n\n    async init() {\n        this.html = await this.bp.load('/v5/apps/based/screen-recorder/screen-recorder.html');\n        await this.bp.load('/v5/apps/based/screen-recorder/screen-recorder.css');\n        return 'loaded ScreenRecorder';\n    }\n\n    async open() {\n        this.win = this.bp.apps.ui.windowManager.createWindow({\n            id: 'screen-recorder',\n            title: 'Screen Recorder',\n            icon: 'desktop/assets/images/icons/icon_console_64.png',\n            x: 100,\n            y: 75,\n            width: 600,\n            height: 550,\n            minWidth: 400,\n            minHeight: 300,\n            parent: $('#desktop')[0],\n            content: this.html,\n            resizable: true,\n            minimizable: true,\n            maximizable: true,\n            closable: true,\n            focusable: true,\n            maximized: false,\n            minimized: false,\n            onClose: () => this.cleanup()\n        });\n\n        this.bindUI();\n\n        this.startPreview();\n        return this.win;\n    }\n\n    bindUI() {\n        // use this jQuery pattern $('#screen-recorder-start', this.win.content) to bind events\n        $('#screen-recorder-start', this.win.content).on('click', () => this.startRecording());\n        // $('#screen-recorder-preview', this.win.content).on('click', () => this.startPreview());\n        // $('#screen-recorder-preview-stop', this.win.content).on('click', () => this.stopPreview());\n        $('#screen-recorder-stop', this.win.content).on('click', () => this.stopRecording());\n        $('#screen-recorder-download', this.win.content).on('click', () => this.downloadRecording());\n        $('#screen-recorder-screenshot', this.win.content).on('click', () => this.takeScreenshot());\n    }\n\n    async startPreview() {\n        try {\n            if (!this.stream) {\n                this.stream = await navigator.mediaDevices.getDisplayMedia({ video: true, audio: true });\n\n                const liveVideo = document.getElementById('screen-recorder-live-video');\n                liveVideo.srcObject = this.stream;\n                liveVideo.play();\n\n            }\n        } catch (err) {\n            console.error('Error starting screen preview:', err);\n        }\n    }\n\n    stopPreview() {\n        const liveVideo = document.getElementById('screen-recorder-live-video');\n        liveVideo.pause();\n        liveVideo.srcObject = null;\n\n        if (this.stream) {\n            this.stream.getTracks().forEach(track => track.stop());\n            this.stream = null;\n        }\n\n    }\n\n    startRecording() {\n        if (!this.stream) {\n            console.warn('Stream not initialized. Please start preview first.');\n            return;\n        }\n\n        this.recordedChunks = [];\n        this.videoBlob = null;\n        this.videoURL = null;\n\n        this.recorder = new MediaRecorder(this.stream);\n        this.recorder.ondataavailable = (e) => {\n            if (e.data.size > 0) this.recordedChunks.push(e.data);\n        };\n\n        this.recorder.onstop = () => {\n            this.generatePreview();\n            this.stopTimer();\n        };\n\n        this.recorder.start();\n        this.startTimer();\n        this.toggleRecordingUI(true);\n\n        console.log('Recording started');\n\n        $('#screen-recorder-start', this.win.content).hide();\n        $('#screen-recorder-stop', this.win.content).show();\n        $('#screen-recorder-output', this.win.content).hide();\n\n    }\n\n    stopRecording() {\n        if (this.recorder && this.recorder.state !== 'inactive') {\n            this.recorder.stop();\n            console.log('Recording stopped');\n            $('#screen-recorder-stop', this.win.content).hide();\n            $('#screen-recorder-start', this.win.content).show();\n            $('#screen-recorder-output', this.win.content).show();\n        }\n    }\n\n    generatePreview() {\n        this.videoBlob = new Blob(this.recordedChunks, { type: 'video/webm' });\n        this.videoURL = URL.createObjectURL(this.videoBlob);\n\n        const container = document.getElementById('screen-recorder-output-video');\n        container.innerHTML = '';\n\n        const video = document.createElement('video');\n        video.src = this.videoURL;\n        video.controls = true;\n        video.style.width = '100%';\n        container.appendChild(video);\n    }\n\n    downloadRecording() {\n        if (!this.videoBlob) return;\n\n        const a = document.createElement('a');\n        a.href = this.videoURL;\n        a.download = `buddypond-screen-${Date.now()}.webm`;\n        document.body.appendChild(a);\n        a.click();\n        document.body.removeChild(a);\n    }\n\n    async takeScreenshot() {\n        try {\n            // Prompt user for screen capture if stream doesn't exist\n            if (!this.stream) {\n                this.stream = await navigator.mediaDevices.getDisplayMedia({ video: true });\n            }\n\n            const videoTrack = this.stream.getVideoTracks()[0];\n            const imageCapture = new ImageCapture(videoTrack);\n\n            const bitmap = await imageCapture.grabFrame();\n            const canvas = document.createElement('canvas');\n            canvas.width = bitmap.width;\n            canvas.height = bitmap.height;\n            canvas.getContext('2d').drawImage(bitmap, 0, 0);\n\n            canvas.toBlob(blob => {\n                const url = URL.createObjectURL(blob);\n                const img = document.createElement('img');\n                img.src = url;\n                img.alt = 'Screenshot';\n                img.className = 'screen-recorder-screenshot';\n\n                const container = document.getElementById('screen-recorder-preview-screenshots');\n                container.appendChild(img);\n            }, 'image/png');\n        } catch (err) {\n            console.error('Screenshot error:', err);\n        }\n    }\n\n    startTimer() {\n        const indicator = $('#screen-recorder-indicator', this.win.content);\n        const timer = $('#screen-recorder-timer', this.win.content);\n        this.secondsElapsed = 0;\n\n        this.timerInterval = setInterval(() => {\n            this.secondsElapsed++;\n            const min = String(Math.floor(this.secondsElapsed / 60)).padStart(2, '0');\n            const sec = String(this.secondsElapsed % 60).padStart(2, '0');\n            timer.text(`${min}:${sec}`);\n        }, 1000);\n\n        indicator.addClass('recording');\n    }\n\n    stopTimer() {\n        clearInterval(this.timerInterval);\n        $('#screen-recorder-indicator', this.win.content).removeClass('recording');\n        $('#screen-recorder-timer', this.win.content).text('00:00');\n    }\n\n    toggleRecordingUI(isRecording) {\n        // hide screen-recorder-live-preview-video\n        $('#screen-recorder-live-preview-video', this.win.content).toggle(isRecording);\n        // show screen-recorder-output\n        $('#screen-recorder-output', this.win.content).toggle(!isRecording);\n    }\n\n    cleanup() {\n        this.stopTimer();\n        if (this.stream) {\n            this.stream.getTracks().forEach(track => track.stop());\n        }\n        this.stream = null;\n        this.recorder = null;\n        this.recordedChunks = [];\n        this.videoBlob = null;\n        this.videoURL = null;\n        this.win = null;\n    }\n}\n"],"names":["ScreenRecorder","constructor","bp","options","this","recorder","recordedChunks","stream","videoBlob","videoURL","timerInterval","secondsElapsed","init","html","load","open","win","apps","ui","windowManager","createWindow","id","title","icon","x","y","width","height","minWidth","minHeight","parent","$","content","resizable","minimizable","maximizable","closable","focusable","maximized","minimized","onClose","cleanup","bindUI","startPreview","on","startRecording","stopRecording","downloadRecording","takeScreenshot","navigator","mediaDevices","getDisplayMedia","video","audio","liveVideo","document","getElementById","srcObject","play","err","console","error","stopPreview","pause","getTracks","forEach","track","stop","MediaRecorder","ondataavailable","e","data","size","push","onstop","generatePreview","stopTimer","start","startTimer","toggleRecordingUI","log","hide","show","warn","state","Blob","type","URL","createObjectURL","container","innerHTML","createElement","src","controls","style","appendChild","a","href","download","Date","now","body","click","removeChild","videoTrack","getVideoTracks","imageCapture","ImageCapture","bitmap","grabFrame","canvas","getContext","drawImage","toBlob","blob","url","img","alt","className","indicator","timer","setInterval","min","String","Math","floor","padStart","sec","text","addClass","clearInterval","removeClass","isRecording","toggle"],"mappings":"AAAe,MAAMA,EACjB,WAAAC,CAAYC,EAAIC,EAAU,IACtBC,KAAKF,GAAKA,EACVE,KAAKD,QAAUA,EACfC,KAAKC,SAAW,KAChBD,KAAKE,eAAiB,GACtBF,KAAKG,OAAS,KACdH,KAAKI,UAAY,KACjBJ,KAAKK,SAAW,KAChBL,KAAKM,cAAgB,KACrBN,KAAKO,eAAiB,CAC9B,CAEI,UAAMC,GAGF,OAFAR,KAAKS,WAAaT,KAAKF,GAAGY,KAAK,6DACzBV,KAAKF,GAAGY,KAAK,sDACZ,uBACf,CAEI,UAAMC,GA0BF,OAzBAX,KAAKY,IAAMZ,KAAKF,GAAGe,KAAKC,GAAGC,cAAcC,aAAa,CAClDC,GAAI,kBACJC,MAAO,kBACPC,KAAM,kDACNC,EAAG,IACHC,EAAG,GACHC,MAAO,IACPC,OAAQ,IACRC,SAAU,IACVC,UAAW,IACXC,OAAQC,EAAE,YAAY,GACtBC,QAAS5B,KAAKS,KACdoB,WAAW,EACXC,aAAa,EACbC,aAAa,EACbC,UAAU,EACVC,WAAW,EACXC,WAAW,EACXC,WAAW,EACXC,QAAS,IAAMpC,KAAKqC,YAGxBrC,KAAKsC,SAELtC,KAAKuC,eACEvC,KAAKY,GACpB,CAEI,MAAA0B,GAEIX,EAAE,yBAA0B3B,KAAKY,IAAIgB,SAASY,GAAG,SAAS,IAAMxC,KAAKyC,mBAGrEd,EAAE,wBAAyB3B,KAAKY,IAAIgB,SAASY,GAAG,SAAS,IAAMxC,KAAK0C,kBACpEf,EAAE,4BAA6B3B,KAAKY,IAAIgB,SAASY,GAAG,SAAS,IAAMxC,KAAK2C,sBACxEhB,EAAE,8BAA+B3B,KAAKY,IAAIgB,SAASY,GAAG,SAAS,IAAMxC,KAAK4C,kBAClF,CAEI,kBAAML,GACF,IACI,IAAKvC,KAAKG,OAAQ,CACdH,KAAKG,aAAe0C,UAAUC,aAAaC,gBAAgB,CAAEC,OAAO,EAAMC,OAAO,IAEjF,MAAMC,EAAYC,SAASC,eAAe,8BAC1CF,EAAUG,UAAYrD,KAAKG,OAC3B+C,EAAUI,MAE1B,CACS,CAAC,MAAOC,GACLC,QAAQC,MAAM,iCAAkCF,EAC5D,CACA,CAEI,WAAAG,GACI,MAAMR,EAAYC,SAASC,eAAe,8BAC1CF,EAAUS,QACVT,EAAUG,UAAY,KAElBrD,KAAKG,SACLH,KAAKG,OAAOyD,YAAYC,SAAQC,GAASA,EAAMC,SAC/C/D,KAAKG,OAAS,KAG1B,CAEI,cAAAsC,GACSzC,KAAKG,QAKVH,KAAKE,eAAiB,GACtBF,KAAKI,UAAY,KACjBJ,KAAKK,SAAW,KAEhBL,KAAKC,SAAW,IAAI+D,cAAchE,KAAKG,QACvCH,KAAKC,SAASgE,gBAAmBC,IACzBA,EAAEC,KAAKC,KAAO,GAAGpE,KAAKE,eAAemE,KAAKH,EAAEC,OAGpDnE,KAAKC,SAASqE,OAAS,KACnBtE,KAAKuE,kBACLvE,KAAKwE,aAGTxE,KAAKC,SAASwE,QACdzE,KAAK0E,aACL1E,KAAK2E,mBAAkB,GAEvBnB,QAAQoB,IAAI,qBAEZjD,EAAE,yBAA0B3B,KAAKY,IAAIgB,SAASiD,OAC9ClD,EAAE,wBAAyB3B,KAAKY,IAAIgB,SAASkD,OAC7CnD,EAAE,0BAA2B3B,KAAKY,IAAIgB,SAASiD,QA1B3CrB,QAAQuB,KAAK,sDA4BzB,CAEI,aAAArC,GACQ1C,KAAKC,UAAoC,aAAxBD,KAAKC,SAAS+E,QAC/BhF,KAAKC,SAAS8D,OACdP,QAAQoB,IAAI,qBACZjD,EAAE,wBAAyB3B,KAAKY,IAAIgB,SAASiD,OAC7ClD,EAAE,yBAA0B3B,KAAKY,IAAIgB,SAASkD,OAC9CnD,EAAE,0BAA2B3B,KAAKY,IAAIgB,SAASkD,OAE3D,CAEI,eAAAP,GACIvE,KAAKI,UAAY,IAAI6E,KAAKjF,KAAKE,eAAgB,CAAEgF,KAAM,eACvDlF,KAAKK,SAAW8E,IAAIC,gBAAgBpF,KAAKI,WAEzC,MAAMiF,EAAYlC,SAASC,eAAe,gCAC1CiC,EAAUC,UAAY,GAEtB,MAAMtC,EAAQG,SAASoC,cAAc,SACrCvC,EAAMwC,IAAMxF,KAAKK,SACjB2C,EAAMyC,UAAW,EACjBzC,EAAM0C,MAAMpE,MAAQ,OACpB+D,EAAUM,YAAY3C,EAC9B,CAEI,iBAAAL,GACI,IAAK3C,KAAKI,UAAW,OAErB,MAAMwF,EAAIzC,SAASoC,cAAc,KACjCK,EAAEC,KAAO7F,KAAKK,SACduF,EAAEE,SAAW,oBAAoBC,KAAKC,aACtC7C,SAAS8C,KAAKN,YAAYC,GAC1BA,EAAEM,QACF/C,SAAS8C,KAAKE,YAAYP,EAClC,CAEI,oBAAMhD,GACF,IAES5C,KAAKG,SACNH,KAAKG,aAAe0C,UAAUC,aAAaC,gBAAgB,CAAEC,OAAO,KAGxE,MAAMoD,EAAapG,KAAKG,OAAOkG,iBAAiB,GAC1CC,EAAe,IAAIC,aAAaH,GAEhCI,QAAeF,EAAaG,YAC5BC,EAASvD,SAASoC,cAAc,UACtCmB,EAAOpF,MAAQkF,EAAOlF,MACtBoF,EAAOnF,OAASiF,EAAOjF,OACvBmF,EAAOC,WAAW,MAAMC,UAAUJ,EAAQ,EAAG,GAE7CE,EAAOG,QAAOC,IACV,MAAMC,EAAM5B,IAAIC,gBAAgB0B,GAC1BE,EAAM7D,SAASoC,cAAc,OACnCyB,EAAIxB,IAAMuB,EACVC,EAAIC,IAAM,aACVD,EAAIE,UAAY,6BAEE/D,SAASC,eAAe,uCAChCuC,YAAYqB,KACvB,YACN,CAAC,MAAOzD,GACLC,QAAQC,MAAM,oBAAqBF,EAC/C,CACA,CAEI,UAAAmB,GACI,MAAMyC,EAAYxF,EAAE,6BAA8B3B,KAAKY,IAAIgB,SACrDwF,EAAQzF,EAAE,yBAA0B3B,KAAKY,IAAIgB,SACnD5B,KAAKO,eAAiB,EAEtBP,KAAKM,cAAgB+G,aAAY,KAC7BrH,KAAKO,iBACL,MAAM+G,EAAMC,OAAOC,KAAKC,MAAMzH,KAAKO,eAAiB,KAAKmH,SAAS,EAAG,KAC/DC,EAAMJ,OAAOvH,KAAKO,eAAiB,IAAImH,SAAS,EAAG,KACzDN,EAAMQ,KAAK,GAAGN,KAAOK,OACtB,KAEHR,EAAUU,SAAS,YAC3B,CAEI,SAAArD,GACIsD,cAAc9H,KAAKM,eACnBqB,EAAE,6BAA8B3B,KAAKY,IAAIgB,SAASmG,YAAY,aAC9DpG,EAAE,yBAA0B3B,KAAKY,IAAIgB,SAASgG,KAAK,QAC3D,CAEI,iBAAAjD,CAAkBqD,GAEdrG,EAAE,sCAAuC3B,KAAKY,IAAIgB,SAASqG,OAAOD,GAElErG,EAAE,0BAA2B3B,KAAKY,IAAIgB,SAASqG,QAAQD,EAC/D,CAEI,OAAA3F,GACIrC,KAAKwE,YACDxE,KAAKG,QACLH,KAAKG,OAAOyD,YAAYC,SAAQC,GAASA,EAAMC,SAEnD/D,KAAKG,OAAS,KACdH,KAAKC,SAAW,KAChBD,KAAKE,eAAiB,GACtBF,KAAKI,UAAY,KACjBJ,KAAKK,SAAW,KAChBL,KAAKY,IAAM,IACnB"}