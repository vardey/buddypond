class t{constructor(t,e=0){this.audioCtx=new(window.AudioContext||window.webkitAudioContext),this.audioElement=t,this.source=this.audioCtx.createMediaElementSource(t),this.gainNode=this.audioCtx.createGain(),this.gainNode.gain.value=e,this.nodes=[this.gainNode],this._connectGraph()}_connectGraph(){let t=this.source;this.nodes.forEach((e=>{t.connect(e),t=e})),t.connect(this.audioCtx.destination)}addNode(t){this.nodes.push(t),this._connectGraph()}removeNode(t){this.nodes=this.nodes.filter((e=>e!==t)),this._connectGraph()}setVolume(t){this.gainNode.gain.value=t}getVolume(){return this.gainNode.gain.value}play(){this.audioCtx.resume(),this.audioElement.play()}pause(){this.audioElement.pause()}disconnect(){this.source.disconnect(),this.nodes.forEach((t=>t.disconnect())),this.audioCtx.close()}printGraph(){console.log("Audio Graph:"),console.log("Source -> "+this.nodes.map((t=>t.constructor.name)).join(" -> ")+" -> Destination")}}class e{static playing=new Map;constructor(t,e={}){this.bp=t,this.settings={...e}}async init(){this.bp.play=this.play.bind(this)}async play(i,{tryHard:o=0,repeat:n=!1,duration:s=999999,onEnd:a=()=>{},onError:d=()=>{}}={}){if(!1===this.bp.settings.audio_enabled)return;if(e.playing.get(i)&&!o)return;i.startsWith("http")||(i=this.bp.config.host+"/"+i),e.playing.set(i,!0);const u=new Audio(i);let c=this.bp.get("audio_volume");("number"!=typeof c||isNaN(c))&&(c=1);const h=new t(u,c);let r;this.bp.on("settings::audio_volume","update-playing-volume",(function(t){console.log("Updating playing volume to",t),h.setVolume(t)}));let l=!1;const p=()=>{clearTimeout(r),u.pause(),u.currentTime=0,u.loop=!1,l=!0,e.playing.delete(i),this.bp.off("settings::audio_volume","update-playing-volume"),h.disconnect()};u.addEventListener("ended",(()=>{n&&!l||(p(),a())})),u.addEventListener("error",(t=>{p(),d(t)}));try{n&&(u.loop=!0),await u.play(),r=setTimeout((()=>{p(),a()}),s)}catch(t){p(),d(t)}}}export{e as default};
//# sourceMappingURL=play.js.map
