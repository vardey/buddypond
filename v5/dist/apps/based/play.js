class t{static playing=new Map;constructor(t,e={}){this.bp=t,this.settings={...e}}async init(){this.bp.play=this.play.bind(this)}async play(e,{tryHard:i=0,repeat:n=!1,duration:a=999999,onEnd:s=()=>{},onError:r=()=>{}}={}){if(!1===this.bp.settings.audio_enabled)return;if(t.playing.get(e)&&!i)return;e.startsWith("http")||(e=this.bp.config.host+"/"+e),t.playing.set(e,!0);const o=new Audio(e);let p,l=!1;const d=()=>{clearTimeout(p),o.pause(),o.currentTime=0,o.loop=!1,l=!0,t.playing.delete(e)};o.addEventListener("ended",(()=>{n&&!l||(d(),s())})),o.addEventListener("error",(t=>{d(),r(t)}));try{n&&(o.loop=!0),await o.play(),p=setTimeout((()=>{d(),s()}),a)}catch(t){d(),r(t)}}}export{t as default};
//# sourceMappingURL=play.js.map
