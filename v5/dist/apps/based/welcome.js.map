{"version":3,"file":"welcome.js","sources":["../../../apps/based/welcome/welcome.js","../../../apps/based/welcome/lib/bindUIEvents.js","../../../apps/based/welcome/lib/handleAuthentication.js"],"sourcesContent":["import bindUIEvents from \"./lib/bindUIEvents.js\";\nimport handleAuthentication from \"./lib/handleAuthentication.js\";\nexport default class Welcome {\n    constructor(bp, options = {}) {\n        this.bp = bp;\n        this.options = options;\n        return this;\n    }\n\n    async init() {\n        this.html = await this.bp.load('/v5/apps/based/welcome/welcome.html');\n        await this.bp.load('/v5/apps/based/welcome/welcome.css');\n        this.affirmations = await this.bp.importModule('affirmations');\n\n        return 'loaded Welcome';\n    }\n\n    async open() {\n\n        this.win = await this.bp.window(this.window());\n        // this should be handled globally ( if possible )\n        $('.loggedIn', this.win.content).hide();\n        $('.loggedOut', this.win.content).show();\n        this.bindUIEvents();\n        // check if the user is already authenticated with qtoken\n        this.handleAuthentication();\n\n        // focus on the username input field\n        $('.welcomeForm input[name=\"username\"]', this.win.content).focus();\n\n        return this.win;\n\n    }\n\n     window() {\n        return {\n            id: 'welcome',\n            title: 'Welcome Buddy',\n            icon: 'desktop/assets/images/icons/icon_buddy-frog_64.png',\n            position: 'center',\n            parent: $('#desktop')[0],\n            width: 850,\n            height: 600,\n            content: this.html,\n            resizable: true,\n            closable: true,\n            onClose: () => {\n                this.win = null;\n            }\n        }\n    }\n}\n\nWelcome.prototype.bindUIEvents = bindUIEvents;\nWelcome.prototype.handleAuthentication = handleAuthentication;","export default function welcomeUIEvents() {\n\n  let api = this.bp.apps.client.api;\n  let affirmations = this.bp.apps.affirmations.affirmations;\n\n  // bind events\n  $('.welcomeForm').submit((e) => {\n    e.preventDefault();\n\n    // disable the login button\n    $('.loginButton').prop('disabled', true);\n    $('.loginButton').addClass('disabled');\n\n    let username = $('.welcomeForm input[name=\"username\"]').val();\n    let password = $('.welcomeForm input[name=\"password\"]').val();\n    if (!password) {\n      password = username;\n    }\n\n    api.authBuddy(username, password, async (err, result) => {\n      console.log('authBuddy', err, result);\n      if (err) {\n        if (result && result.error) {\n          $('.loginStatus').html(result.error).addClass('error');\n          if (result.error === 'Incorrect password.') {\n            $('.resetPasswordLink').show();\n          }\n        } else {\n          if (err.message === 'Failed to fetch') {\n            $('.loginStatus').text('Failed to connect to Buddy Pond');\n          } else {\n            $('.loginStatus').html(err.message || 'Failed to authenticate buddy');\n          }\n        }\n        $('.loginButton').prop('disabled', false);\n        $('.loginButton').removeClass('disabled');\n\n        $('.password').show().focus();\n        console.error('Failed to authenticate buddy:', err);\n\n        return;\n      }\n      if (result.success) {\n        this.bp.connected = true;\n        // attempt to connect for events after getting auth token\n        //console.log('connecting with valid qtokenid', api.qtokenid);\n        result.me = username;\n        await this.bp.open('buddylist');\n        // The user has logged in password or signed up successfully, emit the auth event\n        bp.emit('auth::qtoken', result);\n        this.win.close();\n        // $('.loggedIn').flexShow();\n        $('.welcomeForm .error').text('');\n\n      } else {\n        // re-enable the login button\n        $('.loginButton').prop('disabled', false);\n        $('.loginButton').removeClass('disabled');\n        if (username === password) {\n          $('.password').show();\n          $('.password').focus();\n          return;\n        }\n        $('.welcomeForm .error').text('Failed to authenticate buddy');\n        $('.password').show();\n        console.error('Failed to authenticate buddy:');\n      }\n    });\n    return false;\n  });\n\n  $('.onlineStatusSelect').change((e) => {\n    let status = $(e.target).val();\n    // console.log('status', status);\n    bp.emit('profile::status', status);\n  });\n\n  $('.forgot-password').on('click', (ev) => {\n    ev.preventDefault();\n    $('.welcomeForm').flexHide();\n    $('.forgot-password-modal').flexShow();\n    $('.welcome-tos-checkbox').flexHide();\n    $('.loginStatus').html('');\n    $('.resetPasswordLink').flexHide();\n    return false;\n  });\n\n  $('.closeForgotPassword').on('click', (ev) => {\n    $('.forgot-password-modal').flexHide();\n    $('.welcomeForm').flexShow();\n    $('.welcome-tos-checkbox').flexShow();\n    $('.resetPasswordLink').flexShow();\n  });\n\n  $('.resetPasswordButton').on('click', (ev) => {\n    ev.preventDefault();\n    let email = $('.resetPasswordEmail').val();\n    if (!email) {\n      $('.resetPasswordEmail').addClass('error');\n      return;\n    }\n    $('.resetPasswordEmail').removeClass('error');\n    $('.loginStatus').html('Sending password reset email...');\n    $('.resetPasswordForm').flexHide();\n    $('.resetPasswordMessage').flexHide();\n    api.sendPasswordResetEmail(email, (err, data) => {\n      // console.log('sendPasswordResetEmail', err, data);\n      if (err || !data.success) {\n        $('.loginStatus').html('Failed to send password reset email.');\n        console.error(err || data);\n        return;\n      }\n      $('.loginStatus').removeClass('error').addClass('success').html(data.message);\n    });\n  });\n\n  // Initially disable the login button\n  $('.loginButton').prop('disabled', true);\n  $('.loginButton').addClass('disabled');\n\n  // Toggle the login button based on the checkbox status\n  $('#welcome-tosAgree').change(function () {\n    if ($(this).is(':checked')) {\n      $('.loginButton').prop('disabled', false);\n      $('.loginButton').removeClass('disabled');\n    } else {\n      $('.loginButton').prop('disabled', true);\n      $('.loginButton').addClass('disabled');\n    }\n  });\n\n  function updatePositiveAffirmation() {\n    let key = affirmations[Math.floor(Math.random() * affirmations.length)];\n    $('.welcome-positiveAffirmation').html(key);\n  }\n\n  // update the positive affirmation on an interval\n  if (this.positiveAffirmationInterval) {\n    clearInterval(this.positiveAffirmationInterval);\n  }\n  \n  this.positiveAffirmationInterval = setInterval(function () {\n    $('.welcome-positiveAffirmation').fadeOut({\n      duration: 4444,\n      complete: function () {\n        updatePositiveAffirmation();\n        $('.welcome-positiveAffirmation').fadeIn({\n          duration: 4444,\n          complete: function () { }\n        });\n      }\n    });\n  }, 199800); // 3 minutes, 33 seconds\n\n  updatePositiveAffirmation();\n\n  $('.welcome-positiveAffirmation').on('click', function () {\n    updatePositiveAffirmation();\n  });\n\n\n}","export default function handleAuthentication() {\n        const api = this.bp.apps.client.api;\n        const localToken = localStorage.getItem('qtokenid');\n        const me = localStorage.getItem('me');\n        if (!localToken) {\n            $('#welcome').show();\n            return;\n        };\n        // console.log('localToken', localToken, me);\n        api.verifyToken(me, localToken, async (err, data) => {\n            if (err) {\n                console.error('Failed to verify token:', err);\n                $('.password').show();\n                $('.loginForm .error').text('Failed to authenticate buddy');\n                return;\n            }\n            console.log('verified token', data);\n            if (data.success) {\n                this.bp.connected = true;\n                if (!window.discordView) {\n                    await this.bp.open('buddylist', {\n                        // openDefaultPond: true\n                    });\n                } else {\n                    await this.bp.open('buddylist', {\n                        openDefaultPond: false,\n                        // showBuddyList: false\n                    });\n\n                }\n                // A pre-existing token was found and verified, emit the auth event\n                this.bp.emit('auth::qtoken', { qtokenid: localToken, me: me, hasPassword: data.user.hasPassword });\n                $('.loggedIn').flexShow();\n                $('.loggedOut').flexHide();\n                if (!data.user.hasPassword) {\n                    this.bp.open('pincode');\n                }\n                // close the welcome window\n                // Remark: May be null here, why? already closed or not initialized?\n                if (this.win && this.win.close) {\n                    this.win.close();\n                }\n            } else {\n                $('.loginForm .error').text('Failed to authenticate buddy');\n                $('.password').show();\n                console.error('Failed to authenticate buddy:');\n            }\n        });\n\n    }"],"names":["Welcome","constructor","bp","options","this","init","html","load","affirmations","importModule","open","win","window","$","content","hide","show","bindUIEvents","handleAuthentication","focus","id","title","icon","position","parent","width","height","resizable","closable","onClose","prototype","api","apps","client","updatePositiveAffirmation","key","Math","floor","random","length","submit","e","preventDefault","prop","addClass","username","val","password","authBuddy","async","err","result","console","log","error","message","text","removeClass","success","connected","me","emit","close","change","status","target","on","ev","flexHide","flexShow","email","sendPasswordResetEmail","data","is","positiveAffirmationInterval","clearInterval","setInterval","fadeOut","duration","complete","fadeIn","localToken","localStorage","getItem","verifyToken","discordView","openDefaultPond","qtokenid","hasPassword","user"],"mappings":"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"}