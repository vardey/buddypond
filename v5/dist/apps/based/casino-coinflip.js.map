{"version":3,"file":"casino-coinflip.js","sources":["../../../apps/based/casino/lib/client.js","../../../apps/based/casino-coinflip/casino-coinflip.js","../../../apps/based/casino-coinflip/lib/updateBalance.js","../../../apps/based/casino-coinflip/lib/eventBind.js","../../../apps/based/casino-coinflip/lib/renderBet.js","../../../apps/based/casino-coinflip/lib/renderBettingHistory.js"],"sourcesContent":["const client = {};\n\nclient.endpoint = buddypond.gamblorEndpoint;\n\nclient.apiRequest = async (uri, method = 'GET', data = null) => {\n\n    const options = {\n        method: method\n    };\n\n    let headers = {\n        \"Accept\": \"application/json\",\n        \"Content-Type\": \"application/json; charset=utf-8\",\n        \"X-Me\": buddypond.me\n      };\n      if (buddypond.qtokenid) {\n        headers[\"Authorization\"] = `Bearer ${buddypond.qtokenid}`; // âœ… Use Authorization header\n      }\n\n\n    if (data) {\n        options.body = JSON.stringify(data);\n    }\n\n    options.headers = headers;\n\n    let url = `${client.endpoint}${uri}`;\n    console.log('admin client making api request', url, options);\n \n\n    try {\n        const response = await fetch(url, options);\n        if (!response.ok) {\n            // throw new Error(`HTTP error! status: ${response.status}`);\n        }\n        return await response.json();\n    } catch (error) {\n        console.error('Error in API request:', error);\n        throw error;\n    }\n\n};\n\nexport default client;","import gamblorClient from '../casino/lib/client.js';\nimport eventBind from './lib/eventBind.js';\nimport renderBettingHistory from './lib/renderBettingHistory.js';\nimport renderBet from './lib/renderBet.js';\nimport updateBalance from './lib/updateBalance.js';\n\nexport default class CasinoCoinFlip {\n  constructor(bp, options = {}) {\n    this.bp = bp;\n    this.options = options;\n    return this;\n  }\n\n  async init() {\n    this.html = await this.bp.load('/v5/apps/based/casino-coinflip/casino-coinflip.html');\n    await this.bp.load('/v5/apps/based/casino-coinflip/casino-coinflip.css');\n\n    return 'loaded casino-coinflip';\n  }\n\n  async open(config = {}) {\n    // console.log('Opening casino coinflip Buddy with config:', config);\n\n    if (!this.win) {\n      this.win = await this.bp.window(this.window());\n      // this should be handled globally ( if possible )\n      this.eventBind(config);\n    }\n\n    this.renderBettingHistory();\n    if (config.context && config.context !== 'default') {\n      let bet = await this.client.apiRequest(`/bet/${config.context}`, 'GET');\n      console.log('Loaded bet for context:', bet);\n      if (bet) {\n        this.renderBet(bet);\n      }\n    } else {\n      $('.coinflip-form', this.win.content).show();\n      $('.coinflip-loaded-bet', this.win.content).hide();\n    }\n\n    $('.coinflip-max-participants', this.win.content).hide();\n    this.updateBalance();\n\n    if (this.bp.qtokenid) {\n      $('.loggedIn', this.win.content).show();\n      $('.loggedOut', this.win.content).hide();\n    } else {\n      $('.loggedIn', this.win.content).hide();\n      $('.loggedOut', this.win.content).show();\n    }\n\n    return this.win;\n\n  }\n\n  window() {\n    return {\n      id: 'casino-coinflip',\n      title: 'Coin Flip',\n      icon: 'desktop/assets/images/icons/icon_coinflip_64.png',\n      position: 'center',\n      parent: $('#desktop')[0],\n      width: 850,\n      height: 520,\n      content: this.html,\n      resizable: true,\n      closable: true,\n      onClose: () => {\n        this.win = null;\n      }\n    }\n  }\n}\n\nCasinoCoinFlip.prototype.updateBalance = updateBalance;\nCasinoCoinFlip.prototype.client = gamblorClient;\nCasinoCoinFlip.prototype.eventBind = eventBind;\nCasinoCoinFlip.prototype.renderBet = renderBet;\nCasinoCoinFlip.prototype.renderBettingHistory = renderBettingHistory;","export default async function updateBalance () {\n\n  let coinBalance = $('.coin-balance', this.win.content);\n  let currentCoin = 'GBP'; // default currency for bets\n\n  await this.bp.load('portfolio'); // will get cached / be cached\n\n  // get the portfolio's assets\n  const assets = await this.bp.apps.portfolio.resource.search(this.bp.me, {\n    owner: this.bp.me\n  });\n  console.log('assetsassetsassets', currentCoin, assets.results);\n  let coinBalances = assets.results;\n  // update the $('.coin-names') select element\n  // first clear all options\n  coinBalances.forEach(asset => {\n    console.log(`asset.symbol: ${asset.symbol} === currentCoin: ${currentCoin}`, asset);\n    $('#coin-send-name', this.win.content).append(`<option value=\"${asset.symbol}\">${asset.symbol}</option>`);\n    if (asset.symbol === currentCoin) {\n      let formattedAsset = asset.amount;\n      // format amount as number with commas\n      formattedAsset = formattedAsset.toLocaleString('en-US', {\n          minimumFractionDigits: 0,\n          maximumFractionDigits: 0\n      });\n\n      coinBalance.text(formattedAsset + ' ' + asset.symbol);\n      this.bp.emit('buddylist-websocket::reward', {\n        success: true,\n        message: {\n          newBalance: asset.amount,\n          symbol: asset.symbol\n        }\n      })\n\n    }\n  });\n\n}","export default function eventBind(config) {\n\n  // Toggle max participants input based on checkbox\n  $('#coinflip-group-bet', this.win.content).on('change', (ev) => {\n    if ($(ev.target).is(':checked')) {\n      $('.coinflip-max-participants', this.win.content).show();\n    } else {\n      $('.coinflip-max-participants', this.win.content).hide();\n    }\n  });\n\n  $('.coinflip-form', this.win.content).on('submit', async (e) => {\n    e.preventDefault();\n\n    const $clickedButton = $(e.originalEvent.submitter); // The button clicked\n    const betSide = $clickedButton.data('side'); // \"heads\" or \"tails\"\n\n    const betAmount = parseFloat($('#coinflip-amount', this.win.content).val());\n    const isGroupBet = $('#coinflip-group-bet', this.win.content).is(':checked');\n    const max_participants = isGroupBet\n      ? parseInt($('#coinflip-max-participants', this.win.content).val(), 10) || 2\n      : 1;\n\n    let betCurrency = 'GBP'; // Default currency\n    console.log('betAmount', betAmount, 'betSide', betSide, 'betCurrency', betCurrency);\n\n    if (isNaN(betAmount) || betAmount <= 0) {\n      alert('Please enter a valid bet amount.');\n      return;\n    }\n\n    if (!betSide) {\n      alert('Please select a side to bet on.');\n      return;\n    }\n    let bet;\n\n    $('.coinflip-error', this.win.content).hide().text('');\n\n    if (!this.bp.qtokenid) {\n      $('.coinflip-error', this.win.content).text('You must be logged in to place a bet.').show();\n      return;\n    }\n\n    try {\n\n      bet = await this.client.apiRequest('/bet', 'POST', {\n        type: 'coinflip',\n        owner: this.bp.me,\n        bet: betSide,\n        symbol: betCurrency,\n        amount: betAmount,\n        max_participants: max_participants,\n        seed: `seed-${this.bp.me}-1234` // TODO: allow for custom seed input\n      });\n      if (bet.error) {\n        console.log('Error creating bet:', bet.error);\n        $('.coinflip-error', this.win.content).text(bet.error || 'An error occurred while creating the bet.').show();\n      }\n\n    } catch (error) {\n      console.log('Error creating bet:', error);\n      $('.coinflip-error', this.win.content).text(error.message || 'An error occurred while creating the bet.').show();\n      return;\n\n    }\n\n    console.log('created bet', bet);\n\n    $('.coinflip-result-data', this.win.content).text(JSON.stringify(bet, null, 2));\n    $('.coinflip-result', this.win.content).show();\n    $('.coinflip-link', this.win.content).attr(\n      'href',\n      `https://${window.location.host}/app/coinflip?context=${bet.betId}`\n    );\n\n    this.updateBalance();\n    this.renderBettingHistory();\n  });\n\n\n  $('.prev-page', this.win.content).on('click', () => {\n    const currentPage = $('.pagination-controls').data('current-page');\n    if (currentPage > 1) this.renderBettingHistory(currentPage - 1);\n  });\n\n  $('.next-page', this.win.content).on('click', () => {\n    const currentPage = $('.pagination-controls').data('current-page');\n    this.renderBettingHistory(currentPage + 1);\n  });\n\n\n}","export default function renderBet(bet) {\n\n  $('.coinflip-form', this.win.content).hide();\n  $('.coinflip-loaded-bet', this.win.content).show();\n\n  $('.coinflip-status', this.win.content).text(bet.bet.status);\n  $('.coinflip-owner', this.win.content).text(bet.bet.owner);\n  $('.coinflip-amount-display', this.win.content).text(`${bet.bet.amount} ${bet.bet.symbol}`);\n  $('.coinflip-max-display', this.win.content).text(bet.bet.max_participants || '2');\n  // coinflip-result-date\n  let betDate = new Date(bet.bet.ctime).toLocaleString();\n  $('.coinflip-created-at', this.win.content).text(`${betDate}`);\n  // coinflip-your-side\n  let userParticipant = bet.participants.find(p => p.buddy === this.bp.me);\n  if (userParticipant) {\n    $('.coinflip-your-side', this.win.content).text(`${userParticipant.bet}`);\n  } else {\n    $('.coinflip-your-side', this.win.content).text(`You are not a participant in this bet.`);\n  }\n  // coinflip-winning-side\n  console.log('bbbbbb', bet.bet.result)\n  let betJSON = {};\n  if (bet.bet.result) {\n    try {\n      betJSON = JSON.parse(bet.bet.result);\n    } catch (e) {\n      console.error('Error parsing bet result JSON:', e);\n    }\n  }\n\n  // prove result\n  $('.coinflip-prove', this.win.content).off('click').on('click', () => {\n    //alert('Opening Ramblor to prove fairness of the bet result.');\n    this.bp.open('ramblor', { roll: betJSON.ramblorResult });\n  });\n\n  console.log('betJSON', betJSON);\n  if (bet.bet.status === 'complete') {\n    $('.coinflip-winning-side', this.win.content).text(`${betJSON.result}`);\n    $('.coinflip-result-date', this.win.content).text(`Resolved at: ${new Date(betJSON.result.resolved_at).toLocaleString()}`);\n    if (bet.result.winners && Array.isArray(bet.result.winners)) {\n      let winner = bet.result.winners.find(w => w.buddy === this.bp.me);\n      if (winner) {\n        $('.coinflip-won-amount', this.win.content).text(`You won ${winner.amount_won} ${bet.bet.symbol}!`);\n      }\n    }\n\n\n\n  } else {\n    $('.coinflip-winning-side', this.win.content).text(`Winning side: N/A`);\n    $('.coinflip-result-date', this.win.content).text(`Resolved at: N/A`);\n    $('.coinflip-won-amount', this.win.content).text(`You have not won anything yet.`);\n  }\n  const list = $('.coinflip-participants-list', this.win.content).empty();\n  bet.participants.forEach(p => {\n    list.append(`<li>${p.buddy} - ${p.bet}</li>`);\n  });\n\n  if (bet.bet.status === 'open') {\n    $('.coinflip-join-button', this.win.content).show();\n    $('.coinflip-cancel-button', this.win.content).show();\n  } else {\n    $('.coinflip-join-button', this.win.content).hide();\n    $('.coinflip-cancel-button', this.win.content).hide();\n  }\n\n  // bind button actions\n  $('.coinflip-join-button', this.win.content).off('click').on('click', async () => {\n    let betSide = prompt('Choose your side (heads/tails):');\n    if (betSide !== 'heads' && betSide !== 'tails') {\n      alert('Invalid side selected.');\n      return;\n    }\n\n    let response = await this.client.apiRequest(`/join-bet/${bet.bet.id}`, 'POST', {\n      betId: bet.bet.id,\n      buddy: this.bp.me,\n      amount: bet.bet.amount,\n      seed: 'random-join-seed-' + Date.now(),\n      bet: betSide\n    });\n\n    alert(response.success ? 'Joined bet!' : 'Failed to join.');\n    this.win.close(); // Refresh UI\n  });\n\n  $('.coinflip-cancel-button', this.win.content).off('click').on('click', async () => {\n    let confirmCancel = confirm('Are you sure you want to cancel this bet?');\n    if (!confirmCancel) return;\n\n    let response = await this.client.apiRequest(`/cancel-bet/${bet.bet.id}`, 'POST');\n    alert(response.success ? 'Bet cancelled.' : 'Failed to cancel.');\n    this.win.close(); // Refresh UI\n  });\n\n\n\n}","export default async function renderingBettingHistory(page = 1) {\n\n  // get previous bets that this user has created\n  let result = await this.client.apiRequest(`/bets?owner=${this.bp.me}&type=coinflip&page=${page}&limit=8`, 'GET');\n  console.log('api response for previous bets:', result);\n  let previousBets = result.results || [];\n  let pagination = result.pagination || { page: 1, totalPages: 1 };\n  console.log('Loaded previous bets:', previousBets);\n\n  const previousBetsList = $('.coinflip-previous-bets-list', this.win.content).empty();\n\n  // Add header row\n  /*\n  previousBetsList.append(`\n    <li class=\"bet-header\">\n      <span class=\"col-outcome\">Outcome</span>\n      <span class=\"col-result\">Result</span>\n      <span class=\"col-amount\">Amount</span>\n      <span class=\"col-date\">Date</span>\n    </li>\n  `);\n  */\n\n  if (previousBets.length === 0) {\n    previousBetsList.append('<span class=\"no-bets\">No previous bets found.</span>');\n  } else {\n    previousBets.forEach(bet => {\n      const betLink = `https://${window.location.host}/app/coinflip?context=${bet.id}`;\n\n      let resultJSON = {};\n      if (bet.result) {\n        try {\n          resultJSON = JSON.parse(bet.result);\n        } catch (e) {\n          console.error('Error parsing bet result JSON:', e);\n        }\n      }\n\n      let buddyWon = false;\n      if (Array.isArray(resultJSON.winners) && resultJSON.winners.some(winner => winner.buddy === this.bp.me)) {\n        buddyWon = true;\n      }\n\n      let outcomeText = resultJSON.result || \"-\";\n      let resultText = \"\";\n      if (bet.status === \"complete\") {\n        if (buddyWon) {\n          resultText = `<span style=\"color:#4CAF50;font-weight:bold;\">You Won!</span>`;\n        } else {\n          resultText = `<span style=\"color:#F44336;font-weight:bold;\">You Lost</span>`;\n        }\n      } else {\n        resultText = `<span style=\"color:#999;\">Pending</span>`;\n      }\n\n      let amountText = `${bet.amount} ${bet.symbol}`;\n      let betDate = new Date(bet.ctime).toLocaleString();\n\n      previousBetsList.append(`\n        <li class=\"bet-row\">\n          <span class=\"col-outcome\">${outcomeText}</span>\n          <span class=\"col-result\">${resultText}</span>\n          <span class=\"col-amount\">${amountText}</span>\n          <span class=\"col-date\"><a href=\"${betLink}\" target=\"#\" class=\"open-app\" data-app=\"casino-coinflip\" data-context=\"${bet.id}\">${betDate}</a></span>\n        </li>\n      `);\n    });\n\n    console.log('pagination', pagination);\n    $('.page-info').text(`Page ${pagination.page} of ${pagination.totalPages}`);\n    $('.prev-page').prop('disabled', pagination.page <= 1);\n    $('.next-page').prop('disabled', pagination.page >= pagination.totalPages);\n    $('.pagination-controls').data('current-page', pagination.page);\n  }\n}\n"],"names":["client","endpoint","buddypond","gamblorEndpoint","apiRequest","async","uri","method","data","options","headers","Accept","me","qtokenid","body","JSON","stringify","url","console","log","response","fetch","ok","json","error","CasinoCoinFlip","constructor","bp","this","init","html","load","open","config","win","window","eventBind","renderBettingHistory","context","bet","renderBet","$","content","show","hide","updateBalance","id","title","icon","position","parent","width","height","resizable","closable","onClose","prototype","coinBalance","currentCoin","assets","apps","portfolio","resource","search","owner","results","forEach","asset","symbol","append","formattedAsset","amount","toLocaleString","minimumFractionDigits","maximumFractionDigits","text","emit","success","message","newBalance","gamblorClient","on","ev","target","is","e","preventDefault","betSide","originalEvent","submitter","betAmount","parseFloat","val","max_participants","parseInt","isNaN","alert","type","seed","attr","location","host","betId","currentPage","status","betDate","Date","ctime","userParticipant","participants","find","p","buddy","result","betJSON","parse","off","roll","ramblorResult","resolved_at","winners","Array","isArray","winner","w","amount_won","list","empty","prompt","now","close","confirm","page","previousBets","pagination","totalPages","previousBetsList","length","betLink","resultJSON","buddyWon","some","outcomeText","resultText","amountText","prop"],"mappings":"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"}