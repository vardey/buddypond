{"version":3,"file":"admin.js","sources":["../../../apps/based/admin/lib/commands/recentLogins.js","../../../apps/based/admin/lib/commands/userByIP.js","../../../apps/based/admin/lib/commands/buddyProfile.js","../../../apps/based/admin/lib/commands/banList.js","../../../apps/based/admin/lib/commands/banBuddy.js","../../../apps/based/admin/lib/commands/unbanBuddy.js","../../../apps/based/admin/lib/commands/destroyBuddy.js","../../../apps/based/admin/lib/commands/resetPassword.js","../../../apps/based/admin/lib/commands/addAdmin.js","../../../apps/based/admin/lib/commands/listAdmins.js","../../../apps/based/admin/lib/commands/listErrorLogs.js","../../../apps/based/pond/client.js","../../../apps/based/admin/lib/commands/listPonds.js","../../../apps/based/admin/lib/commands/firewall/listRules.js","../../../apps/based/admin/lib/commands/firewall/addRule.js","../../../apps/based/admin/lib/symbolicate.js","../../../apps/based/admin/lib/client.js","../../../apps/based/admin/admin.js","../../../apps/based/admin/lib/render.js","../../../apps/based/admin/lib/eventBind.js"],"sourcesContent":["\n// Populate recent logins table\nexport default async function recentLogins() {\n\n    let recentLogins = [\n        { username: 'alice', ip: '192.168.1.1', time: '2025-05-11 10:00:00' },\n        { username: 'bob', ip: '192.168.1.2', time: '2025-05-11 09:30:00' },\n    ];\n    \n    recentLogins = await this.client.apiRequest('/super-admin/recent-logins', 'GET');\n\n    const tbody = document.querySelector('#recent-logins-table tbody');\n    tbody.innerHTML = '';\n    recentLogins.forEach(login => {\n        const row = document.createElement('tr');\n        let knownIps = '';\n        let _knownIps = [];\n        try {\n            if (login.knownIps) {\n                _knownIps = JSON.parse(login.knownIps);\n            }\n        } catch (e) {\n            console.error('Error parsing knownIPs', e);\n        }\n        _knownIps.forEach(ip => {\n            knownIps += `<a href=\"https://iplocation.io/ip/${ip}\" target=\"_blank\">${ip}</a>`;\n        });\n        row.innerHTML = `\n            <td><span class=\"admin-username-link\" data-username=\"${login.buddyname}\">${login.buddyname}</span></td>\n            <td><a href=\"https://iplocation.io/ip/${login.lastKnownIP}\" target=\"_blank\">${login.lastKnownIP}</a></td>\n            <td>${login.utime}</td>\n            <td>${knownIps}</td>\n        `;\n        tbody.appendChild(row);\n    });\n}","// Populate user by IP table\nexport default async function userByIp(ip) {\n    console.log('userByIp', ip);\n    let userByIpData = {\n        '192.168.1.1': [{ username: 'alice', ip: '192.168.1.1' }],\n        '192.168.1.2': [{ username: 'bob', ip: '192.168.1.2' }],\n    };\n\n    userByIpData = await this.client.apiRequest(`/super-admin/user-by-ip?ip=${ip}`, 'GET');\n\n    // check if userByIpData is an array\n    if (!Array.isArray(userByIpData)) {\n        console.log('userByIpData is not an array:', userByIpData);\n        // update the UI to show an error message\n        $('.api-response', '#admin-userbyIP').text(userByIpData.message);\n        return;\n    }\n    $('.api-response', '#admin-userbyIP').text('');\n\n    console.log('userByIp userByIpData', userByIpData);\n    const tbody = document.querySelector('#user-by-ip-table tbody');\n    tbody.innerHTML = '';\n    userByIpData.forEach(user => {\n        const row = document.createElement('tr');\n        row.innerHTML = `\n            <td><span class=\"admin-username-link\" data-username=\"${user.buddyname}\">${user.buddyname}</span></td>\n            <td>${user.lastKnownIP}</td>\n            <td>${user.knownIps}</td>\n        `;\n        tbody.appendChild(row);\n    });\n}","// get buddy profile from database and durable object\nexport default async function buddyProfile(buddyname) {\n\n    if (!buddyname) {\n        console.log('Buddy name is required');\n        return;\n    }\n\n    let buddyProfiles = await this.client.apiRequest(`/super-admin/buddy-profile?buddyname=${buddyname}`, 'GET');\n    console.log('buddyProfiles', buddyProfiles);\n\n    let databaseProfile = buddyProfiles.database;\n    let durableObjectProfile = buddyProfiles.durableObject;\n    let curses = buddyProfiles.curses;\n\n    const databaseProfileDisplay = document.querySelector('#profile-display-database');\n    if (databaseProfile) {\n        databaseProfileDisplay.textContent = JSON.stringify(databaseProfile, null, 2);\n    } else {\n        databaseProfileDisplay.textContent = 'No database profile found';\n    }\n\n    const durableObjectProfileDisplay = document.querySelector('#profile-display-durable');\n    if (durableObjectProfile) {\n        durableObjectProfileDisplay.textContent = JSON.stringify(durableObjectProfile, null, 2);\n    } else {\n        durableObjectProfileDisplay.textContent = 'No durable object cachedProfile found';\n    }\n\n    const cursesDisplay = document.querySelector('#profile-display-curses');\n    if (curses && curses.length > 0) {\n        cursesDisplay.textContent = JSON.stringify(curses, null, 2);\n    } else {\n        cursesDisplay.textContent = 'No curses found';\n    }\n\n}","\nexport default async function banList() {\n\n    let banList = await this.client.apiRequest('/super-admin/ban-list', 'GET');\n    console.log('banList', banList);\n\n    const tbody = document.querySelector('#admin-banlist tbody');\n    tbody.innerHTML = '';\n    banList.forEach(ban => {\n\n        let currentCurses = [];\n        if (ban.curses) {\n            currentCurses = JSON.parse(ban.curses);\n        }\n        // for each ban.curses create a unique button to insert in cell\n        let curseButtons = currentCurses.map(curse => {\n            console.log('cursecursecurse', curse);\n            let curseType = curse.type;\n            return `<button class=\"admin-remove-ban-link\" data-username=\"${ban.buddyname}\" data-curse=\"${curseType}\">${curseType}</button>`;\n        });\n        console.log('curseButtons', curseButtons);\n\n        const row = document.createElement('tr');\n        row.innerHTML = `\n            <td><span class=\"admin-username-link\" data-username=\"${ban.buddyname}\">${ban.buddyname}</span></td>\n            <td>${ban.ip}</td>\n            <td>${ban.curses}</td>\n            <td>${new Date(ban.utime).toLocaleString()}</td>\n            <td>${curseButtons.join(' ')}</td>\n        `;\n        // <td class=\"admin-remove-ban-link\" data-username=\"${ban.buddyname}\"><button>Unban</td>\n\n        tbody.appendChild(row);\n    });\n}","export default async function banBuddy(buddyname, banType, duration = 60) { // one hour default\n   let banResponse = await this.client.apiRequest('/super-admin/ban-buddy', 'POST', {\n      buddyname: buddyname,\n      type: banType,\n      duration: duration,\n      reason: 'Inappropriate behavior' // TODO: custom message\n   });\n\n   if (banResponse.error) {\n      $('.api-response', '#admin-buddyProfile').html(bankResponse.error);\n      console.error('Error banning buddy:', banResponse.error);\n      return;\n   }\n\n   $('.api-response', '#admin-buddyProfile').html(banResponse.message);\n   this.tabs.showTab('#admin-banlist');\n   console.log('banResponse', banResponse);\n}","export default async function unbanUserbanBuddy(buddyname, type) {\n    console.log('unbanUserbanBuddy', buddyname, type);\n    let unbanResponse = await this.client.apiRequest('/super-admin/unban-buddy', 'POST', {\n        buddyname: buddyname,\n        type: type\n    });\n    console.log('unbanResponse', unbanResponse);\n\n\n    if (unbanResponse.error) {\n        $('.api-response', '#admin-banlist').html(unbanResponse.error);\n        console.error('Error banning buddy:', unbanResponse.error);\n        return;\n     }\n  \n     $('.api-response', '#admin-banlist').html(unbanResponse.message);\n     this.tabs.showTab('#admin-banlist');\n     console.log('unbanResponse', unbanResponse);\n\n }","export default async function destroyBuddy(buddyname) {\n    console.log('destroyBuddy', buddyname);\n    let removeResponse = await this.client.apiRequest('/super-admin/destroy-buddy', 'POST', {\n        buddyname: buddyname\n    });\n    console.log('removeResponse', removeResponse);\n\n\n    if (removeResponse.error) {\n        //$('.api-response', '#admin-banlist').html(removeResponse.error);\n        console.error('Error banning buddy:', removeResponse.error);\n        return;\n     }\n  \n     // $('.api-response', '#admin-banlist').html(removeResponse.message);\n     this.tabs.showTab('#admin-buddyProfile');\n     console.log('removeResponse', removeResponse);\n\n }","export default async function resetPassword(buddyname, newPassword) {\n    console.log('resetPassword', buddyname);\n    let resetResponse = await this.client.apiRequest('/super-admin/reset-password', 'POST', {\n        buddyname: buddyname,\n        newPassword: newPassword || buddyname // use buddyname as default if no password provided\n    });\n    console.log('resetResponse', resetResponse);\n\n    if (resetResponse.error) {\n        //$('.api-response', '#admin-banlist').html(resetResponse.error);\n        console.error('Error resetting buddy password:', resetResponse.error);\n        return;\n     }\n  \n     // $('.api-response', '#admin-banlist').html(resetResponse.message);\n     this.tabs.showTab('#admin-buddyProfile');\n     console.log('resetResponse', resetResponse);\n\n }","export default async function addAdmin(buddyname, ip) { // one hour default\n    console.log('addAdmin called with buddyname:', buddyname, 'and ip:', ip);\n   let addAdminResponse = await this.client.apiRequest('/super-admin/add-admin', 'POST', {\n      buddyname: buddyname,\n        ip: ip\n   });\n\n   if (addAdminResponse.error) {\n      $('.api-response', '#admin-add-admin').html(addAdminResponse.error);\n      console.error('Error banning buddy:', addAdminResponse.error);\n      return;\n   }\n\n   $('.api-response', '#admin-add-admie').html(addAdminResponse.message);\n   this.tabs.showTab('#admin-add-admin');\n   console.log('addAdminResponse', addAdminResponse);\n}","export default async function listAdmins(buddyname, ip) { // one hour default\n    console.log('listAdmins called with buddyname:', buddyname, 'and ip:', ip);\n   let listAdminsResponse = await this.client.apiRequest('/super-admin/admin-list', 'GET');\n\n   if (listAdminsResponse.error) {\n      $('.api-response', '#admin-add-admin').html(listAdminsResponse.error);\n      console.error('Error banning buddy:', listAdminsResponse.error);\n      return;\n   }\n\n   $('.api-response', '#admin-add-admin').html(listAdminsResponse.message);\n   // this.tabs.showTab('#admin-add-admin');\n   console.log('listAdminsResponse', listAdminsResponse);\n\n   $('#admin-list-table').html(''); // Clear the table before populating it\n    if (listAdminsResponse && listAdminsResponse.length > 0) {\n        listAdminsResponse.forEach(admin => {\n            $('#admin-list-table').append(`\n                <tr>\n                    <td>${admin.buddyname}</td>\n                    <td>${admin.ip}</td>\n                    <td>${admin.role}</td>\n                    <td>${admin.ctime}</td>\n                    <td><button class=\"remove-admin\">Remove Admin</button></td>\n\n                </tr>\n            `);\n        });\n    }\n    else {\n        $('#admin-list-table').append(`\n            <tr>\n                <td colspan=\"3\">No admins found</td>\n            </tr>\n        `);\n    }\n    // this.tabs.showTab('#admin-add-admin');\n\n}","\nexport default async function listErrorLogs(query = {}) {\n    console.log('listErrorLogs called with query:', query);\n\n    // Set default pagination parameters\n    const limit = parseInt(query.limit) || 100;\n    const offset = parseInt(query.offset) || 0;\n\n    // Build query string for pagination\n    const queryString = new URLSearchParams({ limit, offset }).toString();\n    const listErrorResponse = await client.apiRequest(`/logs?${queryString}`, 'GET');\n\n    if (listErrorResponse.error) {\n        $('.api-response', '#admin-error-logs').html(listErrorResponse.error);\n        console.error('Error listing logs:', listErrorResponse.error);\n        return;\n    }\n\n    $('.api-response', '#admin-error-logs').html(listErrorResponse.message || '');\n    console.log('listErrorResponse', listErrorResponse);\n\n    // Clear the table body (not the entire table to preserve thead)\n    $('#admin-list-error-logs-table tbody').html('');\n\n    if (listErrorResponse && listErrorResponse.logs && listErrorResponse.logs.length > 0) {\n        // Process logs with symbolication if in production mode\n        for (const logEntry of listErrorResponse.logs) {\n            if (false && this.bp.mode === 'prod') {\n                console.log('needs to symbolicate', logEntry);\n                const sourceMapped = await symbolicate(logEntry.stack);\n                console.log('sourceMapped', sourceMapped);\n                logEntry.stack = sourceMapped;\n            }\n\n            $('#admin-list-error-logs-table tbody').append(`\n                <tr>\n                    <td>${new Date(logEntry.ctime).toLocaleString()}</td>\n                    <td>${logEntry.ip || 'unknown ip'}</td>\n                    <td>${logEntry.type}</td> \n                    <td>${logEntry.message}</td>\n                    <td><span class=\"error-stack\">${logEntry.stack}</span> <button class=\"symbolicate-error\">symbolicate</button></td> \n                </tr>\n            `);\n        }\n    } else {\n        $('#admin-list-error-logs-table tbody').append(`\n            <tr>\n                <td colspan=\"4\">No logs found</td>\n            </tr>\n        `);\n    }\n\n    // Update pagination controls\n    const pagination = listErrorResponse.pagination || { limit, offset, total: listErrorResponse.logs.length };\n    updatePaginationControls.call(this, pagination);\n}\n\n// Function to update pagination controls\nfunction updatePaginationControls({ limit, offset, total }) {\n    const currentPage = Math.floor(offset / limit) + 1;\n    const totalPages = Math.ceil(total / limit) || 1;\n\n    // Update page info\n    $('.page-info', this.adminWindow.content).text(`Page ${currentPage} of ${totalPages}`);\n\n    console.log('Updating pagination controls:', { limit, offset, total });\n    // Enable/disable buttons\n    //$('.prev-page', this.adminWindow.content).prop('disabled', offset === 0);\n    //$('.next-page', this.adminWindow.content).prop('disabled', offset + limit >= total);\n\n    // Set current page size in dropdown\n    $('.page-size', this.adminWindow.content).val(limit);\n\n    console.log('Pagination updated:', { limit, offset, total });\n    // Event listeners for pagination controls\n    $('.prev-page', this.adminWindow.content).off('click').on('click', () => {\n        console.log('Prev page clicked');\n            listErrorLogs.call(this, { limit, offset: offset - limit });\n        if (offset > 0) {\n        }\n    });\n\n    $('.next-page', this.adminWindow.content).off('click').on('click', () => {\n        console.log('Next page clicked');\n        listErrorLogs.call(this, { limit, offset: offset + limit });\n        if (offset + limit < total) {\n        }\n    });\n\n    $('.page-size', this.adminWindow.content).off('change').on('change', (e) => {\n        const newLimit = parseInt(e.target.value);\n        listErrorLogs.call(this, { limit: newLimit, offset: 0 });\n    });\n}\n\nconst client = {};\n\nclient.endpoint = buddypond.errorsEndpoint;\n\nclient.apiRequest = async (uri, method = 'GET', data = null) => {\n\n    const options = {\n        method: method\n    };\n\n    let headers = {\n        \"Accept\": \"application/json\",\n        \"Content-Type\": \"application/json; charset=utf-8\",\n        \"X-Me\": buddypond.me\n      };\n      if (buddypond.qtokenid) {\n        headers[\"Authorization\"] = `Bearer ${buddypond.qtokenid}`; // ✅ Use Authorization header\n      }\n\n\n    if (data) {\n        options.body = JSON.stringify(data);\n    }\n\n    options.headers = headers;\n\n    let url = `${client.endpoint}${uri}`;\n    console.log('admin client making api request', url, options);\n \n\n    try {\n        const response = await fetch(url, options);\n        if (!response.ok) {\n            throw new Error(`HTTP error! status: ${response.status}`);\n        }\n        return await response.json();\n    } catch (error) {\n        console.error('Error in API request:', error);\n        throw error;\n    }\n\n};\n\n","export default class HotPondsWebSocketClient {\n  constructor({ pondId, endpoint, bp }) {\n    this.pondId = pondId;\n    this.endpoint = buddypond.pondsWsEndpoint;\n    this.bp = bp;\n\n    this.ws = null;\n    this.reconnectAttempts = 0;\n    this.maxReconnectAttempts = 5;\n    this.maxBackoffDelay = 10000; // 10 seconds\n    this.isIntentionallyClosed = false;\n    return this;\n  }\n\n  async connect() {\n\n    if (this.ws && (this.ws.readyState === WebSocket.CONNECTING || this.ws.readyState === WebSocket.OPEN)) {\n      return this;\n    }\n\n    const url = `${this.endpoint}?me=${buddypond.me}&qtokenid=${buddypond.qtokenid}`;\n    console.log(`🔌 Connecting to HotPonds...`);\n\n    return new Promise((resolve, reject) => {\n      const ws = new WebSocket(url);\n\n      const onOpen = () => {\n        console.log('✅ WebSocket connected to HotPond');\n        this.reconnectAttempts = 0;\n        this.ws = ws;\n\n        this.pingInterval = setInterval(() => {\n          if (this.ws && this.ws.readyState === WebSocket.OPEN) {\n            // console.log('Sending ping to hotponds WebSocket');\n            this.ws.send('ping'); // Matches server's setWebSocketAutoResponse(\"ping\", \"pong\")\n          }\n        }, 30000);\n\n        this.bp?.emit('hotpond::connected', { pondId: this.pondId });\n        resolve(this);\n      };\n\n      const onMessage = (event) => {\n        let data;\n        if (event.data === 'pong') {\n          // Ignore pong messages\n          return;\n        }\n        try {\n          data = JSON.parse(event.data);\n        } catch (err) {\n          console.error('❌ Failed to parse message:', event.data);\n          this.bp?.emit('hotpond::error', { error: 'Invalid JSON', raw: event.data });\n          return;\n        }\n\n        // 🔧 Add support for custom actions later\n        console.log('📬 Message received from HotPond:', data);\n\n        let action = data.action;\n\n        switch (action) {\n          case 'activePonds':\n            // console.log('Active ponds:', data.ponds);\n            this.bp?.emit('hotpond::activePonds', data.ponds);\n            break;\n        }\n\n        // this.bp?.emit('hotpond::message', { pondId: this.pondId, message: data });\n      };\n\n      const onClose = (event) => {\n        console.warn(`⚠️ WebSocket closed [${event.code}]: ${event.reason}`);\n        clearInterval(this.pingInterval);\n        this._teardown?.();\n        this.ws = null;\n        this.bp?.emit('hotpond::disconnected', {\n          pondId: this.pondId,\n          code: event.code,\n          reason: event.reason,\n        });\n\n        if (!this.isIntentionallyClosed && this.reconnectAttempts < this.maxReconnectAttempts) {\n          const delay = Math.min(\n            200 * Math.pow(2, this.reconnectAttempts) * (1 + 0.1 * Math.random()),\n            this.maxBackoffDelay\n          );\n          console.log(`⏳ Reconnecting in ${Math.floor(delay)}ms...`);\n          setTimeout(() => {\n            this.reconnectAttempts++;\n            this.connect().catch(() => { });\n            this.bp?.emit('hotpond::reconnecting', { attempt: this.reconnectAttempts });\n          }, delay);\n        } else {\n          if (this.reconnectAttempts >= this.maxReconnectAttempts) {\n            console.error('❌ Max reconnect attempts reached. Giving up.');\n            this.bp?.emit('hotpond::reconnect_failed', { pondId: this.pondId });\n          }\n        }\n      };\n\n      const onError = (event) => {\n        console.error('❌ WebSocket error:', event);\n        this.bp?.emit('hotpond::error', { error: 'WebSocket error', event });\n        ws.close(1000, 'Error occurred');\n        reject(new Error('WebSocket connection failed'));\n      };\n\n      // Attach handlers\n      ws.addEventListener('open', onOpen);\n      ws.addEventListener('message', onMessage);\n      ws.addEventListener('close', onClose);\n      ws.addEventListener('error', onError);\n\n      // Store methods for teardown\n      this._teardown = () => {\n        ws.removeEventListener('open', onOpen);\n        ws.removeEventListener('message', onMessage);\n        ws.removeEventListener('close', onClose);\n        ws.removeEventListener('error', onError);\n      };\n    });\n  }\n\n  disconnect() {\n    if (this.ws) {\n      this.isIntentionallyClosed = true;\n\n      clearInterval(this.pingInterval);\n      this._teardown?.();\n\n      this.ws.close(1000, 'Normal closure');\n      this.ws = null;\n\n      this.bp?.emit('hotpond::closed', { pondId: this.pondId });\n    }\n  }\n\n  send(data) {\n    if (this.ws && this.ws.readyState === WebSocket.OPEN) {\n      const msg = typeof data === 'string' ? data : JSON.stringify(data);\n      this.ws.send(msg);\n    } else {\n      console.warn('⚠️ Tried to send message but WebSocket is not open');\n    }\n  }\n\n  listActivePonds() {\n\n    // sends a listActivePonds action message to the server\n    if (this.ws && this.ws.readyState === WebSocket.OPEN) {\n      this.send({ action: 'listActivePonds' });\n    } else {\n      console.warn('⚠️ Tried to list active ponds but WebSocket is not open');\n    }\n  }\n\n  clearAllPonds() {\n    // sends a clearAllPonds action message to the server\n    if (this.ws && this.ws.readyState === WebSocket.OPEN) {\n      this.send({ action: 'clearAllPonds' });\n    } else {\n      console.warn('⚠️ Tried to clear all ponds but WebSocket is not open');\n    }\n  }\n\n}\n\n\nHotPondsWebSocketClient.prototype.apiRequest = async (uri, method = 'GET', data = null) => {\n    let endpoint = buddypond.pondsEndpoint;\n\n    const options = {\n        method: method\n    };\n\n    let headers = {\n        \"Accept\": \"application/json\",\n        \"Content-Type\": \"application/json; charset=utf-8\",\n        \"X-Me\": buddypond.me\n      };\n      if (buddypond.qtokenid) {\n        headers[\"Authorization\"] = `Bearer ${buddypond.qtokenid}`; // ✅ Use Authorization header\n      }\n\n\n    if (data) {\n        options.body = JSON.stringify(data);\n    }\n\n    options.headers = headers;\n\n    let url = `${endpoint}${uri}`;\n    console.log('pond client making api request', url, options);\n \n\n    try {\n        const response = await fetch(url, options);\n        if (!response.ok) {\n            throw new Error(`HTTP error! status: ${response.status}`);\n        }\n        return await response.json();\n    } catch (error) {\n        console.error('Error in API request:', error);\n        throw error;\n    }\n\n};\n\n","import HotPondsWebSocketClient from '../../../pond/client.js';\n\nexport default async function listPonds() {\n    console.log('listPonds called');\n    let client =  new HotPondsWebSocketClient({ bp: this.bp });\n\n    let listPondsResponse = await client.apiRequest('', 'GET');\n\n    // iterate through results and populate the #admin-list-ponds-table tbody\n    let tbody = document.querySelector('#admin-list-ponds-table tbody');\n    tbody.innerHTML = ''; // clear existing rows\n    listPondsResponse.forEach(pond => {\n        let tr = document.createElement('tr');\n        let tdId = document.createElement('td');\n        tdId.textContent = pond.pond_id;\n        tr.appendChild(tdId);\n\n        let tdConnections = document.createElement('td');\n        tdConnections.textContent = pond.connection_count;\n        tr.appendChild(tdConnections);\n\n        let tdCreatedAt = document.createElement('td');\n        let createdDate = new Date(pond.created_at);\n        tdCreatedAt.textContent = createdDate.toLocaleString();\n        tr.appendChild(tdCreatedAt);\n\n        let tdLastActive = document.createElement('td');\n        let lastActiveDate = new Date(pond.last_active);\n        tdLastActive.textContent = lastActiveDate.toLocaleString();\n        tr.appendChild(tdLastActive);\n\n        let tdAction = document.createElement('td');\n        let deleteButton = document.createElement('button');\n        deleteButton.textContent = 'Delete';\n        deleteButton.className = 'btn btn-danger btn-sm';\n        deleteButton.onclick = async () => {\n            if (confirm(`Are you sure you want to delete pond ${pond.pond_id}?`)) {\n                try {\n                    let deleteResponse = await client.apiRequest(`/pond/remove`, 'POST', { pond_id: pond.pond_id });\n                    console.log('deleteResponse:', deleteResponse);\n                    // remove the row from the table\n                    tr.remove();\n                } catch (error) {\n                    console.error('Error deleting pond:', error);\n                    alert('Error deleting pond. See console for details.');\n                }\n            }\n        };\n        tdAction.appendChild(deleteButton);\n        tr.appendChild(tdAction);\n\n        tbody.appendChild(tr);\n    });\n    console.log('listPondsResponse:', listPondsResponse);\n}","export default async function listRules() {\n    console.log('listRules called');\n\n    let result = await this.client.apiRequest('/super-admin/ip-ban', 'GET');\n    let rules = result.rules || [];\n    console.log('rules', rules);\n\n    let rulesTable = document.querySelector('#firewall-rules-table');\n\n    // Clear existing rows\n    rulesTable.innerHTML = '';\n\n    // Create header row\n    let header = rulesTable.insertRow();\n    ['#', 'IP Address', 'Created On', 'Actions'].forEach(text => {\n        let th = document.createElement('th');\n        th.textContent = text;\n        header.appendChild(th);\n    });\n\n    // Populate the table with rules\n    rules.forEach((rule, index) => {\n        let row = rulesTable.insertRow();\n\n        // Extract IP from expression (e.g. (ip.src eq 147.81.46.172))\n        let ipMatch = rule.filter?.expression?.match(/\\((ip\\.src eq )([^\\)]+)\\)/);\n        let ipAddress = ipMatch ? ipMatch[2] : 'Unknown';\n\n        row.insertCell(0).textContent = index + 1; // Rule number\n        row.insertCell(1).textContent = ipAddress; // Extracted IP\n        row.insertCell(2).textContent = new Date(rule.created_on).toLocaleString(); // Created On\n\n        // Actions cell with delete button\n        let actionCell = row.insertCell(3);\n        let deleteButton = document.createElement('button');\n        deleteButton.textContent = 'Delete';\n        deleteButton.className = 'delete-rule-button';\n        deleteButton.addEventListener('click', async () => {\n            if (confirm(`Are you sure you want to delete rule for IP ${ipAddress}?`)) {\n                await this.client.apiRequest(`/super-admin/ip-ban/${rule.id}`, 'DELETE');\n                listRules.call(this); // Refresh list after deletion\n            }\n        });\n        actionCell.appendChild(deleteButton);\n    });\n\n    if (rules.length === 0) {\n        let row = rulesTable.insertRow();\n        let cell = row.insertCell(0);\n        cell.colSpan = 4;\n        cell.textContent = 'No firewall rules found.';\n    }\n\n    console.log('Firewall rules listed:', rules);\n}\n","import listRules from \"./listRules.js\";\n\nexport default async function addRule(ip = \"147.81.46.172\") {\n    try {\n    await this.client.apiRequest('/super-admin/ip-ban', 'POST', {\n        ip: ip\n    });\n    //console.log('addRule result', result);\n\n    } catch (error) {\n        $('#admin-firewall .api-response').text('Error adding firewall rule: ' + error.message);\n        console.error('Error adding firewall rule:', error);\n        throw error; // Re-throw the error for further handling if needed\n    }\n    // console.log('addRule result', result);\n    listRules.call(this); // Refresh list after deletion\n}","export default async function symbolicate(stack, sourceMapUrl = null) {\n\n    if (!sourceMapUrl) {\n    sourceMapUrl = inferSourceMapUrlFromStack(stack);\n    console.log('Inferred source map URL:', sourceMapUrl);\n    if (!sourceMapUrl) {\n      console.warn('Could not infer source map URL from stack trace');\n      return stack;\n    }\n  }\n\n  const res = await fetch(sourceMapUrl);\n  const rawSourceMap = await res.json();\n  const consumer = await new SourceMap.SourceMapConsumer(rawSourceMap);\n\n  const lines = stack.split('\\n').map(line => {\n    const match = line.match(/:(\\d+):(\\d+)\\)?$/);\n    if (!match) return line;\n\n    const [_, lineNum, colNum] = match;\n    const pos = consumer.originalPositionFor({\n      line: Number(lineNum),\n      column: Number(colNum),\n    });\n\n    if (!pos.source) return line;\n\n    return `${pos.name || '(anonymous)'} (${pos.source}:${pos.line}:${pos.column})`;\n  });\n\n  return lines.join('\\n');\n}\n\n\nfunction inferSourceMapUrlFromStack(stack) {\n\nconsole.log('Inferring source map URL from stack:', stack);\n\n  const match = stack.match(/https?:\\/\\/[^)\\s]+\\/([^\\s:]+\\.js)(:\\d+){1,2}/);\n  if (!match) return null;\n\n  const scriptPath = match[0].split(':')[0]; // Remove line:col\n  console.log('Matched script path:', scriptPath);\n  return scriptPath + '.map';\n}","const client = {};\n\nclient.endpoint = buddypond.adminEndpoint;\n\nclient.apiRequest = async (uri, method = 'GET', data = null) => {\n\n    const options = {\n        method: method\n    };\n\n    let headers = {\n        \"Accept\": \"application/json\",\n        \"Content-Type\": \"application/json; charset=utf-8\",\n        \"X-Me\": buddypond.me\n      };\n      if (buddypond.qtokenid) {\n        headers[\"Authorization\"] = `Bearer ${buddypond.qtokenid}`; // ✅ Use Authorization header\n      }\n\n\n    if (data) {\n        options.body = JSON.stringify(data);\n    }\n\n    options.headers = headers;\n\n    let url = `${client.endpoint}${uri}`;\n    console.log('admin client making api request', url, options);\n \n\n    try {\n        const response = await fetch(url, options);\n        if (!response.ok) {\n            throw new Error(`HTTP error! status: ${response.status}`);\n        }\n        return await response.json();\n    } catch (error) {\n        console.error('Error in API request:', error);\n        throw error;\n    }\n\n};\n\nexport default client;","/* Admin.js - Marak Squires 2025 - BuddyPond */\nimport render from './lib/render.js';\nimport eventBind from './lib/eventBind.js';\nimport client from './lib/client.js';\n\nexport default class Admin {\n    constructor(bp, options = {}) {\n        this.bp = bp;\n        this.icon = 'desktop/assets/images/icons/icon_admin_64.png';\n        return this;\n    }\n\n    async init() {\n        this.html = await this.bp.load('/v5/apps/based/admin/admin.html');\n        await this.bp.load('/v5/apps/based/admin/admin.css');\n        await this.bp.appendScript('/v5/apps/based/admin/vendor/source-map.bundle.js');\n        return 'loaded admin window';\n    }\n    \n    async open (options = {}) {\n        if (!this.adminWindow) {\n            this.adminWindow = this.bp.apps.ui.windowManager.createWindow({\n                id: 'admin',\n                title: 'Admin',\n                icon: this.icon,\n                x: 250,\n                y: 75,\n                width: 800,\n                height: 400,\n                minWidth: 200,\n                minHeight: 200,\n                parent: $('#desktop')[0],\n                // content: '<h1>Message of the Day</h1><p>Under construction</p>',\n                resizable: true,\n                minimizable: true,\n                maximizable: true,\n                closable: true,\n                focusable: true,\n                maximized: false,\n                minimized: false,\n                onClose: () => {\n                    this.adminWindow = null\n                }\n            });\n            this.adminWindow.loggedIn = true;\n        }\n\n        if (options.context === 'default') {\n            options.context = 'admin';\n        }\n\n        await this.render(this.adminWindow);\n        this.eventBind(this.adminWindow);\n        return this.adminWindow;\n    }\n\n resetAllPondCounts() {\n        // reset all ponds to 0 connections\n        let url = buddypond.messagesApiEndpoint + '/reset-hotpond-counts';\n        console.log('Resetting all pond counts at:', url);\n        fetch(url, {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json',\n                'Authorization': `Bearer ${this.bp.qtokenid}`, // Use Authorization header\n                'x-me': this.bp.me\n            }\n        }).then(response => {\n            if (response.ok) {\n                console.log('All pond counts reset successfully');\n            } else {\n                throw new Error('Failed to reset pond counts');\n            }\n        }).catch(error => {\n            console.error('Error resetting pond counts:', error);\n        });\n    }\n\n\n}\n\nAdmin.prototype.render = render;\nAdmin.prototype.eventBind = eventBind;\nAdmin.prototype.client = client;","export default function render (adminWindow) {\n    $(adminWindow.content).html(this.html);\n\n}","import recentLogins from './commands/recentLogins.js';\nimport userByIP from './commands/userByIP.js';\nimport buddyProfile from './commands/buddyProfile.js';\nimport banList from './commands/banList.js';\nimport banBuddy from './commands/banBuddy.js';\nimport unbanBuddy from './commands/unbanBuddy.js';\nimport destroyBuddy from './commands/destroyBuddy.js';\nimport resetPassword from './commands/resetPassword.js';\nimport addAdmin from './commands/addAdmin.js';\nimport listAdmins from './commands/listAdmins.js';\nimport listErrorLogs from './commands/listErrorLogs.js';\nimport listPonds from './commands/listPonds.js';\n\nimport listRules from './commands/firewall/listRules.js';\nimport addRule from './commands/firewall/addRule.js';\n\nimport symbolicate from './symbolicate.js';\n\n\nexport default function eventBind(adminWindow) {\n    // Tab manager handles tab switching\n    this.tabs = new this.bp.apps.ui.Tabs('.tabs-container', adminWindow.content);\n\n    // onTab callback\n    this.tabs.onTab((tabId) => {\n        console.log('tabId', tabId);\n\n        switch (tabId) {\n            case '#admin-recent-logins':\n                console.log('admin-recent-logins');\n                recentLogins.call(this);\n                break;\n            case '#admin-userbyIP':\n                console.log('admin-userbyIP');\n                document.querySelector('#ip-input').value = '';\n                userByIP.call(this, '192.168.200.59');\n                break;\n            case '#admin-buddyProfile':\n                console.log('admin-buddyProfile');\n                let buddyname = document.querySelector('#profile-input').value.trim();\n                buddyProfile.call(this, buddyname);\n                break;\n            case '#admin-banlist':\n                console.log('admin-banlist');\n                banList.call(this);\n                break;\n            case '#admin-add-admin':\n                console.log('admin-add-admin');\n                let adminName = document.querySelector('#admin-username').value.trim();\n                let ip = document.querySelector('#admin-ip').value.trim();\n                listAdmins.call(this);\n            // addAdmin.call(this, adminName, ip);\n            case '#admin-firewall':\n                console.log('admin-firewall');\n                // list firewall rules\n                listRules.call(this);\n                break;\n            case '#admin-error-logs':\n                console.log('admin-error-logs');\n                listErrorLogs.call(this);\n                break;\n            case '#admin-ponds':\n                console.log('admin-ponds');\n                listPonds.call(this);\n                break;\n            default:\n                console.warn('Unknown tabId:', tabId);\n        }\n    });\n\n    // navigate to the first tab\n    this.tabs.navigateToTab('#admin-recent-logins');\n\n    // Event handlers\n    document.querySelector('#ip-search-button').addEventListener('click', () => {\n        const ip = document.querySelector('#ip-input').value.trim();\n        if (ip) {\n            userByIP.call(this, ip);\n        }\n    });\n\n    // add admin button handler\n    document.querySelector('#add-admin-button').addEventListener('click', () => {\n        let buddyname = document.querySelector('#admin-username').value.trim();\n        let ip = document.querySelector('#admin-ip').value.trim();\n        if (!buddyname) {\n            alert('No buddyname provided');\n            return;\n        }\n        if (buddyname) {\n            addAdmin.call(this, buddyname, ip);\n        }\n    });\n\n    // ip-ban-button handler\n    document.querySelector('#ip-ban-button').addEventListener('click', () => {\n        // TODO: alert confirmation\n        // let confirmed = confirm('Are you sure you want to ban this buddies IP?');\n        let confirmed = true;\n        if (!confirmed) {\n            return;\n        }\n        let buddyname = document.querySelector('#profile-input').value.trim();\n        let banType = document.querySelector('#ban-type').value;\n        let banLength = document.querySelector('#ban-length').value; // in minutes\n        buddyname = buddyname;\n        if (!buddyname) {\n            alert('No buddyname provided');\n            return;\n        }\n        if (buddyname) {\n            banBuddy.call(this, buddyname, banType, banLength);\n        }\n    });\n\n    document.querySelector('#profile-search-button').addEventListener('click', () => {\n        const username = document.querySelector('#profile-input').value.trim();\n        if (username) {\n            buddyProfile.call(this, username);\n        }\n    });\n\n    // Handle username clicks in recent logins table\n    document.querySelector('#recent-logins-table').addEventListener('click', (e) => {\n        const usernameLink = e.target.closest('.admin-username-link');\n        if (usernameLink) {\n            const username = usernameLink.dataset.username;\n            document.querySelector('#profile-input').value = username;\n            this.tabs.navigateToTab('#admin-buddyProfile');\n            buddyProfile.call(this, username);\n        }\n    });\n\n    // Handle username clicks in user-by-IP table\n    document.querySelector('#user-by-ip-table').addEventListener('click', (e) => {\n        const usernameLink = e.target.closest('.admin-username-link');\n        if (usernameLink) {\n            const username = usernameLink.dataset.username;\n            document.querySelector('#profile-input').value = username;\n            this.tabs.navigateToTab('#admin-buddyProfile');\n            buddyProfile.call(this, username);\n        }\n    });\n\n    // Handle username clicks in user-by-IP table\n    document.querySelector('#admin-banlist').addEventListener('click', (e) => {\n        const usernameLink = e.target.closest('.admin-username-link');\n        if (usernameLink) {\n            const username = usernameLink.dataset.username;\n            document.querySelector('#profile-input').value = username;\n            this.tabs.navigateToTab('#admin-buddyProfile');\n            buddyProfile.call(this, username);\n        }\n    });\n\n\n    // Handle unban button clicks\n    document.querySelector('#admin-banlist').addEventListener('click', (e) => {\n        const unbanButton = e.target.closest('.admin-remove-ban-link');\n        if (unbanButton) {\n            console.log('unbanButtonunbanButtonunbanButtonunbanButton', unbanButton);\n            const buddyname = unbanButton.dataset.username;\n            const curseType = unbanButton.dataset.curse;\n            unbanBuddy.call(this, buddyname, curseType);\n        }\n    });\n\n    // delete-buddy-button\n    document.querySelector('#delete-buddy-button').addEventListener('click', () => {\n        let confirmed = confirm('Are you sure you want to delete this buddy?');\n        if (!confirmed) {\n            return;\n        }\n\n        let buddyname = document.querySelector('#profile-input').value.trim();\n        if (!buddyname) {\n            alert('No buddyname provided');\n            return;\n        }\n        if (buddyname) {\n            // this.bp.apps.buddylist.removeBuddy(buddyname);\n            destroyBuddy.call(this, buddyname);\n        }\n    });\n\n    // reset-buddy-password-button\n    document.querySelector('#reset-buddy-password-button').addEventListener('click', () => {\n        let confirmed = confirm('Are you sure you want to reset this buddy\\'s password?');\n        if (!confirmed) {\n            return;\n        }\n\n        let newPassword = prompt('Enter new password for buddy:', '');\n        if (!newPassword) {\n            newPassword = buddyname; // use buddyname as default if no password provided\n        }\n\n        let buddyname = document.querySelector('#profile-input').value.trim();\n        if (!buddyname) {\n            alert('No buddyname provided');\n            return;\n        }\n        console.log('Resetting password for buddy:', buddyname, 'to new password:', newPassword);\n        if (buddyname) {\n            // this.bp.apps.buddylist.resetPassword(buddyname);\n            // this.bp.apps.buddyscript.executeCommand('reset-password', { buddyname });\n            resetPassword.call(this, buddyname, newPassword);\n        }\n    });\n\n    // #login-as-user-button\n    // #super-admin-token\n    $('#login-as-user-button').on('click', async () => {\n        let token = $('#super-admin-token').val().trim();\n        let buddyname = $('#profile-input').val().trim();\n        if (!token) {\n            alert('No token provided');\n            return;\n        }\n        console.log('Logging in as user with token:', buddyname, token);\n        try {\n            let response = await fetch(buddypond.endpoint + '/auth', {\n                method: 'POST',\n                body: JSON.stringify({ buddyname }),\n                headers: {\n                    'Content-Type': 'application/json',\n                    'x-admin-token': token\n                }\n            });\n            let data = await response.json();\n            if (data.success) {\n                alert('Logged in as user successfully');\n                // set the qtoken to localStorage\n\n                localStorage.setItem('qtokenid', data.qtokenid);\n                localStorage.setItem('me', buddyname);\n\n                // Optionally, you can redirect or refresh the page\n                window.location.reload();\n            } else {\n                alert('Failed to log in as user: ' + data.message);\n            }\n        } catch (error) {\n            console.error('Error logging in as user:', error);\n            alert('Error logging in as user: ' + error.message);\n        }\n    });\n\n    $('#firewall-rule-form').on('submit', async (e) => {\n        e.preventDefault();\n        let ruleAction = $('#firewall-rule-action').val();\n        let ruleIP = $('#firewall-rule-ip').val().trim();\n        console.log('Adding firewall rule:', ruleAction, ruleIP);\n\n        if (!ruleIP) {\n            alert('No IP address provided');\n            return;\n        }\n\n        // TODO: swap action to delete if ruleAction is not add\n        await addRule.call(this, ruleIP);\n\n    });\n    $('#admin-list-error-logs-table').on('click', async (e) => {\n        if (e.target.classList.contains('symbolicate-error')) {\n\n            try {\n            console.log('Symbolicate error clicked', e.target);\n            const errorStackElement = $(e.target).parent().find('.error-stack');\n            let errorStack = errorStackElement.text().trim();\n            console.log('errorStackElement', errorStackElement);\n            console.log('errorStack', errorStack);\n\n            // Function to infer source map URL from error stack\n            function getSourceMapUrl(errorStack) {\n                // Use regex to extract the URL from the error stack\n                const urlRegex = /https:\\/\\/buddypond\\.com\\/v5\\/dist\\/apps\\/based\\/[^)]+\\.js/g;\n                const match = errorStack.match(urlRegex);\n\n                if (match && match[0]) {\n                    // Take the first matched URL and append .map\n                    const jsUrl = match[0];\n                    // Replace .js with .js.map\n                    return jsUrl.replace(/\\.js($|\\?)/, '.js.map$1');\n                }\n\n                // Fallback if no URL is found\n                return null;\n            }\n\n            // Get the source map URL\n            const sourceMapUrl = getSourceMapUrl(errorStack);\n\n            if (sourceMapUrl) {\n                let result = await symbolicate(errorStack, sourceMapUrl);\n                console.log('Symbolicated result:', result);\n                // Update the error stack element with the symbolicated result\n                errorStackElement.text(result || 'Could not symbolicate stack trace');\n                // remove the symbolicate button\n                $(e.target).remove();\n            } else {\n                console.error('Could not infer source map URL from error stack');\n            }\n            } catch (error) {\n                // do not log symbolicate errors as errors\n                console.log('Error symbolicating stack trace:', error);\n            }\n\n        }\n    });\n\n}"],"names":["async","recentLogins","username","ip","time","this","client","apiRequest","tbody","document","querySelector","innerHTML","forEach","login","row","createElement","knownIps","_knownIps","JSON","parse","e","console","error","buddyname","lastKnownIP","utime","appendChild","userByIp","log","userByIpData","Array","isArray","$","text","message","user","buddyProfile","buddyProfiles","databaseProfile","database","durableObjectProfile","durableObject","curses","databaseProfileDisplay","textContent","stringify","durableObjectProfileDisplay","cursesDisplay","length","banList","ban","currentCurses","curseButtons","map","curse","curseType","type","Date","toLocaleString","join","banBuddy","banType","duration","banResponse","reason","html","bankResponse","tabs","showTab","unbanUserbanBuddy","unbanResponse","destroyBuddy","removeResponse","resetPassword","newPassword","resetResponse","addAdmin","addAdminResponse","listAdmins","listAdminsResponse","admin","append","role","ctime","listErrorLogs","query","limit","parseInt","offset","queryString","URLSearchParams","toString","listErrorResponse","logs","logEntry","stack","pagination","total","updatePaginationControls","call","currentPage","Math","floor","totalPages","ceil","adminWindow","content","val","off","on","newLimit","target","value","endpoint","buddypond","errorsEndpoint","uri","method","data","options","headers","Accept","me","qtokenid","body","url","response","fetch","ok","Error","status","json","HotPondsWebSocketClient","constructor","pondId","bp","pondsWsEndpoint","ws","reconnectAttempts","maxReconnectAttempts","maxBackoffDelay","isIntentionallyClosed","connect","readyState","WebSocket","CONNECTING","OPEN","Promise","resolve","reject","onOpen","pingInterval","setInterval","send","emit","onMessage","event","err","raw","action","ponds","onClose","warn","code","clearInterval","_teardown","delay","min","pow","random","setTimeout","catch","attempt","onError","close","addEventListener","removeEventListener","disconnect","msg","listActivePonds","clearAllPonds","listPonds","listPondsResponse","pond","tr","tdId","pond_id","tdConnections","connection_count","tdCreatedAt","createdDate","created_at","tdLastActive","lastActiveDate","last_active","tdAction","deleteButton","className","onclick","confirm","deleteResponse","remove","alert","listRules","rules","rulesTable","header","insertRow","th","rule","index","ipMatch","filter","expression","match","ipAddress","insertCell","created_on","actionCell","id","cell","colSpan","addRule","symbolicate","sourceMapUrl","scriptPath","split","inferSourceMapUrlFromStack","res","rawSourceMap","consumer","SourceMap","SourceMapConsumer","line","_","lineNum","colNum","pos","originalPositionFor","Number","column","source","name","prototype","pondsEndpoint","adminEndpoint","Admin","icon","init","load","appendScript","open","apps","ui","windowManager","createWindow","title","x","y","width","height","minWidth","minHeight","parent","resizable","minimizable","maximizable","closable","focusable","maximized","minimized","loggedIn","context","render","eventBind","resetAllPondCounts","messagesApiEndpoint","Authorization","then","Tabs","onTab","tabId","userByIP","trim","navigateToTab","banLength","usernameLink","closest","dataset","unbanButton","unbanBuddy","prompt","token","success","localStorage","setItem","window","location","reload","preventDefault","ruleAction","ruleIP","classList","contains","errorStackElement","find","errorStack","getSourceMapUrl","replace","result"],"mappings":"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"}