{"version":3,"file":"chalkboard.js","sources":["../../../apps/based/chalkboard/chalkboard.js"],"sourcesContent":["export default class Chalkboard {\n  constructor(bp, options = {}) {\n    this.bp = bp;\n    this.options = options;\n    return this;\n  }\n\n  async init() {\n    return 'loaded Chalkbord';\n  }\n\n  async open(options = {}) {\n    this.output = options.output;\n    this.context = options.context;\n    // console.log(\"Opening Chalkboard with options:\", options);\n    if (!this.chalkWindow) {\n      this.chalkWindow = this.bp.window(this.window(options));\n      this.broadcastChannel();\n    }\n    return this.chalkWindow;\n  }\n\n  broadcastChannel() {\n\n    this.receiver = new BroadcastChannel(\"buddypond-chalkboard\");\n\n    // creates a new BroadcastChannel for the desktop\n    this.bc = new BroadcastChannel(\"buddypond-desktop\");\n    // Listen for messages on the desktop channel\n    this.bc.onmessage = async (event) => {\n      // console.log('BroadcastChannel message received:', event.data);\n      let app = event.data.app;\n\n      // console.log(`received message from app: ${app}`);\n\n      if (event.data.app === 'chalkboard' && event.data.action === 'save') {\n        // console.log('BroadcastChannel save action received', event.data);\n\n        let dataURL = event.data.image; // Remark: this was sent over a broadcast channel\n        // console.log('Data URL received:', dataURL);\n        let fileName = event.data.fileName || buddypond.generateSafeFilename('png');\n        let filePath = `paints/${fileName}`;\n\n        function srcToFile(src, fileName, mimeType) {\n          return (fetch(src)\n            .then(function (res) { return res.arrayBuffer(); })\n            .then(function (buf) { return new File([buf], fileName, { type: mimeType }); })\n          );\n        }\n\n        srcToFile(dataURL, fileName, 'image/png').then(async (file) => {\n\n          // Create File from Blob\n          //const file = new File([blob], fileName, { type: blob.type });\n          file.filePath = filePath;\n          console.log('File created:', file, file instanceof File);\n\n          // Test image display\n          const testImage = document.createElement('img');\n\n          // if we have no context or output, save the file locally\n          if (!this.context || !this.output) {\n            console.warn('No context or output specified, saving file locally.');\n            // Save the file locally\n            let link = document.createElement('a');\n            link.href = URL.createObjectURL(file);\n            link.download = fileName;\n            document.body.appendChild(link);\n            link.click();\n            document.body.removeChild(link);\n            return;\n          }\n\n          let onProgress = (progress) => {\n            console.log(`Upload progress: ${progress}%`);\n          };\n\n          // âœ… Upload via buddypond API\n          try {\n            let resultingUrl = await buddypond.uploadFile(file, onProgress);\n            console.log('Upload successful:', resultingUrl);\n            let message = {\n              to: this.context,\n              from: bp.me,\n              type: this.output,\n              text: resultingUrl\n            };\n            console.log(\"sending multimedia message\", message);\n            // now take this image and send it to the chat window as url message\n            bp.emit('buddy::sendMessage', message);\n            this.close();\n          } catch (err) {\n            console.error('Upload failed:', err);\n          }\n        });\n\n      }\n    };\n\n  }\n\n  window(options = {}) {\n    return {\n      id: 'chalkboard',\n      title: 'Chalkboard',\n      icon: 'desktop/assets/images/icons/icon_chalkboard_64.webp',\n      x: 250,\n      y: 75,\n      width: 600, // Increased width for two-column layout\n      height: 400,\n      minWidth: 400,\n      minHeight: 300,\n      parent: $('#desktop')[0],\n      iframeContent: '/v5/apps/based/chalkboard/vendor/chalkboard.html',\n      resizable: true,\n      minimizable: true,\n      maximizable: true,\n      closable: true,\n      focusable: true,\n      maximized: false,\n      minimized: false,\n      onLoad: () => {\n        this.receiver.postMessage({ type: \"app\", app: \"chalkboard\", action: \"load\", src: options.src || null });\n      },\n      onClose: () => {\n        // this.bp.apps.ui.windowManager.destroyWindow('motd');\n        this.chalkWindow = null; // Clear the reference to the window\n        this.bc.close(); // Close the BroadcastChannel\n      }\n    }\n  }\n\n  close () {\n    if (this.chalkWindow && this.chalkWindow.close) {\n      this.chalkWindow.close();\n    }\n    this.chalkWindow = null;\n    if (this.bc) {\n      this.bc.close();\n    }\n    this.bc = null;\n  }\n}"],"names":["Chalkboard","constructor","bp","options","this","init","open","output","context","chalkWindow","window","broadcastChannel","receiver","BroadcastChannel","bc","onmessage","async","event","data","app","action","dataURL","image","fileName","buddypond","generateSafeFilename","filePath","srcToFile","src","mimeType","fetch","then","res","arrayBuffer","buf","File","type","file","console","log","document","createElement","warn","link","href","URL","createObjectURL","download","body","appendChild","click","removeChild","onProgress","progress","resultingUrl","uploadFile","message","to","from","me","text","emit","close","err","error","id","title","icon","x","y","width","height","minWidth","minHeight","parent","$","iframeContent","resizable","minimizable","maximizable","closable","focusable","maximized","minimized","onLoad","postMessage","onClose"],"mappings":"AAAe,MAAMA,EACnB,WAAAC,CAAYC,EAAIC,EAAU,IAGxB,OAFAC,KAAKF,GAAKA,EACVE,KAAKD,QAAUA,EACRC,IACX,CAEE,UAAMC,GACJ,MAAO,kBACX,CAEE,UAAMC,CAAKH,EAAU,IAQnB,OAPAC,KAAKG,OAASJ,EAAQI,OACtBH,KAAKI,QAAUL,EAAQK,QAElBJ,KAAKK,cACRL,KAAKK,YAAcL,KAAKF,GAAGQ,OAAON,KAAKM,OAAOP,IAC9CC,KAAKO,oBAEAP,KAAKK,WAChB,CAEE,gBAAAE,GAEEP,KAAKQ,SAAW,IAAIC,iBAAiB,wBAGrCT,KAAKU,GAAK,IAAID,iBAAiB,qBAE/BT,KAAKU,GAAGC,UAAYC,MAAOC,IAMzB,GAJUA,EAAMC,KAAKC,IAIE,eAAnBF,EAAMC,KAAKC,KAA8C,SAAtBF,EAAMC,KAAKE,OAAmB,CAGnE,IAAIC,EAAUJ,EAAMC,KAAKI,MAErBC,EAAWN,EAAMC,KAAKK,UAAYC,UAAUC,qBAAqB,OACjEC,EAAW,UAAUH,IAEzB,SAASI,EAAUC,EAAKL,EAAUM,GAChC,OAAQC,MAAMF,GACXG,MAAK,SAAUC,GAAO,OAAOA,EAAIC,aAAgB,IACjDF,MAAK,SAAUG,GAAO,OAAO,IAAIC,KAAK,CAACD,GAAMX,EAAU,CAAEa,KAAMP,GAAc,GAE1F,CAEQF,EAAUN,EAASE,EAAU,aAAaQ,MAAKf,MAAOqB,IAWpD,GAPAA,EAAKX,SAAWA,EAChBY,QAAQC,IAAI,gBAAiBF,EAAMA,aAAgBF,MAGjCK,SAASC,cAAc,QAGpCrC,KAAKI,UAAYJ,KAAKG,OAAQ,CACjC+B,QAAQI,KAAK,wDAEb,IAAIC,EAAOH,SAASC,cAAc,KAMlC,OALAE,EAAKC,KAAOC,IAAIC,gBAAgBT,GAChCM,EAAKI,SAAWxB,EAChBiB,SAASQ,KAAKC,YAAYN,GAC1BA,EAAKO,aACLV,SAASQ,KAAKG,YAAYR,EAEtC,CAEU,IAAIS,EAAcC,IAChBf,QAAQC,IAAI,oBAAoBc,OAIlC,IACE,IAAIC,QAAqB9B,UAAU+B,WAAWlB,EAAMe,GACpDd,QAAQC,IAAI,qBAAsBe,GAClC,IAAIE,EAAU,CACZC,GAAIrD,KAAKI,QACTkD,KAAMxD,GAAGyD,GACTvB,KAAMhC,KAAKG,OACXqD,KAAMN,GAERhB,QAAQC,IAAI,6BAA8BiB,GAE1CtD,GAAG2D,KAAK,qBAAsBL,GAC9BpD,KAAK0D,OACN,CAAC,MAAOC,GACPzB,QAAQ0B,MAAM,iBAAkBD,EAC5C,IAGA,EAGA,CAEE,MAAArD,CAAOP,EAAU,IACf,MAAO,CACL8D,GAAI,aACJC,MAAO,aACPC,KAAM,sDACNC,EAAG,IACHC,EAAG,GACHC,MAAO,IACPC,OAAQ,IACRC,SAAU,IACVC,UAAW,IACXC,OAAQC,EAAE,YAAY,GACtBC,cAAe,mDACfC,WAAW,EACXC,aAAa,EACbC,aAAa,EACbC,UAAU,EACVC,WAAW,EACXC,WAAW,EACXC,WAAW,EACXC,OAAQ,KACNhF,KAAKQ,SAASyE,YAAY,CAAEjD,KAAM,MAAOjB,IAAK,aAAcC,OAAQ,OAAQQ,IAAKzB,EAAQyB,KAAO,QAElG0D,QAAS,KAEPlF,KAAKK,YAAc,KACnBL,KAAKU,GAAGgD,SAGhB,CAEE,KAAAA,GACM1D,KAAKK,aAAeL,KAAKK,YAAYqD,OACvC1D,KAAKK,YAAYqD,QAEnB1D,KAAKK,YAAc,KACfL,KAAKU,IACPV,KAAKU,GAAGgD,QAEV1D,KAAKU,GAAK,IACd"}