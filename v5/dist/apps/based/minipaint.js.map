{"version":3,"file":"minipaint.js","sources":["../../../apps/based/minipaint/minipaint.js"],"sourcesContent":["export default class MiniPaint {\n  constructor(bp, options = {}) {\n    this.bp = bp;\n    this.options = options;\n    return this;\n  }\n\n  async init() {\n    return 'loaded MiniPaint';\n  }\n\nasync open(options = {}) {\n\n    if (options.src) {\n      this.src = options.src;\n    }\n\n    console.log('MiniPaint opened with options:', options);\n    if (options.output) {\n      this.output = options.output;\n    } else {\n      this.output = 'localhost';\n    }\n\n    if (options.context) {\n      this.context = options.context;\n    } else {\n      this.context = 'file-system';\n    }\n\n    this.win = this.bp.window(this.window());\n\n    // setup BroadcastChannel to listen for save events\n    this.broadcastChannel();\n\n    return this.win;\n\n  }\n\n  broadcastChannel() {\n\n     this.reciever = new BroadcastChannel(\"buddypond-minipaint\");\n\n    // creates a new BroadcastChannel for the desktop\n    this.bc = new BroadcastChannel(\"buddypond-desktop\");\n    // Listen for messages on the desktop channel\n    this.bc.onmessage = async (event) => {\n      // console.log('BroadcastChannel message received:', event.data);\n      let app = event.data.app;\n\n      // console.log(`received message from app: ${app}`);\n\n      if (event.data.app === 'minipaint' && event.data.action === 'save') {\n        console.log('BroadcastChannel save action received', event.data);\n\n        let dataURL = event.data.image; // Remark: this was sent over a broadcast channel\n        // console.log('Data URL received:', dataURL);\n        let fileName = event.data.fileName || buddypond.generateSafeFilename('png');\n        let filePath = `paints/${fileName}`;\n\n        function srcToFile(src, fileName, mimeType) {\n          return (fetch(src)\n            .then(function (res) { return res.arrayBuffer(); })\n            .then(function (buf) { return new File([buf], fileName, { type: mimeType }); })\n          );\n        }\n\n        srcToFile(dataURL, fileName, 'image/png').then(async (file) => {\n\n          // Create File from Blob\n          //const file = new File([blob], fileName, { type: blob.type });\n          file.filePath = filePath;\n          console.log('File created:', file, file instanceof File);\n\n          // Test image display\n          const testImage = document.createElement('img');\n\n          // if we have no context or output, save the file locally\n          if (!this.context || !this.output) {\n            console.warn('No context or output specified, saving file locally.');\n            // Save the file locally\n            let link = document.createElement('a');\n            link.href = URL.createObjectURL(file);\n            link.download = fileName;\n            document.body.appendChild(link);\n            link.click();\n            document.body.removeChild(link);\n            return;\n          }\n\n          let onProgress = (progress) => {\n            console.log(`Upload progress: ${progress}%`);\n          };\n\n          // âœ… Upload via buddypond API\n          try {\n            let resultingUrl = await buddypond.uploadFile(file, onProgress);\n            console.log('Upload successful:', resultingUrl);\n            let message = {\n              to: this.context,\n              from: bp.me,\n              type: this.output,\n              text: resultingUrl\n            };\n            console.log(\"sending multimedia message\", message);\n            bp.emit('buddy::sendMessage', message);\n            // close the minipaint window\n            this.close();\n            // now take this image and send it to the chat window as url message\n          } catch (err) {\n            console.error('Upload failed:', err);\n          }\n        });\n      }\n\n    }\n  }\n\n\n  window() {\n    let minipaintUrl = '/v5/apps/based/minipaint/vendor/minipaint.html';\n    if (this.src) {\n      minipaintUrl += '?image=' + encodeURI(this.src);\n    }\n    // append context and output to url\n    minipaintUrl += (this.src ? '&' : '?') + 'context=' + encodeURI(this.context) + '&output=' + encodeURI(this.output);\n    return {\n      id: 'minipaint',\n      title: 'miniPaint',\n      icon: 'desktop/assets/images/icons/icon_minipaint_64.webp',\n      x: 250,\n      y: 75,\n      width: 800,\n      height: 600,\n      parent: $('#desktop')[0],\n      iframeContent: minipaintUrl,\n      resizable: true,\n      minimizable: true,\n      maximizable: true,\n      closable: true,\n      focusable: true,\n      maximized: false,\n      minimized: false,\n      onClose: () => {\n        // close the broadcast channel when window is closed\n        if (this.bc) {\n          this.bc.close();\n          this.bc = null;\n        }\n        if (this.reciever) {\n          this.reciever.close();\n          this.reciever = null;\n        }\n        this.win = null;\n        this.src = null;\n        this.output = null;\n        this.context = null;\n        console.log('MiniPaint window closed');\n      }\n    }\n  }\n\n  close () {\n    if (this.win) {\n      this.win.close();\n      this.win = null;\n    }\n\n  }\n}"],"names":["MiniPaint","constructor","bp","options","this","init","open","src","console","log","output","context","win","window","broadcastChannel","reciever","BroadcastChannel","bc","onmessage","async","event","data","app","action","dataURL","image","fileName","buddypond","generateSafeFilename","filePath","srcToFile","mimeType","fetch","then","res","arrayBuffer","buf","File","type","file","document","createElement","warn","link","href","URL","createObjectURL","download","body","appendChild","click","removeChild","onProgress","progress","resultingUrl","uploadFile","message","to","from","me","text","emit","close","err","error","minipaintUrl","encodeURI","id","title","icon","x","y","width","height","parent","$","iframeContent","resizable","minimizable","maximizable","closable","focusable","maximized","minimized","onClose"],"mappings":"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"}