{"version":3,"file":"waveform-card.js","sources":["../../../../../../apps/based/card/cards/waveform/waveform-card.js"],"sourcesContent":["export default async function applyData(el, data) {\n    let soundUrl = data.url;\n\n    let WaveSurfer = await this.bp.importModule('/v5/apps/based/card/cards/waveform/vendor/wavesurfer.esm.js', {}, false)\n\n    console.log(\"WavesurferWavesurferWavesurfer\", WaveSurfer);\n\n    // console.log(\"APplying data to audio card\", data, soundUrl);\n    let audioCardEl = $(el).find('.waveform-card'); // TODO: remove data- attrs   here, not required?\n    audioCardEl.attr('data-url', soundUrl);\n    audioCardEl.attr('data-uuid', data.message.uuid);\n    audioCardEl.attr('data-to', data.message.to);\n    audioCardEl.attr('data-from', data.message.from);\n    audioCardEl.attr('data-context', data.message.context);\n\n\n\n    const wavesurfer = WaveSurfer.default.create({\n      container: audioCardEl[0],\n      waveColor: '#4F4A85',\n      progressColor: '#383351',\n      url: soundUrl,\n      mediaControls: true\n    })\n\n    wavesurfer.on('interaction', () => {\n      wavesurfer.play()\n    })\n\n\n    // Assuming data has properties like `title` and `soundURL`\n    $(el).find('.card-title').text(data.title);\n    $(el).find('.audio-player').attr('src', soundUrl);\n\n    // add click event to class=audioPlayer\n    $(el).find('.openAudioPlayer').click(async (e) => {\n        // console.log('audio-player clicked', soundUrl);\n        // play audio\n\n\n        // create the track\n        let t = bp.apps['audio-track'].createAudioTrack({\n            fileName: soundUrl,\n            url: soundUrl\n        });\n        console.log('created audio track', t);\n\n        // render the track\n        let trackElement = t.render();\n        console.log('rendered audio track', trackElement);\n\n        // append the track to the body\n        document.body.appendChild(trackElement);\n\n        // load the track\n        await t.load();\n        console.log(\"loaded audio track\", t);\n        \n        await t.play();\n\n\n        //$(el).find('.audio-player')[0].play();\n    });\n\n}"],"names":["async","applyData","el","data","soundUrl","url","WaveSurfer","this","bp","importModule","console","log","audioCardEl","$","find","attr","message","uuid","to","from","context","wavesurfer","default","create","container","waveColor","progressColor","mediaControls","on","play","text","title","click","e","t","apps","createAudioTrack","fileName","trackElement","render","document","body","appendChild","load"],"mappings":"AAAeA,eAAeC,EAAUC,EAAIC,GACxC,IAAIC,EAAWD,EAAKE,IAEhBC,QAAmBC,KAAKC,GAAGC,aAAa,8DAA+D,CAAA,GAAI,GAE/GC,QAAQC,IAAI,iCAAkCL,GAG9C,IAAIM,EAAcC,EAAEX,GAAIY,KAAK,kBAC7BF,EAAYG,KAAK,WAAYX,GAC7BQ,EAAYG,KAAK,YAAaZ,EAAKa,QAAQC,MAC3CL,EAAYG,KAAK,UAAWZ,EAAKa,QAAQE,IACzCN,EAAYG,KAAK,YAAaZ,EAAKa,QAAQG,MAC3CP,EAAYG,KAAK,eAAgBZ,EAAKa,QAAQI,SAI9C,MAAMC,EAAaf,EAAWgB,QAAQC,OAAO,CAC3CC,UAAWZ,EAAY,GACvBa,UAAW,UACXC,cAAe,UACfrB,IAAKD,EACLuB,eAAe,IAGjBN,EAAWO,GAAG,eAAe,KAC3BP,EAAWQ,UAKbhB,EAAEX,GAAIY,KAAK,eAAegB,KAAK3B,EAAK4B,OACpClB,EAAEX,GAAIY,KAAK,iBAAiBC,KAAK,MAAOX,GAGxCS,EAAEX,GAAIY,KAAK,oBAAoBkB,OAAMhC,MAAOiC,IAMxC,IAAIC,EAAI1B,GAAG2B,KAAK,eAAeC,iBAAiB,CAC5CC,SAAUjC,EACVC,IAAKD,IAETM,QAAQC,IAAI,sBAAuBuB,GAGnC,IAAII,EAAeJ,EAAEK,SACrB7B,QAAQC,IAAI,uBAAwB2B,GAGpCE,SAASC,KAAKC,YAAYJ,SAGpBJ,EAAES,OACRjC,QAAQC,IAAI,qBAAsBuB,SAE5BA,EAAEL,SAMhB"}