class t{constructor(t,e={}){this.data=t,this.parentElement=e.parentElement,this.desktop=e.desktop,this.depth=e.depth,this.options=e}render(t={}){t=this.data;const e=document.createElement("div");e.className=`folder ${t.class||""}`,this.depth>1&&e.classList.add("hidden"),e.classList.add("icon","shortcut");const o=document.createElement("a"),n=document.createElement("img");n.className="bp-desktop-icon",n.loading="lazy",n.src="desktop/assets/images/icons/icon_folder_64.webp";const s=document.createElement("span");s.className="title",s.textContent=t.label||t.name||t.id,o.appendChild(n),o.appendChild(s),e.appendChild(o),$(e).draggable({containment:"parent"}),e.addEventListener("mousedown",(t=>{this.options.onOpen()})),this.parentElement.appendChild(e)}open(){this.options.onOpen()}}function e(t){console.log("Saving shortcut:",t);JSON.parse(localStorage.getItem("bp-shortcuts")||"{}")[t.name]={label:t.label,shortcutType:t.shortcutType,target:t.target,icon:t.icon,description:t.parameters.description},this.bp.apps.desktop.addShortCut({name:t.name,label:t.label,icon:t.icon,description:t.description,textIcon:t.icon?null:t.label.charAt(0).toUpperCase()},{onClick:t.onClick}),this.arrangeShortcuts(2,{rowWidth:80,rowHeight:100,x:0,y:0,ignoreSavedPosition:!1}),this.createShortCutWindow.close()}const o={};function n(){let t=this.bp.settings.apps_installed||{},e=this.bp.settings.taskbar_apps||{},o=!1;if(Object.keys(t).length>0&&(o=Object.values(t).every((t=>!t.icon))),o&&(t={}),0===Object.keys(e).length){let t=["file-explorer","pad","buddylist","portfolio"];this.bp.isMobile()&&(t=["buddylist","portfolio","coin","fluid-simulation"]),t.forEach((t=>{let o=this.bp.apps.list[t];o?e[t]={app:o.app||t,context:o.context||"default",label:o.label||t,icon:o.icon||""}:console.warn(`App ${t} not found in desktop app list.`)}))}if(Object.keys(e).forEach((t=>{let o=e[t],n=this.bp.apps.list[o.id||t];if(!n)return void console.warn(`App ${t} not found in desktop app list.`);n.id=t,n.app=n.app||t;let s={...n};s.icon=s.icon?s.icon.replace(".png",".webp"):"",s?this.bp.apps.taskbar.taskBar.saveItem(s):console.warn(`App ${t} not found in desktop app list.`)})),0===Object.keys(t).length){["profile","buddylist","pad","pond","file-explorer","youtube","fluid-simulation","coin","portfolio"].forEach((e=>{let o=this.bp.apps.list[e];o?(console.log(`Adding default app shortcut: ${e}`),t[e]=o):console.warn(`App ${e} not found in desktop app list.`)})),this.bp.set("apps_installed",t),this.client.incrementAppInstallCount(Object.keys(t))}Object.keys(t).length>0&&Object.keys(t).forEach((e=>{let o=t[e];o.icon=o.icon?o.icon.replace(".png",".webp"):"",o&&bp.apps.desktop.addShortCut({name:e,...o},{onClick:()=>{bp.open(o.app||e,{context:o.context})}})}))}o.incrementAppInstallCount=async function(t){if(t){Array.isArray(t)||(t=[t]);try{await fetch(`${buddypond.appsEndpoint}/apps/install`,{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({appIds:t})})}catch(e){console.error(`Failed to increment install count for app ${t}:`,e)}}else console.error("No app name provided for incrementing install count")},o.getAppsStats=async function(){try{const t=await fetch(`${buddypond.appsEndpoint}/stats`,{method:"GET",headers:{"Content-Type":"application/json"}});if(!t.ok)throw new Error(`HTTP error! status: ${t.status}`);return await t.json()}catch(t){return console.error("Failed to fetch app stats:",t),null}};class s{constructor(t,e={}){this.bp=t,this.options=e,this.apps={},this.folders=[],this.container=document.createElement("div"),this.container.id="desktop-container",this.container.className="desktop-container",this.shortCutsContainer=document.createElement("div"),this.shortCutsContainer.id="desktop-shortcuts-container",this.shortCutsContainer.className="desktop-shortcuts-container",this.container.appendChild(this.shortCutsContainer),this.parent=e.parent||document.body,this.parent.appendChild(this.container),this.enableShortcutDragging=!0,this.enabledChatWindowButtons=[],"boolean"==typeof e.enableShortcutDragging&&(this.enableShortcutDragging=e.enableShortcutDragging),this.setupContextMenu()}async init(){return await this.bp.load("/v5/apps/based/desktop/desktop.css"),n.call(this),$(window).on("resize",(function(){p(),console.log("Window resized, rearranging desktop shortcuts")})),"loaded desktop"}async load(){}renderNode(e,o,n=0,s=!1){if(console.log("renderNode",e,o,n,s),e.children&&e.children.length>0)if(s)e.children.forEach((t=>this.renderNode(t,o,n+1)));else{new t(e,o,this,n).render()}else if(e.text.endsWith(".yml")){new i(e,o).render()}else{new File(e,o,this,n).render()}}toggleMute(){!1===this.bp.settings.audio_enabled?(this.bp.set("audio_enabled",!0),$(".volumeFull").show(),$(".volumeMuted").hide(),this.bp.play("desktop/assets/audio/VOLUME-ON.mp3",{tryHard:1/0})):(this.bp.set("audio_enabled",!1),$(".volumeFull").hide(),$(".volumeMuted").show())}openFolder(t){console.log("openFolder",t);const e=this.folders.find((e=>e.data.name===t));e?e.open():console.error(`Folder with ID ${t} not found.`)}}s.prototype.Folder=t,s.prototype.File=class{constructor(t,e,o,n){this.data=t,console.log("FIKLE DATA",t),this.parentElement=e,this.desktop=o,this.options={},this.depth=n}render(t={}){t=this.data;const e=document.createElement("div");e.className=`icon shortcut ${t.class||""}`,this.depth>1&&e.classList.add("hidden"),e.classList.add("icon","shortcut");const o=document.createElement("a"),n=document.createElement("img");n.className="bp-desktop-icon",n.loading="lazy",n.src=t.icon;const s=document.createElement("span");s.className="title",s.textContent=t.label||t.name||t.id,o.appendChild(n),o.appendChild(s),e.appendChild(o),e.addEventListener("click",this.options.onClick),this.enableShortcutDragging&&$(e).draggable({containment:"parent"}),this.parentElement.appendChild(e)}},s.prototype.addShortCut=function(t,e={},o){"function"!=typeof e.onClick&&(e.onClick=()=>console.log("desktop app - Missing options.onClick function",t.name));const n=document.createElement("div");n.className=`icon shortcut ${t.class||""} bp-desktop-shortcut`,n.setAttribute("data-app",t.name);const s=document.createElement("a");if(t.textIcon){const o=document.createElement("div");o.textContent=t.textIcon,o.style.fontSize="32px",o.style.position="relative",o.style.bottom="10px",e.imageStyle&&Object.keys(e.imageStyle).forEach((t=>{o.style[t]=e.imageStyle[t]})),s.appendChild(o)}else{const o=document.createElement("img");o.className="bp-desktop-icon",o.loading="lazy",o.src=t.icon,e.imageStyle&&Object.keys(e.imageStyle).forEach((t=>{o.style[t]=e.imageStyle[t]})),s.appendChild(o)}const i=document.createElement("span");i.className="title",i.textContent=t.label||t.name,s.appendChild(i),n.appendChild(s);let a=null,p=!1;n.addEventListener("pointerdown",(t=>{a={x:t.clientX,y:t.clientY},p=!1})),n.addEventListener("pointermove",(t=>{if(!a)return;const e=t.clientX-a.x,o=t.clientY-a.y;Math.sqrt(e*e+o*o)>5&&(p=!0)})),n.addEventListener("pointerup",(o=>{p||(o.preventDefault(),e.onClick(o,t)),a=null,p=!1;let s=this.bp.settings.apps_installed||{};return s[t.name]=s[t.name]||t,s[t.name].position={x:n.offsetLeft,y:n.offsetTop},this.bp.set("apps_installed",s),!1}));const r=document.createElement("div");r.className="desktop-context-menu";let l="";if("pad"!==t.name&&(l+='<div class="bp-context-menu-item" data-action="delete">Delete Shortcut</div>'),l+='\n        <div class="bp-context-menu-item" data-action="rename">Rename Shortcut</div>\n        <div class="bp-context-menu-item" data-action="add-taskbar">Add to Taskbar</div>\n    ',r.innerHTML=l,document.body.appendChild(r),document.addEventListener("click",(()=>{r.style.display="none"})),n.addEventListener("contextmenu",(t=>{$(".desktop-context-menu"),t.preventDefault();const e=t.clientX,o=t.clientY,n=window.innerWidth-150,s=window.innerHeight-80;r.style.left=`${Math.min(e,n)}px`,r.style.top=`${Math.min(o,s)}px`,r.style.display="block"})),r.addEventListener("click",(o=>{const n=o.target.getAttribute("data-action");"delete"===n?this.deleteShortcut(t.name,t,e.context):"rename"===n?this.renameShortCut(t.name,i,e.context):"add-taskbar"===n&&(t.id=t.name,this.bp.apps.taskbar.taskBar.addItem(t)),r.style.display="none"})),(o||this.shortCutsContainer).appendChild(n),this.enableShortcutDragging&&$(n).draggable({containment:"parent"}),t.chatWindowButton){let e=this.bp.apps.ui.windowManager.findWindows({app:"buddylist",type:t.chatWindowButton}),o=t.chatButton;if(!o)return void console.warn("No chatButton defined for app:",t.name);o.name=t.name,this.bp.apps.desktop.enabledChatWindowButtons&&this.bp.apps.desktop.enabledChatWindowButtons.push(o),this.bp.apps.buddylist&&this.bp.apps.buddylist.options.chatWindowButtons&&this.bp.apps.buddylist.options.chatWindowButtons.push(o),e.forEach((t=>{t.buttonBar?t.buttonBar.addButton(o):console.warn("No buttonBar found for pond chat window",t)}))}t.options=e;const c=e&&e.context?`${t.name}-${e.context}`:t.name;this.apps[c]=t,this.deleteShortcut=function(t,e,o){console.log(`Stub: Deleting shortcut for ${t}${o?`-${o}`:""}`),this.removeApp(t,e)}},s.prototype.addFolder=function(e){let o=this,n=document.createElement("div");n.className="folder-holder",e.items.forEach((t=>{!function(t,e){let n={};"string"==typeof t?(n.id=t,n.name=t,n.label=t):n=t,n.icon||(n.icon=`/desktop/assets/images/icons/icon_${n.id}_64.webp`),n.options=n.options||{},o.addShortCut({name:n.id,icon:n.icon,label:n.label},{onClick:()=>{bp.open(n.id,n.options)},...n.options},e)}(t,n)}));const s=new t(e,{desktop:this,parentElement:this.shortCutsContainer,depth:0,onOpen:()=>{this.arrangeShortcuts(4,{parent:n,x:0,y:20}),console.log("Folder opened:",e.name),this.bp.apps.ui.windowManager.createWindow({id:e.name,title:e.name,icon:"/desktop/assets/images/icons/icon_folder.png",width:e.width||400,height:e.height||150,parent:$("#desktop").get(0),content:n})}});this.folders.push(s),s.render()},s.prototype.removeShortCut=function(t,e){console.log(`Removing shortcut for app: ${t}`,e);const o=Array.from(this.shortCutsContainer.children).find((e=>$(e).data("app")===t));if(o&&this.shortCutsContainer.removeChild(o),e.chatWindowButton){this.bp.apps.desktop.enabledChatWindowButtons&&(this.bp.apps.desktop.enabledChatWindowButtons=this.bp.apps.desktop.enabledChatWindowButtons.filter((t=>t.text!==e.label))),this.bp.apps.buddylist.options.chatWindowButtons&&(this.bp.apps.buddylist.options.chatWindowButtons=this.bp.apps.buddylist.options.chatWindowButtons.filter((t=>t.text!==e.label))),this.bp.apps.ui.windowManager.findWindows({app:"buddylist",type:e.chatWindowButton}).forEach((t=>{t.buttonBar?t.buttonBar.removeButton(e.label):console.warn("No buttonBar found for pond chat window",t)}))}},s.prototype.arrangeShortcuts=function(t=2,e={rowWidth:80,rowHeight:100,x:0,y:0,ignoreSavedPosition:!0}){let o=e.parent||this.shortCutsContainer;"number"!=typeof e.rowWidth&&(e.rowWidth=this.bp.isMobile()?256:74),"number"!=typeof e.rowHeight&&(e.rowHeight=this.bp.isMobile()?256:100),"number"!=typeof e.x&&(e.x=0),"number"!=typeof e.y&&(e.y=0),window.discordView&&(e.x=75);const n=o.offsetHeight||600;Math.floor(n/e.rowHeight);let s=this.bp.settings.apps_installed||{},i=0,a=0;Array.from(o.children).forEach(((t,o)=>{const p=t.getAttribute("data-app");s[p];let r=e.x+i*e.rowWidth+15,l=e.y+a*e.rowHeight+(this.bp.isMobile()?100:0);l+e.rowHeight>n&&(i++,a=0,r=e.x+i*e.rowWidth+15,l=e.y+a*e.rowHeight+(this.bp.isMobile()?100:0)),s[p]=s[p]||{},s[p].position={x:r,y:l},t.style.position="absolute",t.style.left=`${r}px`,t.style.top=`${l}px`,a++})),this.bp.set("apps_installed",s)},s.prototype.setupContextMenu=function(){this.container.oncontextmenu=t=>{if(t.target.classList.contains("bp-desktop-icon"))return;$(".desktop-context-menu").hide(),t.preventDefault(),this.showContextMenu(t.clientX,t.clientY)}},s.prototype.showContextMenu=function(t,e){const o=document.createElement("div");o.className="desktop-context-menu",o.style.top=`${e}px`,o.style.left=`${t}px`,o.style.display="block",o.style.zIndex="9999",o.innerHTML='\n        <ul>\n            \x3c!-- <li onclick="bp.apps.desktop.createShortCut()">New Shortcut...</li> --\x3e\n            <li onclick="bp.apps.desktop.arrangeShortcuts(2, {\n    rowWidth: 80,\n    rowHeight: 100,\n    x: 0,\n    y: 0,\n    ignoreSavedPosition: true\n            })">Arrange Icons</li>\n            <li onclick="bp.open(\'profile\', { context: \'themes\' })">Desktop Settings</li>\n            <li onclick="bp.apps.wallpaper.removeWallpaper()">Remove Wallpaper</li>\n            <li onclick="bp.apps.desktop.viewSource()">View Source</li>\n        </ul>\n    ',document.body.appendChild(o),document.addEventListener("click",(()=>o.remove()),{once:!0})},s.prototype.viewSource=async function(t="https://raw.githubusercontent.com/Marak/buddypond/refs/heads/master/index.html"){const e=await fetch(t),o=await e.text();let n=await this.bp.open("editor-monaco",{content:o});console.log("viewSource",n),n.maximize()},s.prototype.showDesktopIcons=function(){this.shortCutsContainer.style.display="flex",this.bp.isMobile()&&(this.shortCutsContainer.style.position="absolute",this.shortCutsContainer.style.left="0px",this.shortCutsContainer.style.bottom="0px")};class i{constructor(t,e){this.data=t,this.parentElement=e}render(){const t=document.createElement("div");t.textContent=this.data.text||this.data.id,t.className="shortcut",t.classList.add("icon","shortcut","bp-desktop-iconp"),this.parentElement.appendChild(t)}}s.prototype.createShortCut=function(){if(this.createShortCutWindow)this.createShortCutWindow.focus(),this.createShortCutWindow.restore();else{let t=`\n        <div class="bp-create-shortcut-container">\n            <form id="create-shortcut-form" action="#" method="post">\n                <div class="bp-form-group">\n                    <label>Shortcut Type:</label>\n                    <div class="bp-shortcut-type">\n                        <label><input type="radio" name="shortcut-type" value="url" checked> URL</label>\n                        <label><input type="radio" name="shortcut-type" value="app"> App</label>\n                        <label><input type="radio" name="shortcut-type" value="buddyscript"> Buddyscript</label>\n                    </div>\n                </div>\n                <div class="bp-form-group bp-shortcut-examples">\n                    \x3c!-- radio group of examples --\x3e\n                    <label>Examples:</label>\n                    <div class="bp-shortcut-examples-list">\n                        <label><input type="radio" name="shortcut-example" value="url" checked>Open a Website</label>\n                        <label><input type="radio" name="shortcut-example" value="app">Open your own Pond</label>\n                        <label><input type="radio" name="shortcut-example" value="buddyscript">Run a Buddyscript</label>\n                    </div>\n                </div>\n                <div class="bp-form-group">\n                    <label for="shortcut-name">Shortcut Name:</label>\n                    <input type="text" id="shortcut-name" name="shortcut-name" required>\n                </div>\n                <div class="bp-form-group bp-app-select-group" style="display: none;">\n                    <label for="shortcut-apps">Select App:</label>\n                    <select id="shortcut-apps" name="shortcut-apps">\n                        <option value="">Select App</option>\n                        ${Object.keys(this.bp.apps.list).map((t=>`<option value="${t}">${this.bp.apps.list[t].label||t}</option>`)).join("")}\n                    </select>\n                </div>\n                <div class="bp-form-group bp-app-select-group">\n                    \x3c!-- context input, type input, output input --\x3e\n                    <label for="shortcut-context">Context:</label>\n                    <input type="text" id="shortcut-context" name="shortcut-context" placeholder="Optional, e.g. 'chatWindow'" value="">\n                    <label for="shortcut-type">Type:</label>\n                    <input type="text" id="shortcut-type" name="shortcut-type" placeholder="Optional, e.g. 'pond'" value="pond">\n                    <label for="shortcut-output">Output:</label>\n                    <input type="text" id="shortcut-output" name="shortcut-output" placeholder="Optional, e.g. 'chat'" value="chat">\n                </div>\n\n                <div class="bp-form-group bp-url-group">\n                    <label for="shortcut-url">URL:</label>\n                    <input type="text" id="shortcut-url" name="shortcut-url" required>\n                </div>\n\n                <div class="bp-form-group bp-command-group">\n                    <label for="shortcut-command">Command:</label>\n                    <input type="text" id="shortcut-command" name="shortcut-command" required>\n                </div>\n                <div class="bp-form-group">\n                    <label for="shortcut-icon">Icon URL:</label>\n                    <input type="text" id="shortcut-icon" name="shortcut-icon" placeholder="Optional">\n                </div>\n                <div class="bp-form-group">\n                    <label for="shortcut-description">Description:</label>\n                    <textarea id="shortcut-description" name="shortcut-description" placeholder="Optional"></textarea>\n                </div>\n                <div class="bp-form-group bp-form-actions">\n                    <button type="submit" class="bp-btn bp-btn-primary bp-create-shortcut-btn">Create Shortcut</button>\n                    <button type="button" class="bp-btn bp-btn-secondary" id="cancel-shortcut">Cancel</button>\n                </div>\n            </form>\n        </div>`;this.createShortCutWindow=this.bp.apps.ui.windowManager.createWindow({id:"create-shortcut",title:"Create Shortcut",icon:"desktop/assets/images/icons/icon_console_64.webp",x:250,y:75,width:600,height:600,minWidth:400,minHeight:300,parent:$("#desktop")[0],content:t,resizable:!0,minimizable:!0,maximizable:!0,closable:!0,focusable:!0,maximized:!1,minimized:!1,onClose:()=>{this.createShortCutWindow=null}}),$('#create-shortcut-form input[name="shortcut-type"]').on("change",(t=>{const e=t.target.value,o=$(".bp-app-select-group"),n=$(".bp-command-group"),s=$(".bp-url-group");"app"===e&&(o.show(),n.hide(),s.hide(),$("#shortcut-command").prop("required",!1),$("#shortcut-apps").prop("required",!0)),"buddyscript"===e&&(o.hide(),n.show(),s.hide(),$("#shortcut-command").prop("required",!0),$("#shortcut-apps").prop("required",!1)),"url"===e&&(s.show(),o.hide(),n.hide(),$("#shortcut-command").prop("required",!1),$("#shortcut-apps").prop("required",!1))})),$("#create-shortcut-form").on("submit",(t=>(t.preventDefault(),!1))),$(".bp-create-shortcut-btn").on("click",(async t=>{t.preventDefault();const o=$('input[name="shortcut-type"]:checked').val(),n=$("#shortcut-name").val().trim(),s=$("#shortcut-apps").val(),i=$("#shortcut-command").val().trim();let a=$("#shortcut-icon").val().trim();const p=$("#shortcut-description").val().trim();if(!n)return void alert("Shortcut Name is required.");if("app"===o&&!s)return void alert("Please select an app.");if("buddyscript"===o&&!i)return void alert("Command is required for URL or Buddyscript shortcuts.");if("url"===o&&!$("#shortcut-url").val().trim())return void alert("URL is required for URL shortcuts.");let r=null;if("app"===o){let t=$("#shortcut-context").val().trim()||"";console.log("appNameappName",s),a||(a=this.bp.apps.list[s]?.icon||"desktop/assets/images/icons/icon_default_64.webp"),r=()=>{bp.open(s,{context:t})}}if("buddyscript"===o&&(r=()=>{if(i){let t=this.bp.apps.buddyscript.parseCommand(i);console.log("got back buddyscript command",t),t.pipe&&t.pipe()}else alert("Please enter a valid Buddyscript command.")}),"url"===o){const t=$("#shortcut-url").val().trim();r=()=>{t?window.open(t,"_blank"):alert("Please enter a valid URL.")}}const l={name:n,label:n,shortcutType:o,icon:a||"desktop/assets/images/icons/icon_default_64.webp",description:p||"",target:"app"===o?this.bp.apps.list[s]?.onClick||`bp.open('${s}')`:i,onClick:r,parameters:{icon:a||"",description:p||""}};try{e.call(this,l)}catch(t){console.error("Error creating shortcut:",t),alert("Failed to create shortcut. Please check the console for details.")}return!1})),$("#cancel-shortcut").on("click",(()=>{this.createShortCutWindow.close()}))}},s.prototype.renameShortCut=function(t,e){const o=prompt("Enter new shortcut name:",e.textContent);if(!o||""===o.trim())return;let n=$(`.bp-desktop-shortcut[data-app="${t}"]`);console.log(`Renaming shortcut ${n} to ${o}`),console.log("Shortcut element:",n),e.textContent=o;let s=this.bp.get("apps_installed")||{};s[t]?(s[t].label=o,this.bp.set("apps_installed",s)):console.warn(`App ${t} not found in installed apps.`),console.log(`Shortcut renamed to ${o}`)},s.prototype.addApp=async function(t,e){if(!t)return void console.error("No app name provided");if(e||(console.log("this.bp.apps.desktop",this.bp.apps.desktop),e=this.bp.apps.list[t]),!e)return void console.error(`App ${t} not found in appstore`);this.client.incrementAppInstallCount(t),this.bp.apps.pad.data.appStats[t]=this.bp.apps.pad.data.appStats[t]||{},this.bp.apps.pad.data.appStats[t].installCount=(this.bp.apps.pad.data.appStats[t]?.installCount||0)+1,this.bp.play("desktop/assets/audio/APP-ADD.wav",{tryHard:1});let o=this.bp.settings.apps_installed||{};var n;o[t]=e,this.bp.set("apps_installed",o),this.bp.apps.desktop.addShortCut({name:t,...e},{onClick:()=>{this.bp.open(e.app||t,{context:e.context})}}),this.bp.apps.desktop.arrangeShortcuts(),await(n=777,new Promise((t=>setTimeout(t,n))))},s.prototype.removeApp=async function(t,e){this.bp.play("desktop/assets/audio/APP-REMOVE.wav");let o=this.bp.settings.apps_installed||{};var n;delete o[t],this.bp.set("apps_installed",o),this.bp.apps.desktop.removeShortCut(t,e),this.bp.apps.desktop.arrangeShortcuts(),await(n=777,new Promise((t=>setTimeout(t,n))))},s.prototype.client=o,s.prototype.bindKeyboardShortcuts=function(){document.addEventListener("keydown",(t=>{if(192===t.which)return t.preventDefault(),this.bp.open("console"),!1}))};const a=(()=>{let t=null,e=null;return{push:function(o,n,s,i=250){const a=function(t,e){try{const o=new URL(t,window.location.origin),n=new URL(e,window.location.origin),s=new URLSearchParams(o.search);for(const[t,e]of new URLSearchParams(n.search))s.set(t,e);return`${n.pathname}${s.toString()?"?"+s.toString():""}${n.hash}`}catch(t){return console.error("Error merging URL params:",t),e}}(window.location.href,s);e={stateObj:o,title:n,url:a},t&&clearTimeout(t),t=setTimeout((()=>{const{stateObj:o,title:n,url:s}=e;history.pushState(o,n,s),t=null}),i)}}})();function p(){if(!bp.apps.desktop||!bp.apps.ui)return console.log("bp.apps",bp.apps),void console.error("Desktop app or UI is not loaded yet, cannot arrange shortcuts.");bp.isMobile()?(bp.apps.desktop.arrangeShortcuts(4,{rowWidth:256,rowHeight:256,ignoreSavedPosition:!1}),bp.apps.desktop.showDesktopIcons()):bp.apps.desktop.arrangeShortcuts(2,{rowWidth:80,rowHeight:100,x:0,y:0,ignoreSavedPosition:!1}),setTimeout((()=>{bp.apps.desktop.showDesktopIcons()}),300)}window.arrangeDesktop=p,window.DelayedPushState=a;export{s as default};
//# sourceMappingURL=desktop.js.map
